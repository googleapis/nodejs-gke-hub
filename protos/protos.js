// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
(function(global, factory) { /* global define, require, module */

    /* AMD */ if (typeof define === 'function' && define.amd)
        define(["protobufjs/minimal"], factory);

    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)
        module.exports = factory(require("google-gax").protobufMinimal);

})(this, function($protobuf) {
    "use strict";

    // Common aliases
    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;
    
    // Exported root namespace
    var $root = $protobuf.roots._google_cloud_gke_hub_protos || ($protobuf.roots._google_cloud_gke_hub_protos = {});
    
    $root.google = (function() {
    
        /**
         * Namespace google.
         * @exports google
         * @namespace
         */
        var google = {};
    
        google.protobuf = (function() {
    
            /**
             * Namespace protobuf.
             * @memberof google
             * @namespace
             */
            var protobuf = {};
    
            protobuf.Timestamp = (function() {
    
                /**
                 * Properties of a Timestamp.
                 * @memberof google.protobuf
                 * @interface ITimestamp
                 * @property {number|Long|null} [seconds] Timestamp seconds
                 * @property {number|null} [nanos] Timestamp nanos
                 */
    
                /**
                 * Constructs a new Timestamp.
                 * @memberof google.protobuf
                 * @classdesc Represents a Timestamp.
                 * @implements ITimestamp
                 * @constructor
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 */
                function Timestamp(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Timestamp seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Timestamp nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 */
                Timestamp.prototype.nanos = 0;
    
                /**
                 * Creates a new Timestamp instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp=} [properties] Properties to set
                 * @returns {google.protobuf.Timestamp} Timestamp instance
                 */
                Timestamp.create = function create(properties) {
                    return new Timestamp(properties);
                };
    
                /**
                 * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.seconds = reader.int64();
                            break;
                        case 2:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Timestamp message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Timestamp} Timestamp
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Timestamp.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Timestamp message.
                 * @function verify
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Timestamp.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Timestamp} Timestamp
                 */
                Timestamp.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Timestamp)
                        return object;
                    var message = new $root.google.protobuf.Timestamp();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Timestamp
                 * @static
                 * @param {google.protobuf.Timestamp} message Timestamp
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Timestamp.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Timestamp to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Timestamp
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Timestamp.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Timestamp;
            })();
    
            protobuf.FileDescriptorSet = (function() {
    
                /**
                 * Properties of a FileDescriptorSet.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorSet
                 * @property {Array.<google.protobuf.IFileDescriptorProto>|null} [file] FileDescriptorSet file
                 */
    
                /**
                 * Constructs a new FileDescriptorSet.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorSet.
                 * @implements IFileDescriptorSet
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 */
                function FileDescriptorSet(properties) {
                    this.file = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorSet file.
                 * @member {Array.<google.protobuf.IFileDescriptorProto>} file
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 */
                FileDescriptorSet.prototype.file = $util.emptyArray;
    
                /**
                 * Creates a new FileDescriptorSet instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet instance
                 */
                FileDescriptorSet.create = function create(properties) {
                    return new FileDescriptorSet(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.file != null && message.file.length)
                        for (var i = 0; i < message.file.length; ++i)
                            $root.google.protobuf.FileDescriptorProto.encode(message.file[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorSet message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorSet.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.IFileDescriptorSet} message FileDescriptorSet message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorSet.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorSet();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.file && message.file.length))
                                message.file = [];
                            message.file.push($root.google.protobuf.FileDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorSet message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorSet.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorSet message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorSet.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.file != null && message.hasOwnProperty("file")) {
                        if (!Array.isArray(message.file))
                            return "file: array expected";
                        for (var i = 0; i < message.file.length; ++i) {
                            var error = $root.google.protobuf.FileDescriptorProto.verify(message.file[i]);
                            if (error)
                                return "file." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorSet message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorSet} FileDescriptorSet
                 */
                FileDescriptorSet.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorSet)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorSet();
                    if (object.file) {
                        if (!Array.isArray(object.file))
                            throw TypeError(".google.protobuf.FileDescriptorSet.file: array expected");
                        message.file = [];
                        for (var i = 0; i < object.file.length; ++i) {
                            if (typeof object.file[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorSet.file: object expected");
                            message.file[i] = $root.google.protobuf.FileDescriptorProto.fromObject(object.file[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorSet message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorSet
                 * @static
                 * @param {google.protobuf.FileDescriptorSet} message FileDescriptorSet
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorSet.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.file = [];
                    if (message.file && message.file.length) {
                        object.file = [];
                        for (var j = 0; j < message.file.length; ++j)
                            object.file[j] = $root.google.protobuf.FileDescriptorProto.toObject(message.file[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorSet to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorSet
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorSet.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorSet;
            })();
    
            protobuf.FileDescriptorProto = (function() {
    
                /**
                 * Properties of a FileDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFileDescriptorProto
                 * @property {string|null} [name] FileDescriptorProto name
                 * @property {string|null} ["package"] FileDescriptorProto package
                 * @property {Array.<string>|null} [dependency] FileDescriptorProto dependency
                 * @property {Array.<number>|null} [publicDependency] FileDescriptorProto publicDependency
                 * @property {Array.<number>|null} [weakDependency] FileDescriptorProto weakDependency
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [messageType] FileDescriptorProto messageType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] FileDescriptorProto enumType
                 * @property {Array.<google.protobuf.IServiceDescriptorProto>|null} [service] FileDescriptorProto service
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] FileDescriptorProto extension
                 * @property {google.protobuf.IFileOptions|null} [options] FileDescriptorProto options
                 * @property {google.protobuf.ISourceCodeInfo|null} [sourceCodeInfo] FileDescriptorProto sourceCodeInfo
                 * @property {string|null} [syntax] FileDescriptorProto syntax
                 */
    
                /**
                 * Constructs a new FileDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileDescriptorProto.
                 * @implements IFileDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 */
                function FileDescriptorProto(properties) {
                    this.dependency = [];
                    this.publicDependency = [];
                    this.weakDependency = [];
                    this.messageType = [];
                    this.enumType = [];
                    this.service = [];
                    this.extension = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.name = "";
    
                /**
                 * FileDescriptorProto package.
                 * @member {string} package
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype["package"] = "";
    
                /**
                 * FileDescriptorProto dependency.
                 * @member {Array.<string>} dependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.dependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto publicDependency.
                 * @member {Array.<number>} publicDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.publicDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto weakDependency.
                 * @member {Array.<number>} weakDependency
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.weakDependency = $util.emptyArray;
    
                /**
                 * FileDescriptorProto messageType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} messageType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.messageType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * FileDescriptorProto service.
                 * @member {Array.<google.protobuf.IServiceDescriptorProto>} service
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.service = $util.emptyArray;
    
                /**
                 * FileDescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * FileDescriptorProto options.
                 * @member {google.protobuf.IFileOptions|null|undefined} options
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.options = null;
    
                /**
                 * FileDescriptorProto sourceCodeInfo.
                 * @member {google.protobuf.ISourceCodeInfo|null|undefined} sourceCodeInfo
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.sourceCodeInfo = null;
    
                /**
                 * FileDescriptorProto syntax.
                 * @member {string} syntax
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 */
                FileDescriptorProto.prototype.syntax = "";
    
                /**
                 * Creates a new FileDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto instance
                 */
                FileDescriptorProto.create = function create(properties) {
                    return new FileDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message["package"] != null && Object.hasOwnProperty.call(message, "package"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message["package"]);
                    if (message.dependency != null && message.dependency.length)
                        for (var i = 0; i < message.dependency.length; ++i)
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.dependency[i]);
                    if (message.messageType != null && message.messageType.length)
                        for (var i = 0; i < message.messageType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.messageType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.service != null && message.service.length)
                        for (var i = 0; i < message.service.length; ++i)
                            $root.google.protobuf.ServiceDescriptorProto.encode(message.service[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FileOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.sourceCodeInfo != null && Object.hasOwnProperty.call(message, "sourceCodeInfo"))
                        $root.google.protobuf.SourceCodeInfo.encode(message.sourceCodeInfo, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.publicDependency != null && message.publicDependency.length)
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            writer.uint32(/* id 10, wireType 0 =*/80).int32(message.publicDependency[i]);
                    if (message.weakDependency != null && message.weakDependency.length)
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            writer.uint32(/* id 11, wireType 0 =*/88).int32(message.weakDependency[i]);
                    if (message.syntax != null && Object.hasOwnProperty.call(message, "syntax"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.syntax);
                    return writer;
                };
    
                /**
                 * Encodes the specified FileDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FileDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.IFileDescriptorProto} message FileDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message["package"] = reader.string();
                            break;
                        case 3:
                            if (!(message.dependency && message.dependency.length))
                                message.dependency = [];
                            message.dependency.push(reader.string());
                            break;
                        case 10:
                            if (!(message.publicDependency && message.publicDependency.length))
                                message.publicDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.publicDependency.push(reader.int32());
                            } else
                                message.publicDependency.push(reader.int32());
                            break;
                        case 11:
                            if (!(message.weakDependency && message.weakDependency.length))
                                message.weakDependency = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.weakDependency.push(reader.int32());
                            } else
                                message.weakDependency.push(reader.int32());
                            break;
                        case 4:
                            if (!(message.messageType && message.messageType.length))
                                message.messageType = [];
                            message.messageType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.service && message.service.length))
                                message.service = [];
                            message.service.push($root.google.protobuf.ServiceDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FileOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.decode(reader, reader.uint32());
                            break;
                        case 12:
                            message.syntax = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        if (!$util.isString(message["package"]))
                            return "package: string expected";
                    if (message.dependency != null && message.hasOwnProperty("dependency")) {
                        if (!Array.isArray(message.dependency))
                            return "dependency: array expected";
                        for (var i = 0; i < message.dependency.length; ++i)
                            if (!$util.isString(message.dependency[i]))
                                return "dependency: string[] expected";
                    }
                    if (message.publicDependency != null && message.hasOwnProperty("publicDependency")) {
                        if (!Array.isArray(message.publicDependency))
                            return "publicDependency: array expected";
                        for (var i = 0; i < message.publicDependency.length; ++i)
                            if (!$util.isInteger(message.publicDependency[i]))
                                return "publicDependency: integer[] expected";
                    }
                    if (message.weakDependency != null && message.hasOwnProperty("weakDependency")) {
                        if (!Array.isArray(message.weakDependency))
                            return "weakDependency: array expected";
                        for (var i = 0; i < message.weakDependency.length; ++i)
                            if (!$util.isInteger(message.weakDependency[i]))
                                return "weakDependency: integer[] expected";
                    }
                    if (message.messageType != null && message.hasOwnProperty("messageType")) {
                        if (!Array.isArray(message.messageType))
                            return "messageType: array expected";
                        for (var i = 0; i < message.messageType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.messageType[i]);
                            if (error)
                                return "messageType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.service != null && message.hasOwnProperty("service")) {
                        if (!Array.isArray(message.service))
                            return "service: array expected";
                        for (var i = 0; i < message.service.length; ++i) {
                            var error = $root.google.protobuf.ServiceDescriptorProto.verify(message.service[i]);
                            if (error)
                                return "service." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FileOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo")) {
                        var error = $root.google.protobuf.SourceCodeInfo.verify(message.sourceCodeInfo);
                        if (error)
                            return "sourceCodeInfo." + error;
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        if (!$util.isString(message.syntax))
                            return "syntax: string expected";
                    return null;
                };
    
                /**
                 * Creates a FileDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileDescriptorProto} FileDescriptorProto
                 */
                FileDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FileDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object["package"] != null)
                        message["package"] = String(object["package"]);
                    if (object.dependency) {
                        if (!Array.isArray(object.dependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.dependency: array expected");
                        message.dependency = [];
                        for (var i = 0; i < object.dependency.length; ++i)
                            message.dependency[i] = String(object.dependency[i]);
                    }
                    if (object.publicDependency) {
                        if (!Array.isArray(object.publicDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.publicDependency: array expected");
                        message.publicDependency = [];
                        for (var i = 0; i < object.publicDependency.length; ++i)
                            message.publicDependency[i] = object.publicDependency[i] | 0;
                    }
                    if (object.weakDependency) {
                        if (!Array.isArray(object.weakDependency))
                            throw TypeError(".google.protobuf.FileDescriptorProto.weakDependency: array expected");
                        message.weakDependency = [];
                        for (var i = 0; i < object.weakDependency.length; ++i)
                            message.weakDependency[i] = object.weakDependency[i] | 0;
                    }
                    if (object.messageType) {
                        if (!Array.isArray(object.messageType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.messageType: array expected");
                        message.messageType = [];
                        for (var i = 0; i < object.messageType.length; ++i) {
                            if (typeof object.messageType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.messageType: object expected");
                            message.messageType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.messageType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.FileDescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.service) {
                        if (!Array.isArray(object.service))
                            throw TypeError(".google.protobuf.FileDescriptorProto.service: array expected");
                        message.service = [];
                        for (var i = 0; i < object.service.length; ++i) {
                            if (typeof object.service[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.service: object expected");
                            message.service[i] = $root.google.protobuf.ServiceDescriptorProto.fromObject(object.service[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.FileDescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.FileDescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FileOptions.fromObject(object.options);
                    }
                    if (object.sourceCodeInfo != null) {
                        if (typeof object.sourceCodeInfo !== "object")
                            throw TypeError(".google.protobuf.FileDescriptorProto.sourceCodeInfo: object expected");
                        message.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.fromObject(object.sourceCodeInfo);
                    }
                    if (object.syntax != null)
                        message.syntax = String(object.syntax);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileDescriptorProto
                 * @static
                 * @param {google.protobuf.FileDescriptorProto} message FileDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.dependency = [];
                        object.messageType = [];
                        object.enumType = [];
                        object.service = [];
                        object.extension = [];
                        object.publicDependency = [];
                        object.weakDependency = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object["package"] = "";
                        object.options = null;
                        object.sourceCodeInfo = null;
                        object.syntax = "";
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message["package"] != null && message.hasOwnProperty("package"))
                        object["package"] = message["package"];
                    if (message.dependency && message.dependency.length) {
                        object.dependency = [];
                        for (var j = 0; j < message.dependency.length; ++j)
                            object.dependency[j] = message.dependency[j];
                    }
                    if (message.messageType && message.messageType.length) {
                        object.messageType = [];
                        for (var j = 0; j < message.messageType.length; ++j)
                            object.messageType[j] = $root.google.protobuf.DescriptorProto.toObject(message.messageType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.service && message.service.length) {
                        object.service = [];
                        for (var j = 0; j < message.service.length; ++j)
                            object.service[j] = $root.google.protobuf.ServiceDescriptorProto.toObject(message.service[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FileOptions.toObject(message.options, options);
                    if (message.sourceCodeInfo != null && message.hasOwnProperty("sourceCodeInfo"))
                        object.sourceCodeInfo = $root.google.protobuf.SourceCodeInfo.toObject(message.sourceCodeInfo, options);
                    if (message.publicDependency && message.publicDependency.length) {
                        object.publicDependency = [];
                        for (var j = 0; j < message.publicDependency.length; ++j)
                            object.publicDependency[j] = message.publicDependency[j];
                    }
                    if (message.weakDependency && message.weakDependency.length) {
                        object.weakDependency = [];
                        for (var j = 0; j < message.weakDependency.length; ++j)
                            object.weakDependency[j] = message.weakDependency[j];
                    }
                    if (message.syntax != null && message.hasOwnProperty("syntax"))
                        object.syntax = message.syntax;
                    return object;
                };
    
                /**
                 * Converts this FileDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FileDescriptorProto;
            })();
    
            protobuf.DescriptorProto = (function() {
    
                /**
                 * Properties of a DescriptorProto.
                 * @memberof google.protobuf
                 * @interface IDescriptorProto
                 * @property {string|null} [name] DescriptorProto name
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [field] DescriptorProto field
                 * @property {Array.<google.protobuf.IFieldDescriptorProto>|null} [extension] DescriptorProto extension
                 * @property {Array.<google.protobuf.IDescriptorProto>|null} [nestedType] DescriptorProto nestedType
                 * @property {Array.<google.protobuf.IEnumDescriptorProto>|null} [enumType] DescriptorProto enumType
                 * @property {Array.<google.protobuf.DescriptorProto.IExtensionRange>|null} [extensionRange] DescriptorProto extensionRange
                 * @property {Array.<google.protobuf.IOneofDescriptorProto>|null} [oneofDecl] DescriptorProto oneofDecl
                 * @property {google.protobuf.IMessageOptions|null} [options] DescriptorProto options
                 * @property {Array.<google.protobuf.DescriptorProto.IReservedRange>|null} [reservedRange] DescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] DescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new DescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a DescriptorProto.
                 * @implements IDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 */
                function DescriptorProto(properties) {
                    this.field = [];
                    this.extension = [];
                    this.nestedType = [];
                    this.enumType = [];
                    this.extensionRange = [];
                    this.oneofDecl = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.name = "";
    
                /**
                 * DescriptorProto field.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} field
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.field = $util.emptyArray;
    
                /**
                 * DescriptorProto extension.
                 * @member {Array.<google.protobuf.IFieldDescriptorProto>} extension
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extension = $util.emptyArray;
    
                /**
                 * DescriptorProto nestedType.
                 * @member {Array.<google.protobuf.IDescriptorProto>} nestedType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.nestedType = $util.emptyArray;
    
                /**
                 * DescriptorProto enumType.
                 * @member {Array.<google.protobuf.IEnumDescriptorProto>} enumType
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.enumType = $util.emptyArray;
    
                /**
                 * DescriptorProto extensionRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IExtensionRange>} extensionRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.extensionRange = $util.emptyArray;
    
                /**
                 * DescriptorProto oneofDecl.
                 * @member {Array.<google.protobuf.IOneofDescriptorProto>} oneofDecl
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.oneofDecl = $util.emptyArray;
    
                /**
                 * DescriptorProto options.
                 * @member {google.protobuf.IMessageOptions|null|undefined} options
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.options = null;
    
                /**
                 * DescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.DescriptorProto.IReservedRange>} reservedRange
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * DescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 */
                DescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new DescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto instance
                 */
                DescriptorProto.create = function create(properties) {
                    return new DescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified DescriptorProto message. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.field != null && message.field.length)
                        for (var i = 0; i < message.field.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.field[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.nestedType != null && message.nestedType.length)
                        for (var i = 0; i < message.nestedType.length; ++i)
                            $root.google.protobuf.DescriptorProto.encode(message.nestedType[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.enumType != null && message.enumType.length)
                        for (var i = 0; i < message.enumType.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.encode(message.enumType[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.extensionRange != null && message.extensionRange.length)
                        for (var i = 0; i < message.extensionRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ExtensionRange.encode(message.extensionRange[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.extension != null && message.extension.length)
                        for (var i = 0; i < message.extension.length; ++i)
                            $root.google.protobuf.FieldDescriptorProto.encode(message.extension[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MessageOptions.encode(message.options, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                    if (message.oneofDecl != null && message.oneofDecl.length)
                        for (var i = 0; i < message.oneofDecl.length; ++i)
                            $root.google.protobuf.OneofDescriptorProto.encode(message.oneofDecl[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.DescriptorProto.ReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 10, wireType 2 =*/82).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified DescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.IDescriptorProto} message DescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.field && message.field.length))
                                message.field = [];
                            message.field.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 6:
                            if (!(message.extension && message.extension.length))
                                message.extension = [];
                            message.extension.push($root.google.protobuf.FieldDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            if (!(message.nestedType && message.nestedType.length))
                                message.nestedType = [];
                            message.nestedType.push($root.google.protobuf.DescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 4:
                            if (!(message.enumType && message.enumType.length))
                                message.enumType = [];
                            message.enumType.push($root.google.protobuf.EnumDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.extensionRange && message.extensionRange.length))
                                message.extensionRange = [];
                            message.extensionRange.push($root.google.protobuf.DescriptorProto.ExtensionRange.decode(reader, reader.uint32()));
                            break;
                        case 8:
                            if (!(message.oneofDecl && message.oneofDecl.length))
                                message.oneofDecl = [];
                            message.oneofDecl.push($root.google.protobuf.OneofDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 7:
                            message.options = $root.google.protobuf.MessageOptions.decode(reader, reader.uint32());
                            break;
                        case 9:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.DescriptorProto.ReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 10:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.field != null && message.hasOwnProperty("field")) {
                        if (!Array.isArray(message.field))
                            return "field: array expected";
                        for (var i = 0; i < message.field.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.field[i]);
                            if (error)
                                return "field." + error;
                        }
                    }
                    if (message.extension != null && message.hasOwnProperty("extension")) {
                        if (!Array.isArray(message.extension))
                            return "extension: array expected";
                        for (var i = 0; i < message.extension.length; ++i) {
                            var error = $root.google.protobuf.FieldDescriptorProto.verify(message.extension[i]);
                            if (error)
                                return "extension." + error;
                        }
                    }
                    if (message.nestedType != null && message.hasOwnProperty("nestedType")) {
                        if (!Array.isArray(message.nestedType))
                            return "nestedType: array expected";
                        for (var i = 0; i < message.nestedType.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.verify(message.nestedType[i]);
                            if (error)
                                return "nestedType." + error;
                        }
                    }
                    if (message.enumType != null && message.hasOwnProperty("enumType")) {
                        if (!Array.isArray(message.enumType))
                            return "enumType: array expected";
                        for (var i = 0; i < message.enumType.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.verify(message.enumType[i]);
                            if (error)
                                return "enumType." + error;
                        }
                    }
                    if (message.extensionRange != null && message.hasOwnProperty("extensionRange")) {
                        if (!Array.isArray(message.extensionRange))
                            return "extensionRange: array expected";
                        for (var i = 0; i < message.extensionRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ExtensionRange.verify(message.extensionRange[i]);
                            if (error)
                                return "extensionRange." + error;
                        }
                    }
                    if (message.oneofDecl != null && message.hasOwnProperty("oneofDecl")) {
                        if (!Array.isArray(message.oneofDecl))
                            return "oneofDecl: array expected";
                        for (var i = 0; i < message.oneofDecl.length; ++i) {
                            var error = $root.google.protobuf.OneofDescriptorProto.verify(message.oneofDecl[i]);
                            if (error)
                                return "oneofDecl." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MessageOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.DescriptorProto.ReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a DescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.DescriptorProto} DescriptorProto
                 */
                DescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.DescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.DescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.field) {
                        if (!Array.isArray(object.field))
                            throw TypeError(".google.protobuf.DescriptorProto.field: array expected");
                        message.field = [];
                        for (var i = 0; i < object.field.length; ++i) {
                            if (typeof object.field[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.field: object expected");
                            message.field[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.field[i]);
                        }
                    }
                    if (object.extension) {
                        if (!Array.isArray(object.extension))
                            throw TypeError(".google.protobuf.DescriptorProto.extension: array expected");
                        message.extension = [];
                        for (var i = 0; i < object.extension.length; ++i) {
                            if (typeof object.extension[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extension: object expected");
                            message.extension[i] = $root.google.protobuf.FieldDescriptorProto.fromObject(object.extension[i]);
                        }
                    }
                    if (object.nestedType) {
                        if (!Array.isArray(object.nestedType))
                            throw TypeError(".google.protobuf.DescriptorProto.nestedType: array expected");
                        message.nestedType = [];
                        for (var i = 0; i < object.nestedType.length; ++i) {
                            if (typeof object.nestedType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.nestedType: object expected");
                            message.nestedType[i] = $root.google.protobuf.DescriptorProto.fromObject(object.nestedType[i]);
                        }
                    }
                    if (object.enumType) {
                        if (!Array.isArray(object.enumType))
                            throw TypeError(".google.protobuf.DescriptorProto.enumType: array expected");
                        message.enumType = [];
                        for (var i = 0; i < object.enumType.length; ++i) {
                            if (typeof object.enumType[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.enumType: object expected");
                            message.enumType[i] = $root.google.protobuf.EnumDescriptorProto.fromObject(object.enumType[i]);
                        }
                    }
                    if (object.extensionRange) {
                        if (!Array.isArray(object.extensionRange))
                            throw TypeError(".google.protobuf.DescriptorProto.extensionRange: array expected");
                        message.extensionRange = [];
                        for (var i = 0; i < object.extensionRange.length; ++i) {
                            if (typeof object.extensionRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.extensionRange: object expected");
                            message.extensionRange[i] = $root.google.protobuf.DescriptorProto.ExtensionRange.fromObject(object.extensionRange[i]);
                        }
                    }
                    if (object.oneofDecl) {
                        if (!Array.isArray(object.oneofDecl))
                            throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: array expected");
                        message.oneofDecl = [];
                        for (var i = 0; i < object.oneofDecl.length; ++i) {
                            if (typeof object.oneofDecl[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.oneofDecl: object expected");
                            message.oneofDecl[i] = $root.google.protobuf.OneofDescriptorProto.fromObject(object.oneofDecl[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.DescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MessageOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.DescriptorProto.ReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.DescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a DescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.DescriptorProto
                 * @static
                 * @param {google.protobuf.DescriptorProto} message DescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.field = [];
                        object.nestedType = [];
                        object.enumType = [];
                        object.extensionRange = [];
                        object.extension = [];
                        object.oneofDecl = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.field && message.field.length) {
                        object.field = [];
                        for (var j = 0; j < message.field.length; ++j)
                            object.field[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.field[j], options);
                    }
                    if (message.nestedType && message.nestedType.length) {
                        object.nestedType = [];
                        for (var j = 0; j < message.nestedType.length; ++j)
                            object.nestedType[j] = $root.google.protobuf.DescriptorProto.toObject(message.nestedType[j], options);
                    }
                    if (message.enumType && message.enumType.length) {
                        object.enumType = [];
                        for (var j = 0; j < message.enumType.length; ++j)
                            object.enumType[j] = $root.google.protobuf.EnumDescriptorProto.toObject(message.enumType[j], options);
                    }
                    if (message.extensionRange && message.extensionRange.length) {
                        object.extensionRange = [];
                        for (var j = 0; j < message.extensionRange.length; ++j)
                            object.extensionRange[j] = $root.google.protobuf.DescriptorProto.ExtensionRange.toObject(message.extensionRange[j], options);
                    }
                    if (message.extension && message.extension.length) {
                        object.extension = [];
                        for (var j = 0; j < message.extension.length; ++j)
                            object.extension[j] = $root.google.protobuf.FieldDescriptorProto.toObject(message.extension[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MessageOptions.toObject(message.options, options);
                    if (message.oneofDecl && message.oneofDecl.length) {
                        object.oneofDecl = [];
                        for (var j = 0; j < message.oneofDecl.length; ++j)
                            object.oneofDecl[j] = $root.google.protobuf.OneofDescriptorProto.toObject(message.oneofDecl[j], options);
                    }
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.DescriptorProto.ReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this DescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.DescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                DescriptorProto.ExtensionRange = (function() {
    
                    /**
                     * Properties of an ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IExtensionRange
                     * @property {number|null} [start] ExtensionRange start
                     * @property {number|null} [end] ExtensionRange end
                     * @property {google.protobuf.IExtensionRangeOptions|null} [options] ExtensionRange options
                     */
    
                    /**
                     * Constructs a new ExtensionRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents an ExtensionRange.
                     * @implements IExtensionRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     */
                    function ExtensionRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ExtensionRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.start = 0;
    
                    /**
                     * ExtensionRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.end = 0;
    
                    /**
                     * ExtensionRange options.
                     * @member {google.protobuf.IExtensionRangeOptions|null|undefined} options
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     */
                    ExtensionRange.prototype.options = null;
    
                    /**
                     * Creates a new ExtensionRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange instance
                     */
                    ExtensionRange.create = function create(properties) {
                        return new ExtensionRange(properties);
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                            $root.google.protobuf.ExtensionRangeOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ExtensionRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ExtensionRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IExtensionRange} message ExtensionRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ExtensionRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            case 3:
                                message.options = $root.google.protobuf.ExtensionRangeOptions.decode(reader, reader.uint32());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an ExtensionRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ExtensionRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an ExtensionRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ExtensionRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        if (message.options != null && message.hasOwnProperty("options")) {
                            var error = $root.google.protobuf.ExtensionRangeOptions.verify(message.options);
                            if (error)
                                return "options." + error;
                        }
                        return null;
                    };
    
                    /**
                     * Creates an ExtensionRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ExtensionRange} ExtensionRange
                     */
                    ExtensionRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ExtensionRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ExtensionRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        if (object.options != null) {
                            if (typeof object.options !== "object")
                                throw TypeError(".google.protobuf.DescriptorProto.ExtensionRange.options: object expected");
                            message.options = $root.google.protobuf.ExtensionRangeOptions.fromObject(object.options);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an ExtensionRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ExtensionRange} message ExtensionRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ExtensionRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                            object.options = null;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        if (message.options != null && message.hasOwnProperty("options"))
                            object.options = $root.google.protobuf.ExtensionRangeOptions.toObject(message.options, options);
                        return object;
                    };
    
                    /**
                     * Converts this ExtensionRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ExtensionRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ExtensionRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ExtensionRange;
                })();
    
                DescriptorProto.ReservedRange = (function() {
    
                    /**
                     * Properties of a ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @interface IReservedRange
                     * @property {number|null} [start] ReservedRange start
                     * @property {number|null} [end] ReservedRange end
                     */
    
                    /**
                     * Constructs a new ReservedRange.
                     * @memberof google.protobuf.DescriptorProto
                     * @classdesc Represents a ReservedRange.
                     * @implements IReservedRange
                     * @constructor
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     */
                    function ReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * ReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.start = 0;
    
                    /**
                     * ReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     */
                    ReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new ReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange instance
                     */
                    ReservedRange.create = function create(properties) {
                        return new ReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified ReservedRange message. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified ReservedRange message, length delimited. Does not implicitly {@link google.protobuf.DescriptorProto.ReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.IReservedRange} message ReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    ReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a ReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    ReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a ReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    ReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates a ReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.DescriptorProto.ReservedRange} ReservedRange
                     */
                    ReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.DescriptorProto.ReservedRange)
                            return object;
                        var message = new $root.google.protobuf.DescriptorProto.ReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a ReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @static
                     * @param {google.protobuf.DescriptorProto.ReservedRange} message ReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    ReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this ReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.DescriptorProto.ReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    ReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return ReservedRange;
                })();
    
                return DescriptorProto;
            })();
    
            protobuf.ExtensionRangeOptions = (function() {
    
                /**
                 * Properties of an ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @interface IExtensionRangeOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ExtensionRangeOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new ExtensionRangeOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an ExtensionRangeOptions.
                 * @implements IExtensionRangeOptions
                 * @constructor
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 */
                function ExtensionRangeOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ExtensionRangeOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 */
                ExtensionRangeOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new ExtensionRangeOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions instance
                 */
                ExtensionRangeOptions.create = function create(properties) {
                    return new ExtensionRangeOptions(properties);
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ExtensionRangeOptions message, length delimited. Does not implicitly {@link google.protobuf.ExtensionRangeOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.IExtensionRangeOptions} message ExtensionRangeOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ExtensionRangeOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ExtensionRangeOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an ExtensionRangeOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ExtensionRangeOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an ExtensionRangeOptions message.
                 * @function verify
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ExtensionRangeOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an ExtensionRangeOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ExtensionRangeOptions} ExtensionRangeOptions
                 */
                ExtensionRangeOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ExtensionRangeOptions)
                        return object;
                    var message = new $root.google.protobuf.ExtensionRangeOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ExtensionRangeOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an ExtensionRangeOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @static
                 * @param {google.protobuf.ExtensionRangeOptions} message ExtensionRangeOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ExtensionRangeOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ExtensionRangeOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ExtensionRangeOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ExtensionRangeOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ExtensionRangeOptions;
            })();
    
            protobuf.FieldDescriptorProto = (function() {
    
                /**
                 * Properties of a FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IFieldDescriptorProto
                 * @property {string|null} [name] FieldDescriptorProto name
                 * @property {number|null} [number] FieldDescriptorProto number
                 * @property {google.protobuf.FieldDescriptorProto.Label|null} [label] FieldDescriptorProto label
                 * @property {google.protobuf.FieldDescriptorProto.Type|null} [type] FieldDescriptorProto type
                 * @property {string|null} [typeName] FieldDescriptorProto typeName
                 * @property {string|null} [extendee] FieldDescriptorProto extendee
                 * @property {string|null} [defaultValue] FieldDescriptorProto defaultValue
                 * @property {number|null} [oneofIndex] FieldDescriptorProto oneofIndex
                 * @property {string|null} [jsonName] FieldDescriptorProto jsonName
                 * @property {google.protobuf.IFieldOptions|null} [options] FieldDescriptorProto options
                 * @property {boolean|null} [proto3Optional] FieldDescriptorProto proto3Optional
                 */
    
                /**
                 * Constructs a new FieldDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldDescriptorProto.
                 * @implements IFieldDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 */
                function FieldDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.name = "";
    
                /**
                 * FieldDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.number = 0;
    
                /**
                 * FieldDescriptorProto label.
                 * @member {google.protobuf.FieldDescriptorProto.Label} label
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.label = 1;
    
                /**
                 * FieldDescriptorProto type.
                 * @member {google.protobuf.FieldDescriptorProto.Type} type
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.type = 1;
    
                /**
                 * FieldDescriptorProto typeName.
                 * @member {string} typeName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.typeName = "";
    
                /**
                 * FieldDescriptorProto extendee.
                 * @member {string} extendee
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.extendee = "";
    
                /**
                 * FieldDescriptorProto defaultValue.
                 * @member {string} defaultValue
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.defaultValue = "";
    
                /**
                 * FieldDescriptorProto oneofIndex.
                 * @member {number} oneofIndex
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.oneofIndex = 0;
    
                /**
                 * FieldDescriptorProto jsonName.
                 * @member {string} jsonName
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.jsonName = "";
    
                /**
                 * FieldDescriptorProto options.
                 * @member {google.protobuf.IFieldOptions|null|undefined} options
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.options = null;
    
                /**
                 * FieldDescriptorProto proto3Optional.
                 * @member {boolean} proto3Optional
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 */
                FieldDescriptorProto.prototype.proto3Optional = false;
    
                /**
                 * Creates a new FieldDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto instance
                 */
                FieldDescriptorProto.create = function create(properties) {
                    return new FieldDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.extendee != null && Object.hasOwnProperty.call(message, "extendee"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.extendee);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 3, wireType 0 =*/24).int32(message.number);
                    if (message.label != null && Object.hasOwnProperty.call(message, "label"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.label);
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int32(message.type);
                    if (message.typeName != null && Object.hasOwnProperty.call(message, "typeName"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.typeName);
                    if (message.defaultValue != null && Object.hasOwnProperty.call(message, "defaultValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.defaultValue);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.FieldOptions.encode(message.options, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.oneofIndex != null && Object.hasOwnProperty.call(message, "oneofIndex"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.oneofIndex);
                    if (message.jsonName != null && Object.hasOwnProperty.call(message, "jsonName"))
                        writer.uint32(/* id 10, wireType 2 =*/82).string(message.jsonName);
                    if (message.proto3Optional != null && Object.hasOwnProperty.call(message, "proto3Optional"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.proto3Optional);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.FieldDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.IFieldDescriptorProto} message FieldDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 3:
                            message.number = reader.int32();
                            break;
                        case 4:
                            message.label = reader.int32();
                            break;
                        case 5:
                            message.type = reader.int32();
                            break;
                        case 6:
                            message.typeName = reader.string();
                            break;
                        case 2:
                            message.extendee = reader.string();
                            break;
                        case 7:
                            message.defaultValue = reader.string();
                            break;
                        case 9:
                            message.oneofIndex = reader.int32();
                            break;
                        case 10:
                            message.jsonName = reader.string();
                            break;
                        case 8:
                            message.options = $root.google.protobuf.FieldOptions.decode(reader, reader.uint32());
                            break;
                        case 17:
                            message.proto3Optional = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.label != null && message.hasOwnProperty("label"))
                        switch (message.label) {
                        default:
                            return "label: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.type != null && message.hasOwnProperty("type"))
                        switch (message.type) {
                        default:
                            return "type: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                            break;
                        }
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        if (!$util.isString(message.typeName))
                            return "typeName: string expected";
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        if (!$util.isString(message.extendee))
                            return "extendee: string expected";
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        if (!$util.isString(message.defaultValue))
                            return "defaultValue: string expected";
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        if (!$util.isInteger(message.oneofIndex))
                            return "oneofIndex: integer expected";
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        if (!$util.isString(message.jsonName))
                            return "jsonName: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.FieldOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        if (typeof message.proto3Optional !== "boolean")
                            return "proto3Optional: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a FieldDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldDescriptorProto} FieldDescriptorProto
                 */
                FieldDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.FieldDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    switch (object.label) {
                    case "LABEL_OPTIONAL":
                    case 1:
                        message.label = 1;
                        break;
                    case "LABEL_REQUIRED":
                    case 2:
                        message.label = 2;
                        break;
                    case "LABEL_REPEATED":
                    case 3:
                        message.label = 3;
                        break;
                    }
                    switch (object.type) {
                    case "TYPE_DOUBLE":
                    case 1:
                        message.type = 1;
                        break;
                    case "TYPE_FLOAT":
                    case 2:
                        message.type = 2;
                        break;
                    case "TYPE_INT64":
                    case 3:
                        message.type = 3;
                        break;
                    case "TYPE_UINT64":
                    case 4:
                        message.type = 4;
                        break;
                    case "TYPE_INT32":
                    case 5:
                        message.type = 5;
                        break;
                    case "TYPE_FIXED64":
                    case 6:
                        message.type = 6;
                        break;
                    case "TYPE_FIXED32":
                    case 7:
                        message.type = 7;
                        break;
                    case "TYPE_BOOL":
                    case 8:
                        message.type = 8;
                        break;
                    case "TYPE_STRING":
                    case 9:
                        message.type = 9;
                        break;
                    case "TYPE_GROUP":
                    case 10:
                        message.type = 10;
                        break;
                    case "TYPE_MESSAGE":
                    case 11:
                        message.type = 11;
                        break;
                    case "TYPE_BYTES":
                    case 12:
                        message.type = 12;
                        break;
                    case "TYPE_UINT32":
                    case 13:
                        message.type = 13;
                        break;
                    case "TYPE_ENUM":
                    case 14:
                        message.type = 14;
                        break;
                    case "TYPE_SFIXED32":
                    case 15:
                        message.type = 15;
                        break;
                    case "TYPE_SFIXED64":
                    case 16:
                        message.type = 16;
                        break;
                    case "TYPE_SINT32":
                    case 17:
                        message.type = 17;
                        break;
                    case "TYPE_SINT64":
                    case 18:
                        message.type = 18;
                        break;
                    }
                    if (object.typeName != null)
                        message.typeName = String(object.typeName);
                    if (object.extendee != null)
                        message.extendee = String(object.extendee);
                    if (object.defaultValue != null)
                        message.defaultValue = String(object.defaultValue);
                    if (object.oneofIndex != null)
                        message.oneofIndex = object.oneofIndex | 0;
                    if (object.jsonName != null)
                        message.jsonName = String(object.jsonName);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.FieldDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.FieldOptions.fromObject(object.options);
                    }
                    if (object.proto3Optional != null)
                        message.proto3Optional = Boolean(object.proto3Optional);
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @static
                 * @param {google.protobuf.FieldDescriptorProto} message FieldDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.extendee = "";
                        object.number = 0;
                        object.label = options.enums === String ? "LABEL_OPTIONAL" : 1;
                        object.type = options.enums === String ? "TYPE_DOUBLE" : 1;
                        object.typeName = "";
                        object.defaultValue = "";
                        object.options = null;
                        object.oneofIndex = 0;
                        object.jsonName = "";
                        object.proto3Optional = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.extendee != null && message.hasOwnProperty("extendee"))
                        object.extendee = message.extendee;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.label != null && message.hasOwnProperty("label"))
                        object.label = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Label[message.label] : message.label;
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = options.enums === String ? $root.google.protobuf.FieldDescriptorProto.Type[message.type] : message.type;
                    if (message.typeName != null && message.hasOwnProperty("typeName"))
                        object.typeName = message.typeName;
                    if (message.defaultValue != null && message.hasOwnProperty("defaultValue"))
                        object.defaultValue = message.defaultValue;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.FieldOptions.toObject(message.options, options);
                    if (message.oneofIndex != null && message.hasOwnProperty("oneofIndex"))
                        object.oneofIndex = message.oneofIndex;
                    if (message.jsonName != null && message.hasOwnProperty("jsonName"))
                        object.jsonName = message.jsonName;
                    if (message.proto3Optional != null && message.hasOwnProperty("proto3Optional"))
                        object.proto3Optional = message.proto3Optional;
                    return object;
                };
    
                /**
                 * Converts this FieldDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * Type enum.
                 * @name google.protobuf.FieldDescriptorProto.Type
                 * @enum {number}
                 * @property {number} TYPE_DOUBLE=1 TYPE_DOUBLE value
                 * @property {number} TYPE_FLOAT=2 TYPE_FLOAT value
                 * @property {number} TYPE_INT64=3 TYPE_INT64 value
                 * @property {number} TYPE_UINT64=4 TYPE_UINT64 value
                 * @property {number} TYPE_INT32=5 TYPE_INT32 value
                 * @property {number} TYPE_FIXED64=6 TYPE_FIXED64 value
                 * @property {number} TYPE_FIXED32=7 TYPE_FIXED32 value
                 * @property {number} TYPE_BOOL=8 TYPE_BOOL value
                 * @property {number} TYPE_STRING=9 TYPE_STRING value
                 * @property {number} TYPE_GROUP=10 TYPE_GROUP value
                 * @property {number} TYPE_MESSAGE=11 TYPE_MESSAGE value
                 * @property {number} TYPE_BYTES=12 TYPE_BYTES value
                 * @property {number} TYPE_UINT32=13 TYPE_UINT32 value
                 * @property {number} TYPE_ENUM=14 TYPE_ENUM value
                 * @property {number} TYPE_SFIXED32=15 TYPE_SFIXED32 value
                 * @property {number} TYPE_SFIXED64=16 TYPE_SFIXED64 value
                 * @property {number} TYPE_SINT32=17 TYPE_SINT32 value
                 * @property {number} TYPE_SINT64=18 TYPE_SINT64 value
                 */
                FieldDescriptorProto.Type = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "TYPE_DOUBLE"] = 1;
                    values[valuesById[2] = "TYPE_FLOAT"] = 2;
                    values[valuesById[3] = "TYPE_INT64"] = 3;
                    values[valuesById[4] = "TYPE_UINT64"] = 4;
                    values[valuesById[5] = "TYPE_INT32"] = 5;
                    values[valuesById[6] = "TYPE_FIXED64"] = 6;
                    values[valuesById[7] = "TYPE_FIXED32"] = 7;
                    values[valuesById[8] = "TYPE_BOOL"] = 8;
                    values[valuesById[9] = "TYPE_STRING"] = 9;
                    values[valuesById[10] = "TYPE_GROUP"] = 10;
                    values[valuesById[11] = "TYPE_MESSAGE"] = 11;
                    values[valuesById[12] = "TYPE_BYTES"] = 12;
                    values[valuesById[13] = "TYPE_UINT32"] = 13;
                    values[valuesById[14] = "TYPE_ENUM"] = 14;
                    values[valuesById[15] = "TYPE_SFIXED32"] = 15;
                    values[valuesById[16] = "TYPE_SFIXED64"] = 16;
                    values[valuesById[17] = "TYPE_SINT32"] = 17;
                    values[valuesById[18] = "TYPE_SINT64"] = 18;
                    return values;
                })();
    
                /**
                 * Label enum.
                 * @name google.protobuf.FieldDescriptorProto.Label
                 * @enum {number}
                 * @property {number} LABEL_OPTIONAL=1 LABEL_OPTIONAL value
                 * @property {number} LABEL_REQUIRED=2 LABEL_REQUIRED value
                 * @property {number} LABEL_REPEATED=3 LABEL_REPEATED value
                 */
                FieldDescriptorProto.Label = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "LABEL_OPTIONAL"] = 1;
                    values[valuesById[2] = "LABEL_REQUIRED"] = 2;
                    values[valuesById[3] = "LABEL_REPEATED"] = 3;
                    return values;
                })();
    
                return FieldDescriptorProto;
            })();
    
            protobuf.OneofDescriptorProto = (function() {
    
                /**
                 * Properties of an OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IOneofDescriptorProto
                 * @property {string|null} [name] OneofDescriptorProto name
                 * @property {google.protobuf.IOneofOptions|null} [options] OneofDescriptorProto options
                 */
    
                /**
                 * Constructs a new OneofDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofDescriptorProto.
                 * @implements IOneofDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 */
                function OneofDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.name = "";
    
                /**
                 * OneofDescriptorProto options.
                 * @member {google.protobuf.IOneofOptions|null|undefined} options
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 */
                OneofDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new OneofDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto instance
                 */
                OneofDescriptorProto.create = function create(properties) {
                    return new OneofDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.OneofOptions.encode(message.options, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.OneofDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.IOneofDescriptorProto} message OneofDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.options = $root.google.protobuf.OneofOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.OneofOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofDescriptorProto} OneofDescriptorProto
                 */
                OneofDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.OneofDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.OneofDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.OneofOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @static
                 * @param {google.protobuf.OneofDescriptorProto} message OneofDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.OneofOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this OneofDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofDescriptorProto;
            })();
    
            protobuf.EnumDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumDescriptorProto
                 * @property {string|null} [name] EnumDescriptorProto name
                 * @property {Array.<google.protobuf.IEnumValueDescriptorProto>|null} [value] EnumDescriptorProto value
                 * @property {google.protobuf.IEnumOptions|null} [options] EnumDescriptorProto options
                 * @property {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>|null} [reservedRange] EnumDescriptorProto reservedRange
                 * @property {Array.<string>|null} [reservedName] EnumDescriptorProto reservedName
                 */
    
                /**
                 * Constructs a new EnumDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumDescriptorProto.
                 * @implements IEnumDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 */
                function EnumDescriptorProto(properties) {
                    this.value = [];
                    this.reservedRange = [];
                    this.reservedName = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.name = "";
    
                /**
                 * EnumDescriptorProto value.
                 * @member {Array.<google.protobuf.IEnumValueDescriptorProto>} value
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.value = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto options.
                 * @member {google.protobuf.IEnumOptions|null|undefined} options
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.options = null;
    
                /**
                 * EnumDescriptorProto reservedRange.
                 * @member {Array.<google.protobuf.EnumDescriptorProto.IEnumReservedRange>} reservedRange
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedRange = $util.emptyArray;
    
                /**
                 * EnumDescriptorProto reservedName.
                 * @member {Array.<string>} reservedName
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 */
                EnumDescriptorProto.prototype.reservedName = $util.emptyArray;
    
                /**
                 * Creates a new EnumDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto instance
                 */
                EnumDescriptorProto.create = function create(properties) {
                    return new EnumDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.value != null && message.value.length)
                        for (var i = 0; i < message.value.length; ++i)
                            $root.google.protobuf.EnumValueDescriptorProto.encode(message.value[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    if (message.reservedRange != null && message.reservedRange.length)
                        for (var i = 0; i < message.reservedRange.length; ++i)
                            $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.encode(message.reservedRange[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.reservedName != null && message.reservedName.length)
                        for (var i = 0; i < message.reservedName.length; ++i)
                            writer.uint32(/* id 5, wireType 2 =*/42).string(message.reservedName[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumDescriptorProto} message EnumDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.value && message.value.length))
                                message.value = [];
                            message.value.push($root.google.protobuf.EnumValueDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumOptions.decode(reader, reader.uint32());
                            break;
                        case 4:
                            if (!(message.reservedRange && message.reservedRange.length))
                                message.reservedRange = [];
                            message.reservedRange.push($root.google.protobuf.EnumDescriptorProto.EnumReservedRange.decode(reader, reader.uint32()));
                            break;
                        case 5:
                            if (!(message.reservedName && message.reservedName.length))
                                message.reservedName = [];
                            message.reservedName.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.value != null && message.hasOwnProperty("value")) {
                        if (!Array.isArray(message.value))
                            return "value: array expected";
                        for (var i = 0; i < message.value.length; ++i) {
                            var error = $root.google.protobuf.EnumValueDescriptorProto.verify(message.value[i]);
                            if (error)
                                return "value." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.reservedRange != null && message.hasOwnProperty("reservedRange")) {
                        if (!Array.isArray(message.reservedRange))
                            return "reservedRange: array expected";
                        for (var i = 0; i < message.reservedRange.length; ++i) {
                            var error = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.verify(message.reservedRange[i]);
                            if (error)
                                return "reservedRange." + error;
                        }
                    }
                    if (message.reservedName != null && message.hasOwnProperty("reservedName")) {
                        if (!Array.isArray(message.reservedName))
                            return "reservedName: array expected";
                        for (var i = 0; i < message.reservedName.length; ++i)
                            if (!$util.isString(message.reservedName[i]))
                                return "reservedName: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumDescriptorProto} EnumDescriptorProto
                 */
                EnumDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.value) {
                        if (!Array.isArray(object.value))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.value: array expected");
                        message.value = [];
                        for (var i = 0; i < object.value.length; ++i) {
                            if (typeof object.value[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.value: object expected");
                            message.value[i] = $root.google.protobuf.EnumValueDescriptorProto.fromObject(object.value[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumOptions.fromObject(object.options);
                    }
                    if (object.reservedRange) {
                        if (!Array.isArray(object.reservedRange))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: array expected");
                        message.reservedRange = [];
                        for (var i = 0; i < object.reservedRange.length; ++i) {
                            if (typeof object.reservedRange[i] !== "object")
                                throw TypeError(".google.protobuf.EnumDescriptorProto.reservedRange: object expected");
                            message.reservedRange[i] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.fromObject(object.reservedRange[i]);
                        }
                    }
                    if (object.reservedName) {
                        if (!Array.isArray(object.reservedName))
                            throw TypeError(".google.protobuf.EnumDescriptorProto.reservedName: array expected");
                        message.reservedName = [];
                        for (var i = 0; i < object.reservedName.length; ++i)
                            message.reservedName[i] = String(object.reservedName[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumDescriptorProto} message EnumDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.value = [];
                        object.reservedRange = [];
                        object.reservedName = [];
                    }
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.value && message.value.length) {
                        object.value = [];
                        for (var j = 0; j < message.value.length; ++j)
                            object.value[j] = $root.google.protobuf.EnumValueDescriptorProto.toObject(message.value[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumOptions.toObject(message.options, options);
                    if (message.reservedRange && message.reservedRange.length) {
                        object.reservedRange = [];
                        for (var j = 0; j < message.reservedRange.length; ++j)
                            object.reservedRange[j] = $root.google.protobuf.EnumDescriptorProto.EnumReservedRange.toObject(message.reservedRange[j], options);
                    }
                    if (message.reservedName && message.reservedName.length) {
                        object.reservedName = [];
                        for (var j = 0; j < message.reservedName.length; ++j)
                            object.reservedName[j] = message.reservedName[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                EnumDescriptorProto.EnumReservedRange = (function() {
    
                    /**
                     * Properties of an EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @interface IEnumReservedRange
                     * @property {number|null} [start] EnumReservedRange start
                     * @property {number|null} [end] EnumReservedRange end
                     */
    
                    /**
                     * Constructs a new EnumReservedRange.
                     * @memberof google.protobuf.EnumDescriptorProto
                     * @classdesc Represents an EnumReservedRange.
                     * @implements IEnumReservedRange
                     * @constructor
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     */
                    function EnumReservedRange(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * EnumReservedRange start.
                     * @member {number} start
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.start = 0;
    
                    /**
                     * EnumReservedRange end.
                     * @member {number} end
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     */
                    EnumReservedRange.prototype.end = 0;
    
                    /**
                     * Creates a new EnumReservedRange instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange=} [properties] Properties to set
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange instance
                     */
                    EnumReservedRange.create = function create(properties) {
                        return new EnumReservedRange(properties);
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.start != null && Object.hasOwnProperty.call(message, "start"))
                            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.start);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 2, wireType 0 =*/16).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified EnumReservedRange message, length delimited. Does not implicitly {@link google.protobuf.EnumDescriptorProto.EnumReservedRange.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.IEnumReservedRange} message EnumReservedRange message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    EnumReservedRange.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.start = reader.int32();
                                break;
                            case 2:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an EnumReservedRange message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    EnumReservedRange.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an EnumReservedRange message.
                     * @function verify
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    EnumReservedRange.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.start != null && message.hasOwnProperty("start"))
                            if (!$util.isInteger(message.start))
                                return "start: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an EnumReservedRange message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.EnumDescriptorProto.EnumReservedRange} EnumReservedRange
                     */
                    EnumReservedRange.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.EnumDescriptorProto.EnumReservedRange)
                            return object;
                        var message = new $root.google.protobuf.EnumDescriptorProto.EnumReservedRange();
                        if (object.start != null)
                            message.start = object.start | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an EnumReservedRange message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @static
                     * @param {google.protobuf.EnumDescriptorProto.EnumReservedRange} message EnumReservedRange
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    EnumReservedRange.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.start = 0;
                            object.end = 0;
                        }
                        if (message.start != null && message.hasOwnProperty("start"))
                            object.start = message.start;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this EnumReservedRange to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.EnumDescriptorProto.EnumReservedRange
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    EnumReservedRange.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return EnumReservedRange;
                })();
    
                return EnumDescriptorProto;
            })();
    
            protobuf.EnumValueDescriptorProto = (function() {
    
                /**
                 * Properties of an EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IEnumValueDescriptorProto
                 * @property {string|null} [name] EnumValueDescriptorProto name
                 * @property {number|null} [number] EnumValueDescriptorProto number
                 * @property {google.protobuf.IEnumValueOptions|null} [options] EnumValueDescriptorProto options
                 */
    
                /**
                 * Constructs a new EnumValueDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueDescriptorProto.
                 * @implements IEnumValueDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 */
                function EnumValueDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.name = "";
    
                /**
                 * EnumValueDescriptorProto number.
                 * @member {number} number
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.number = 0;
    
                /**
                 * EnumValueDescriptorProto options.
                 * @member {google.protobuf.IEnumValueOptions|null|undefined} options
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 */
                EnumValueDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new EnumValueDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto instance
                 */
                EnumValueDescriptorProto.create = function create(properties) {
                    return new EnumValueDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.number != null && Object.hasOwnProperty.call(message, "number"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.number);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.EnumValueOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.EnumValueDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.IEnumValueDescriptorProto} message EnumValueDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.number = reader.int32();
                            break;
                        case 3:
                            message.options = $root.google.protobuf.EnumValueOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.number != null && message.hasOwnProperty("number"))
                        if (!$util.isInteger(message.number))
                            return "number: integer expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.EnumValueOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueDescriptorProto} EnumValueDescriptorProto
                 */
                EnumValueDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.EnumValueDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.number != null)
                        message.number = object.number | 0;
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.EnumValueDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.EnumValueOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @static
                 * @param {google.protobuf.EnumValueDescriptorProto} message EnumValueDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.number = 0;
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.number != null && message.hasOwnProperty("number"))
                        object.number = message.number;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.EnumValueOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this EnumValueDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueDescriptorProto;
            })();
    
            protobuf.ServiceDescriptorProto = (function() {
    
                /**
                 * Properties of a ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IServiceDescriptorProto
                 * @property {string|null} [name] ServiceDescriptorProto name
                 * @property {Array.<google.protobuf.IMethodDescriptorProto>|null} [method] ServiceDescriptorProto method
                 * @property {google.protobuf.IServiceOptions|null} [options] ServiceDescriptorProto options
                 */
    
                /**
                 * Constructs a new ServiceDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceDescriptorProto.
                 * @implements IServiceDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 */
                function ServiceDescriptorProto(properties) {
                    this.method = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.name = "";
    
                /**
                 * ServiceDescriptorProto method.
                 * @member {Array.<google.protobuf.IMethodDescriptorProto>} method
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.method = $util.emptyArray;
    
                /**
                 * ServiceDescriptorProto options.
                 * @member {google.protobuf.IServiceOptions|null|undefined} options
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 */
                ServiceDescriptorProto.prototype.options = null;
    
                /**
                 * Creates a new ServiceDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto instance
                 */
                ServiceDescriptorProto.create = function create(properties) {
                    return new ServiceDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.method != null && message.method.length)
                        for (var i = 0; i < message.method.length; ++i)
                            $root.google.protobuf.MethodDescriptorProto.encode(message.method[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.ServiceOptions.encode(message.options, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.ServiceDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.IServiceDescriptorProto} message ServiceDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            if (!(message.method && message.method.length))
                                message.method = [];
                            message.method.push($root.google.protobuf.MethodDescriptorProto.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.options = $root.google.protobuf.ServiceOptions.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.method != null && message.hasOwnProperty("method")) {
                        if (!Array.isArray(message.method))
                            return "method: array expected";
                        for (var i = 0; i < message.method.length; ++i) {
                            var error = $root.google.protobuf.MethodDescriptorProto.verify(message.method[i]);
                            if (error)
                                return "method." + error;
                        }
                    }
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.ServiceOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a ServiceDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceDescriptorProto} ServiceDescriptorProto
                 */
                ServiceDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.ServiceDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.method) {
                        if (!Array.isArray(object.method))
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.method: array expected");
                        message.method = [];
                        for (var i = 0; i < object.method.length; ++i) {
                            if (typeof object.method[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceDescriptorProto.method: object expected");
                            message.method[i] = $root.google.protobuf.MethodDescriptorProto.fromObject(object.method[i]);
                        }
                    }
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.ServiceDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.ServiceOptions.fromObject(object.options);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @static
                 * @param {google.protobuf.ServiceDescriptorProto} message ServiceDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.method = [];
                    if (options.defaults) {
                        object.name = "";
                        object.options = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.method && message.method.length) {
                        object.method = [];
                        for (var j = 0; j < message.method.length; ++j)
                            object.method[j] = $root.google.protobuf.MethodDescriptorProto.toObject(message.method[j], options);
                    }
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.ServiceOptions.toObject(message.options, options);
                    return object;
                };
    
                /**
                 * Converts this ServiceDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceDescriptorProto;
            })();
    
            protobuf.MethodDescriptorProto = (function() {
    
                /**
                 * Properties of a MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @interface IMethodDescriptorProto
                 * @property {string|null} [name] MethodDescriptorProto name
                 * @property {string|null} [inputType] MethodDescriptorProto inputType
                 * @property {string|null} [outputType] MethodDescriptorProto outputType
                 * @property {google.protobuf.IMethodOptions|null} [options] MethodDescriptorProto options
                 * @property {boolean|null} [clientStreaming] MethodDescriptorProto clientStreaming
                 * @property {boolean|null} [serverStreaming] MethodDescriptorProto serverStreaming
                 */
    
                /**
                 * Constructs a new MethodDescriptorProto.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodDescriptorProto.
                 * @implements IMethodDescriptorProto
                 * @constructor
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 */
                function MethodDescriptorProto(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodDescriptorProto name.
                 * @member {string} name
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.name = "";
    
                /**
                 * MethodDescriptorProto inputType.
                 * @member {string} inputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.inputType = "";
    
                /**
                 * MethodDescriptorProto outputType.
                 * @member {string} outputType
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.outputType = "";
    
                /**
                 * MethodDescriptorProto options.
                 * @member {google.protobuf.IMethodOptions|null|undefined} options
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.options = null;
    
                /**
                 * MethodDescriptorProto clientStreaming.
                 * @member {boolean} clientStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.clientStreaming = false;
    
                /**
                 * MethodDescriptorProto serverStreaming.
                 * @member {boolean} serverStreaming
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 */
                MethodDescriptorProto.prototype.serverStreaming = false;
    
                /**
                 * Creates a new MethodDescriptorProto instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto=} [properties] Properties to set
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto instance
                 */
                MethodDescriptorProto.create = function create(properties) {
                    return new MethodDescriptorProto(properties);
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.inputType != null && Object.hasOwnProperty.call(message, "inputType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.inputType);
                    if (message.outputType != null && Object.hasOwnProperty.call(message, "outputType"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.outputType);
                    if (message.options != null && Object.hasOwnProperty.call(message, "options"))
                        $root.google.protobuf.MethodOptions.encode(message.options, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.clientStreaming != null && Object.hasOwnProperty.call(message, "clientStreaming"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.clientStreaming);
                    if (message.serverStreaming != null && Object.hasOwnProperty.call(message, "serverStreaming"))
                        writer.uint32(/* id 6, wireType 0 =*/48).bool(message.serverStreaming);
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodDescriptorProto message, length delimited. Does not implicitly {@link google.protobuf.MethodDescriptorProto.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.IMethodDescriptorProto} message MethodDescriptorProto message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodDescriptorProto.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodDescriptorProto();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.inputType = reader.string();
                            break;
                        case 3:
                            message.outputType = reader.string();
                            break;
                        case 4:
                            message.options = $root.google.protobuf.MethodOptions.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.clientStreaming = reader.bool();
                            break;
                        case 6:
                            message.serverStreaming = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodDescriptorProto message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodDescriptorProto.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodDescriptorProto message.
                 * @function verify
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodDescriptorProto.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        if (!$util.isString(message.inputType))
                            return "inputType: string expected";
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        if (!$util.isString(message.outputType))
                            return "outputType: string expected";
                    if (message.options != null && message.hasOwnProperty("options")) {
                        var error = $root.google.protobuf.MethodOptions.verify(message.options);
                        if (error)
                            return "options." + error;
                    }
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        if (typeof message.clientStreaming !== "boolean")
                            return "clientStreaming: boolean expected";
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        if (typeof message.serverStreaming !== "boolean")
                            return "serverStreaming: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a MethodDescriptorProto message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodDescriptorProto} MethodDescriptorProto
                 */
                MethodDescriptorProto.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodDescriptorProto)
                        return object;
                    var message = new $root.google.protobuf.MethodDescriptorProto();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.inputType != null)
                        message.inputType = String(object.inputType);
                    if (object.outputType != null)
                        message.outputType = String(object.outputType);
                    if (object.options != null) {
                        if (typeof object.options !== "object")
                            throw TypeError(".google.protobuf.MethodDescriptorProto.options: object expected");
                        message.options = $root.google.protobuf.MethodOptions.fromObject(object.options);
                    }
                    if (object.clientStreaming != null)
                        message.clientStreaming = Boolean(object.clientStreaming);
                    if (object.serverStreaming != null)
                        message.serverStreaming = Boolean(object.serverStreaming);
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodDescriptorProto message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @static
                 * @param {google.protobuf.MethodDescriptorProto} message MethodDescriptorProto
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodDescriptorProto.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.inputType = "";
                        object.outputType = "";
                        object.options = null;
                        object.clientStreaming = false;
                        object.serverStreaming = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.inputType != null && message.hasOwnProperty("inputType"))
                        object.inputType = message.inputType;
                    if (message.outputType != null && message.hasOwnProperty("outputType"))
                        object.outputType = message.outputType;
                    if (message.options != null && message.hasOwnProperty("options"))
                        object.options = $root.google.protobuf.MethodOptions.toObject(message.options, options);
                    if (message.clientStreaming != null && message.hasOwnProperty("clientStreaming"))
                        object.clientStreaming = message.clientStreaming;
                    if (message.serverStreaming != null && message.hasOwnProperty("serverStreaming"))
                        object.serverStreaming = message.serverStreaming;
                    return object;
                };
    
                /**
                 * Converts this MethodDescriptorProto to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodDescriptorProto
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodDescriptorProto.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MethodDescriptorProto;
            })();
    
            protobuf.FileOptions = (function() {
    
                /**
                 * Properties of a FileOptions.
                 * @memberof google.protobuf
                 * @interface IFileOptions
                 * @property {string|null} [javaPackage] FileOptions javaPackage
                 * @property {string|null} [javaOuterClassname] FileOptions javaOuterClassname
                 * @property {boolean|null} [javaMultipleFiles] FileOptions javaMultipleFiles
                 * @property {boolean|null} [javaGenerateEqualsAndHash] FileOptions javaGenerateEqualsAndHash
                 * @property {boolean|null} [javaStringCheckUtf8] FileOptions javaStringCheckUtf8
                 * @property {google.protobuf.FileOptions.OptimizeMode|null} [optimizeFor] FileOptions optimizeFor
                 * @property {string|null} [goPackage] FileOptions goPackage
                 * @property {boolean|null} [ccGenericServices] FileOptions ccGenericServices
                 * @property {boolean|null} [javaGenericServices] FileOptions javaGenericServices
                 * @property {boolean|null} [pyGenericServices] FileOptions pyGenericServices
                 * @property {boolean|null} [phpGenericServices] FileOptions phpGenericServices
                 * @property {boolean|null} [deprecated] FileOptions deprecated
                 * @property {boolean|null} [ccEnableArenas] FileOptions ccEnableArenas
                 * @property {string|null} [objcClassPrefix] FileOptions objcClassPrefix
                 * @property {string|null} [csharpNamespace] FileOptions csharpNamespace
                 * @property {string|null} [swiftPrefix] FileOptions swiftPrefix
                 * @property {string|null} [phpClassPrefix] FileOptions phpClassPrefix
                 * @property {string|null} [phpNamespace] FileOptions phpNamespace
                 * @property {string|null} [phpMetadataNamespace] FileOptions phpMetadataNamespace
                 * @property {string|null} [rubyPackage] FileOptions rubyPackage
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FileOptions uninterpretedOption
                 * @property {Array.<google.api.IResourceDescriptor>|null} [".google.api.resourceDefinition"] FileOptions .google.api.resourceDefinition
                 */
    
                /**
                 * Constructs a new FileOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FileOptions.
                 * @implements IFileOptions
                 * @constructor
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 */
                function FileOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.resourceDefinition"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FileOptions javaPackage.
                 * @member {string} javaPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaPackage = "";
    
                /**
                 * FileOptions javaOuterClassname.
                 * @member {string} javaOuterClassname
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaOuterClassname = "";
    
                /**
                 * FileOptions javaMultipleFiles.
                 * @member {boolean} javaMultipleFiles
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaMultipleFiles = false;
    
                /**
                 * FileOptions javaGenerateEqualsAndHash.
                 * @member {boolean} javaGenerateEqualsAndHash
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenerateEqualsAndHash = false;
    
                /**
                 * FileOptions javaStringCheckUtf8.
                 * @member {boolean} javaStringCheckUtf8
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaStringCheckUtf8 = false;
    
                /**
                 * FileOptions optimizeFor.
                 * @member {google.protobuf.FileOptions.OptimizeMode} optimizeFor
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.optimizeFor = 1;
    
                /**
                 * FileOptions goPackage.
                 * @member {string} goPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.goPackage = "";
    
                /**
                 * FileOptions ccGenericServices.
                 * @member {boolean} ccGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccGenericServices = false;
    
                /**
                 * FileOptions javaGenericServices.
                 * @member {boolean} javaGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.javaGenericServices = false;
    
                /**
                 * FileOptions pyGenericServices.
                 * @member {boolean} pyGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.pyGenericServices = false;
    
                /**
                 * FileOptions phpGenericServices.
                 * @member {boolean} phpGenericServices
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpGenericServices = false;
    
                /**
                 * FileOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.deprecated = false;
    
                /**
                 * FileOptions ccEnableArenas.
                 * @member {boolean} ccEnableArenas
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.ccEnableArenas = true;
    
                /**
                 * FileOptions objcClassPrefix.
                 * @member {string} objcClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.objcClassPrefix = "";
    
                /**
                 * FileOptions csharpNamespace.
                 * @member {string} csharpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.csharpNamespace = "";
    
                /**
                 * FileOptions swiftPrefix.
                 * @member {string} swiftPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.swiftPrefix = "";
    
                /**
                 * FileOptions phpClassPrefix.
                 * @member {string} phpClassPrefix
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpClassPrefix = "";
    
                /**
                 * FileOptions phpNamespace.
                 * @member {string} phpNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpNamespace = "";
    
                /**
                 * FileOptions phpMetadataNamespace.
                 * @member {string} phpMetadataNamespace
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.phpMetadataNamespace = "";
    
                /**
                 * FileOptions rubyPackage.
                 * @member {string} rubyPackage
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.rubyPackage = "";
    
                /**
                 * FileOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FileOptions .google.api.resourceDefinition.
                 * @member {Array.<google.api.IResourceDescriptor>} .google.api.resourceDefinition
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 */
                FileOptions.prototype[".google.api.resourceDefinition"] = $util.emptyArray;
    
                /**
                 * Creates a new FileOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FileOptions} FileOptions instance
                 */
                FileOptions.create = function create(properties) {
                    return new FileOptions(properties);
                };
    
                /**
                 * Encodes the specified FileOptions message. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.javaPackage != null && Object.hasOwnProperty.call(message, "javaPackage"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.javaPackage);
                    if (message.javaOuterClassname != null && Object.hasOwnProperty.call(message, "javaOuterClassname"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.javaOuterClassname);
                    if (message.optimizeFor != null && Object.hasOwnProperty.call(message, "optimizeFor"))
                        writer.uint32(/* id 9, wireType 0 =*/72).int32(message.optimizeFor);
                    if (message.javaMultipleFiles != null && Object.hasOwnProperty.call(message, "javaMultipleFiles"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.javaMultipleFiles);
                    if (message.goPackage != null && Object.hasOwnProperty.call(message, "goPackage"))
                        writer.uint32(/* id 11, wireType 2 =*/90).string(message.goPackage);
                    if (message.ccGenericServices != null && Object.hasOwnProperty.call(message, "ccGenericServices"))
                        writer.uint32(/* id 16, wireType 0 =*/128).bool(message.ccGenericServices);
                    if (message.javaGenericServices != null && Object.hasOwnProperty.call(message, "javaGenericServices"))
                        writer.uint32(/* id 17, wireType 0 =*/136).bool(message.javaGenericServices);
                    if (message.pyGenericServices != null && Object.hasOwnProperty.call(message, "pyGenericServices"))
                        writer.uint32(/* id 18, wireType 0 =*/144).bool(message.pyGenericServices);
                    if (message.javaGenerateEqualsAndHash != null && Object.hasOwnProperty.call(message, "javaGenerateEqualsAndHash"))
                        writer.uint32(/* id 20, wireType 0 =*/160).bool(message.javaGenerateEqualsAndHash);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 23, wireType 0 =*/184).bool(message.deprecated);
                    if (message.javaStringCheckUtf8 != null && Object.hasOwnProperty.call(message, "javaStringCheckUtf8"))
                        writer.uint32(/* id 27, wireType 0 =*/216).bool(message.javaStringCheckUtf8);
                    if (message.ccEnableArenas != null && Object.hasOwnProperty.call(message, "ccEnableArenas"))
                        writer.uint32(/* id 31, wireType 0 =*/248).bool(message.ccEnableArenas);
                    if (message.objcClassPrefix != null && Object.hasOwnProperty.call(message, "objcClassPrefix"))
                        writer.uint32(/* id 36, wireType 2 =*/290).string(message.objcClassPrefix);
                    if (message.csharpNamespace != null && Object.hasOwnProperty.call(message, "csharpNamespace"))
                        writer.uint32(/* id 37, wireType 2 =*/298).string(message.csharpNamespace);
                    if (message.swiftPrefix != null && Object.hasOwnProperty.call(message, "swiftPrefix"))
                        writer.uint32(/* id 39, wireType 2 =*/314).string(message.swiftPrefix);
                    if (message.phpClassPrefix != null && Object.hasOwnProperty.call(message, "phpClassPrefix"))
                        writer.uint32(/* id 40, wireType 2 =*/322).string(message.phpClassPrefix);
                    if (message.phpNamespace != null && Object.hasOwnProperty.call(message, "phpNamespace"))
                        writer.uint32(/* id 41, wireType 2 =*/330).string(message.phpNamespace);
                    if (message.phpGenericServices != null && Object.hasOwnProperty.call(message, "phpGenericServices"))
                        writer.uint32(/* id 42, wireType 0 =*/336).bool(message.phpGenericServices);
                    if (message.phpMetadataNamespace != null && Object.hasOwnProperty.call(message, "phpMetadataNamespace"))
                        writer.uint32(/* id 44, wireType 2 =*/354).string(message.phpMetadataNamespace);
                    if (message.rubyPackage != null && Object.hasOwnProperty.call(message, "rubyPackage"))
                        writer.uint32(/* id 45, wireType 2 =*/362).string(message.rubyPackage);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resourceDefinition"] != null && message[".google.api.resourceDefinition"].length)
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i)
                            $root.google.api.ResourceDescriptor.encode(message[".google.api.resourceDefinition"][i], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FileOptions message, length delimited. Does not implicitly {@link google.protobuf.FileOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.IFileOptions} message FileOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FileOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FileOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.javaPackage = reader.string();
                            break;
                        case 8:
                            message.javaOuterClassname = reader.string();
                            break;
                        case 10:
                            message.javaMultipleFiles = reader.bool();
                            break;
                        case 20:
                            message.javaGenerateEqualsAndHash = reader.bool();
                            break;
                        case 27:
                            message.javaStringCheckUtf8 = reader.bool();
                            break;
                        case 9:
                            message.optimizeFor = reader.int32();
                            break;
                        case 11:
                            message.goPackage = reader.string();
                            break;
                        case 16:
                            message.ccGenericServices = reader.bool();
                            break;
                        case 17:
                            message.javaGenericServices = reader.bool();
                            break;
                        case 18:
                            message.pyGenericServices = reader.bool();
                            break;
                        case 42:
                            message.phpGenericServices = reader.bool();
                            break;
                        case 23:
                            message.deprecated = reader.bool();
                            break;
                        case 31:
                            message.ccEnableArenas = reader.bool();
                            break;
                        case 36:
                            message.objcClassPrefix = reader.string();
                            break;
                        case 37:
                            message.csharpNamespace = reader.string();
                            break;
                        case 39:
                            message.swiftPrefix = reader.string();
                            break;
                        case 40:
                            message.phpClassPrefix = reader.string();
                            break;
                        case 41:
                            message.phpNamespace = reader.string();
                            break;
                        case 44:
                            message.phpMetadataNamespace = reader.string();
                            break;
                        case 45:
                            message.rubyPackage = reader.string();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1053:
                            if (!(message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length))
                                message[".google.api.resourceDefinition"] = [];
                            message[".google.api.resourceDefinition"].push($root.google.api.ResourceDescriptor.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FileOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FileOptions} FileOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FileOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FileOptions message.
                 * @function verify
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FileOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        if (!$util.isString(message.javaPackage))
                            return "javaPackage: string expected";
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        if (!$util.isString(message.javaOuterClassname))
                            return "javaOuterClassname: string expected";
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        if (typeof message.javaMultipleFiles !== "boolean")
                            return "javaMultipleFiles: boolean expected";
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        if (typeof message.javaGenerateEqualsAndHash !== "boolean")
                            return "javaGenerateEqualsAndHash: boolean expected";
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        if (typeof message.javaStringCheckUtf8 !== "boolean")
                            return "javaStringCheckUtf8: boolean expected";
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        switch (message.optimizeFor) {
                        default:
                            return "optimizeFor: enum value expected";
                        case 1:
                        case 2:
                        case 3:
                            break;
                        }
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        if (!$util.isString(message.goPackage))
                            return "goPackage: string expected";
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        if (typeof message.ccGenericServices !== "boolean")
                            return "ccGenericServices: boolean expected";
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        if (typeof message.javaGenericServices !== "boolean")
                            return "javaGenericServices: boolean expected";
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        if (typeof message.pyGenericServices !== "boolean")
                            return "pyGenericServices: boolean expected";
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        if (typeof message.phpGenericServices !== "boolean")
                            return "phpGenericServices: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        if (typeof message.ccEnableArenas !== "boolean")
                            return "ccEnableArenas: boolean expected";
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        if (!$util.isString(message.objcClassPrefix))
                            return "objcClassPrefix: string expected";
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        if (!$util.isString(message.csharpNamespace))
                            return "csharpNamespace: string expected";
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        if (!$util.isString(message.swiftPrefix))
                            return "swiftPrefix: string expected";
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        if (!$util.isString(message.phpClassPrefix))
                            return "phpClassPrefix: string expected";
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        if (!$util.isString(message.phpNamespace))
                            return "phpNamespace: string expected";
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        if (!$util.isString(message.phpMetadataNamespace))
                            return "phpMetadataNamespace: string expected";
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        if (!$util.isString(message.rubyPackage))
                            return "rubyPackage: string expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resourceDefinition"] != null && message.hasOwnProperty(".google.api.resourceDefinition")) {
                        if (!Array.isArray(message[".google.api.resourceDefinition"]))
                            return ".google.api.resourceDefinition: array expected";
                        for (var i = 0; i < message[".google.api.resourceDefinition"].length; ++i) {
                            var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resourceDefinition"][i]);
                            if (error)
                                return ".google.api.resourceDefinition." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a FileOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FileOptions} FileOptions
                 */
                FileOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FileOptions)
                        return object;
                    var message = new $root.google.protobuf.FileOptions();
                    if (object.javaPackage != null)
                        message.javaPackage = String(object.javaPackage);
                    if (object.javaOuterClassname != null)
                        message.javaOuterClassname = String(object.javaOuterClassname);
                    if (object.javaMultipleFiles != null)
                        message.javaMultipleFiles = Boolean(object.javaMultipleFiles);
                    if (object.javaGenerateEqualsAndHash != null)
                        message.javaGenerateEqualsAndHash = Boolean(object.javaGenerateEqualsAndHash);
                    if (object.javaStringCheckUtf8 != null)
                        message.javaStringCheckUtf8 = Boolean(object.javaStringCheckUtf8);
                    switch (object.optimizeFor) {
                    case "SPEED":
                    case 1:
                        message.optimizeFor = 1;
                        break;
                    case "CODE_SIZE":
                    case 2:
                        message.optimizeFor = 2;
                        break;
                    case "LITE_RUNTIME":
                    case 3:
                        message.optimizeFor = 3;
                        break;
                    }
                    if (object.goPackage != null)
                        message.goPackage = String(object.goPackage);
                    if (object.ccGenericServices != null)
                        message.ccGenericServices = Boolean(object.ccGenericServices);
                    if (object.javaGenericServices != null)
                        message.javaGenericServices = Boolean(object.javaGenericServices);
                    if (object.pyGenericServices != null)
                        message.pyGenericServices = Boolean(object.pyGenericServices);
                    if (object.phpGenericServices != null)
                        message.phpGenericServices = Boolean(object.phpGenericServices);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.ccEnableArenas != null)
                        message.ccEnableArenas = Boolean(object.ccEnableArenas);
                    if (object.objcClassPrefix != null)
                        message.objcClassPrefix = String(object.objcClassPrefix);
                    if (object.csharpNamespace != null)
                        message.csharpNamespace = String(object.csharpNamespace);
                    if (object.swiftPrefix != null)
                        message.swiftPrefix = String(object.swiftPrefix);
                    if (object.phpClassPrefix != null)
                        message.phpClassPrefix = String(object.phpClassPrefix);
                    if (object.phpNamespace != null)
                        message.phpNamespace = String(object.phpNamespace);
                    if (object.phpMetadataNamespace != null)
                        message.phpMetadataNamespace = String(object.phpMetadataNamespace);
                    if (object.rubyPackage != null)
                        message.rubyPackage = String(object.rubyPackage);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resourceDefinition"]) {
                        if (!Array.isArray(object[".google.api.resourceDefinition"]))
                            throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: array expected");
                        message[".google.api.resourceDefinition"] = [];
                        for (var i = 0; i < object[".google.api.resourceDefinition"].length; ++i) {
                            if (typeof object[".google.api.resourceDefinition"][i] !== "object")
                                throw TypeError(".google.protobuf.FileOptions..google.api.resourceDefinition: object expected");
                            message[".google.api.resourceDefinition"][i] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resourceDefinition"][i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FileOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FileOptions
                 * @static
                 * @param {google.protobuf.FileOptions} message FileOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FileOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.resourceDefinition"] = [];
                    }
                    if (options.defaults) {
                        object.javaPackage = "";
                        object.javaOuterClassname = "";
                        object.optimizeFor = options.enums === String ? "SPEED" : 1;
                        object.javaMultipleFiles = false;
                        object.goPackage = "";
                        object.ccGenericServices = false;
                        object.javaGenericServices = false;
                        object.pyGenericServices = false;
                        object.javaGenerateEqualsAndHash = false;
                        object.deprecated = false;
                        object.javaStringCheckUtf8 = false;
                        object.ccEnableArenas = true;
                        object.objcClassPrefix = "";
                        object.csharpNamespace = "";
                        object.swiftPrefix = "";
                        object.phpClassPrefix = "";
                        object.phpNamespace = "";
                        object.phpGenericServices = false;
                        object.phpMetadataNamespace = "";
                        object.rubyPackage = "";
                    }
                    if (message.javaPackage != null && message.hasOwnProperty("javaPackage"))
                        object.javaPackage = message.javaPackage;
                    if (message.javaOuterClassname != null && message.hasOwnProperty("javaOuterClassname"))
                        object.javaOuterClassname = message.javaOuterClassname;
                    if (message.optimizeFor != null && message.hasOwnProperty("optimizeFor"))
                        object.optimizeFor = options.enums === String ? $root.google.protobuf.FileOptions.OptimizeMode[message.optimizeFor] : message.optimizeFor;
                    if (message.javaMultipleFiles != null && message.hasOwnProperty("javaMultipleFiles"))
                        object.javaMultipleFiles = message.javaMultipleFiles;
                    if (message.goPackage != null && message.hasOwnProperty("goPackage"))
                        object.goPackage = message.goPackage;
                    if (message.ccGenericServices != null && message.hasOwnProperty("ccGenericServices"))
                        object.ccGenericServices = message.ccGenericServices;
                    if (message.javaGenericServices != null && message.hasOwnProperty("javaGenericServices"))
                        object.javaGenericServices = message.javaGenericServices;
                    if (message.pyGenericServices != null && message.hasOwnProperty("pyGenericServices"))
                        object.pyGenericServices = message.pyGenericServices;
                    if (message.javaGenerateEqualsAndHash != null && message.hasOwnProperty("javaGenerateEqualsAndHash"))
                        object.javaGenerateEqualsAndHash = message.javaGenerateEqualsAndHash;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.javaStringCheckUtf8 != null && message.hasOwnProperty("javaStringCheckUtf8"))
                        object.javaStringCheckUtf8 = message.javaStringCheckUtf8;
                    if (message.ccEnableArenas != null && message.hasOwnProperty("ccEnableArenas"))
                        object.ccEnableArenas = message.ccEnableArenas;
                    if (message.objcClassPrefix != null && message.hasOwnProperty("objcClassPrefix"))
                        object.objcClassPrefix = message.objcClassPrefix;
                    if (message.csharpNamespace != null && message.hasOwnProperty("csharpNamespace"))
                        object.csharpNamespace = message.csharpNamespace;
                    if (message.swiftPrefix != null && message.hasOwnProperty("swiftPrefix"))
                        object.swiftPrefix = message.swiftPrefix;
                    if (message.phpClassPrefix != null && message.hasOwnProperty("phpClassPrefix"))
                        object.phpClassPrefix = message.phpClassPrefix;
                    if (message.phpNamespace != null && message.hasOwnProperty("phpNamespace"))
                        object.phpNamespace = message.phpNamespace;
                    if (message.phpGenericServices != null && message.hasOwnProperty("phpGenericServices"))
                        object.phpGenericServices = message.phpGenericServices;
                    if (message.phpMetadataNamespace != null && message.hasOwnProperty("phpMetadataNamespace"))
                        object.phpMetadataNamespace = message.phpMetadataNamespace;
                    if (message.rubyPackage != null && message.hasOwnProperty("rubyPackage"))
                        object.rubyPackage = message.rubyPackage;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resourceDefinition"] && message[".google.api.resourceDefinition"].length) {
                        object[".google.api.resourceDefinition"] = [];
                        for (var j = 0; j < message[".google.api.resourceDefinition"].length; ++j)
                            object[".google.api.resourceDefinition"][j] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resourceDefinition"][j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this FileOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FileOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FileOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * OptimizeMode enum.
                 * @name google.protobuf.FileOptions.OptimizeMode
                 * @enum {number}
                 * @property {number} SPEED=1 SPEED value
                 * @property {number} CODE_SIZE=2 CODE_SIZE value
                 * @property {number} LITE_RUNTIME=3 LITE_RUNTIME value
                 */
                FileOptions.OptimizeMode = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[1] = "SPEED"] = 1;
                    values[valuesById[2] = "CODE_SIZE"] = 2;
                    values[valuesById[3] = "LITE_RUNTIME"] = 3;
                    return values;
                })();
    
                return FileOptions;
            })();
    
            protobuf.MessageOptions = (function() {
    
                /**
                 * Properties of a MessageOptions.
                 * @memberof google.protobuf
                 * @interface IMessageOptions
                 * @property {boolean|null} [messageSetWireFormat] MessageOptions messageSetWireFormat
                 * @property {boolean|null} [noStandardDescriptorAccessor] MessageOptions noStandardDescriptorAccessor
                 * @property {boolean|null} [deprecated] MessageOptions deprecated
                 * @property {boolean|null} [mapEntry] MessageOptions mapEntry
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MessageOptions uninterpretedOption
                 * @property {google.api.IResourceDescriptor|null} [".google.api.resource"] MessageOptions .google.api.resource
                 */
    
                /**
                 * Constructs a new MessageOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MessageOptions.
                 * @implements IMessageOptions
                 * @constructor
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 */
                function MessageOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MessageOptions messageSetWireFormat.
                 * @member {boolean} messageSetWireFormat
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.messageSetWireFormat = false;
    
                /**
                 * MessageOptions noStandardDescriptorAccessor.
                 * @member {boolean} noStandardDescriptorAccessor
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.noStandardDescriptorAccessor = false;
    
                /**
                 * MessageOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.deprecated = false;
    
                /**
                 * MessageOptions mapEntry.
                 * @member {boolean} mapEntry
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.mapEntry = false;
    
                /**
                 * MessageOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MessageOptions .google.api.resource.
                 * @member {google.api.IResourceDescriptor|null|undefined} .google.api.resource
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 */
                MessageOptions.prototype[".google.api.resource"] = null;
    
                /**
                 * Creates a new MessageOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MessageOptions} MessageOptions instance
                 */
                MessageOptions.create = function create(properties) {
                    return new MessageOptions(properties);
                };
    
                /**
                 * Encodes the specified MessageOptions message. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.messageSetWireFormat != null && Object.hasOwnProperty.call(message, "messageSetWireFormat"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.messageSetWireFormat);
                    if (message.noStandardDescriptorAccessor != null && Object.hasOwnProperty.call(message, "noStandardDescriptorAccessor"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.noStandardDescriptorAccessor);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.mapEntry != null && Object.hasOwnProperty.call(message, "mapEntry"))
                        writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mapEntry);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.resource"] != null && Object.hasOwnProperty.call(message, ".google.api.resource"))
                        $root.google.api.ResourceDescriptor.encode(message[".google.api.resource"], writer.uint32(/* id 1053, wireType 2 =*/8426).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MessageOptions message, length delimited. Does not implicitly {@link google.protobuf.MessageOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.IMessageOptions} message MessageOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MessageOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MessageOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.messageSetWireFormat = reader.bool();
                            break;
                        case 2:
                            message.noStandardDescriptorAccessor = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 7:
                            message.mapEntry = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1053:
                            message[".google.api.resource"] = $root.google.api.ResourceDescriptor.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MessageOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MessageOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MessageOptions message.
                 * @function verify
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MessageOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        if (typeof message.messageSetWireFormat !== "boolean")
                            return "messageSetWireFormat: boolean expected";
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        if (typeof message.noStandardDescriptorAccessor !== "boolean")
                            return "noStandardDescriptorAccessor: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        if (typeof message.mapEntry !== "boolean")
                            return "mapEntry: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource")) {
                        var error = $root.google.api.ResourceDescriptor.verify(message[".google.api.resource"]);
                        if (error)
                            return ".google.api.resource." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MessageOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MessageOptions} MessageOptions
                 */
                MessageOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MessageOptions)
                        return object;
                    var message = new $root.google.protobuf.MessageOptions();
                    if (object.messageSetWireFormat != null)
                        message.messageSetWireFormat = Boolean(object.messageSetWireFormat);
                    if (object.noStandardDescriptorAccessor != null)
                        message.noStandardDescriptorAccessor = Boolean(object.noStandardDescriptorAccessor);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.mapEntry != null)
                        message.mapEntry = Boolean(object.mapEntry);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MessageOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.resource"] != null) {
                        if (typeof object[".google.api.resource"] !== "object")
                            throw TypeError(".google.protobuf.MessageOptions..google.api.resource: object expected");
                        message[".google.api.resource"] = $root.google.api.ResourceDescriptor.fromObject(object[".google.api.resource"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MessageOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MessageOptions
                 * @static
                 * @param {google.protobuf.MessageOptions} message MessageOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MessageOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.messageSetWireFormat = false;
                        object.noStandardDescriptorAccessor = false;
                        object.deprecated = false;
                        object.mapEntry = false;
                        object[".google.api.resource"] = null;
                    }
                    if (message.messageSetWireFormat != null && message.hasOwnProperty("messageSetWireFormat"))
                        object.messageSetWireFormat = message.messageSetWireFormat;
                    if (message.noStandardDescriptorAccessor != null && message.hasOwnProperty("noStandardDescriptorAccessor"))
                        object.noStandardDescriptorAccessor = message.noStandardDescriptorAccessor;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.mapEntry != null && message.hasOwnProperty("mapEntry"))
                        object.mapEntry = message.mapEntry;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.resource"] != null && message.hasOwnProperty(".google.api.resource"))
                        object[".google.api.resource"] = $root.google.api.ResourceDescriptor.toObject(message[".google.api.resource"], options);
                    return object;
                };
    
                /**
                 * Converts this MessageOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MessageOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MessageOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return MessageOptions;
            })();
    
            protobuf.FieldOptions = (function() {
    
                /**
                 * Properties of a FieldOptions.
                 * @memberof google.protobuf
                 * @interface IFieldOptions
                 * @property {google.protobuf.FieldOptions.CType|null} [ctype] FieldOptions ctype
                 * @property {boolean|null} [packed] FieldOptions packed
                 * @property {google.protobuf.FieldOptions.JSType|null} [jstype] FieldOptions jstype
                 * @property {boolean|null} [lazy] FieldOptions lazy
                 * @property {boolean|null} [deprecated] FieldOptions deprecated
                 * @property {boolean|null} [weak] FieldOptions weak
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] FieldOptions uninterpretedOption
                 * @property {Array.<google.api.FieldBehavior>|null} [".google.api.fieldBehavior"] FieldOptions .google.api.fieldBehavior
                 * @property {google.api.IResourceReference|null} [".google.api.resourceReference"] FieldOptions .google.api.resourceReference
                 */
    
                /**
                 * Constructs a new FieldOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldOptions.
                 * @implements IFieldOptions
                 * @constructor
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 */
                function FieldOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.fieldBehavior"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldOptions ctype.
                 * @member {google.protobuf.FieldOptions.CType} ctype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.ctype = 0;
    
                /**
                 * FieldOptions packed.
                 * @member {boolean} packed
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.packed = false;
    
                /**
                 * FieldOptions jstype.
                 * @member {google.protobuf.FieldOptions.JSType} jstype
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.jstype = 0;
    
                /**
                 * FieldOptions lazy.
                 * @member {boolean} lazy
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.lazy = false;
    
                /**
                 * FieldOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.deprecated = false;
    
                /**
                 * FieldOptions weak.
                 * @member {boolean} weak
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.weak = false;
    
                /**
                 * FieldOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.fieldBehavior.
                 * @member {Array.<google.api.FieldBehavior>} .google.api.fieldBehavior
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.fieldBehavior"] = $util.emptyArray;
    
                /**
                 * FieldOptions .google.api.resourceReference.
                 * @member {google.api.IResourceReference|null|undefined} .google.api.resourceReference
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 */
                FieldOptions.prototype[".google.api.resourceReference"] = null;
    
                /**
                 * Creates a new FieldOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions=} [properties] Properties to set
                 * @returns {google.protobuf.FieldOptions} FieldOptions instance
                 */
                FieldOptions.create = function create(properties) {
                    return new FieldOptions(properties);
                };
    
                /**
                 * Encodes the specified FieldOptions message. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.ctype != null && Object.hasOwnProperty.call(message, "ctype"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.ctype);
                    if (message.packed != null && Object.hasOwnProperty.call(message, "packed"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.packed);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.lazy != null && Object.hasOwnProperty.call(message, "lazy"))
                        writer.uint32(/* id 5, wireType 0 =*/40).bool(message.lazy);
                    if (message.jstype != null && Object.hasOwnProperty.call(message, "jstype"))
                        writer.uint32(/* id 6, wireType 0 =*/48).int32(message.jstype);
                    if (message.weak != null && Object.hasOwnProperty.call(message, "weak"))
                        writer.uint32(/* id 10, wireType 0 =*/80).bool(message.weak);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.fieldBehavior"] != null && message[".google.api.fieldBehavior"].length) {
                        writer.uint32(/* id 1052, wireType 2 =*/8418).fork();
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            writer.int32(message[".google.api.fieldBehavior"][i]);
                        writer.ldelim();
                    }
                    if (message[".google.api.resourceReference"] != null && Object.hasOwnProperty.call(message, ".google.api.resourceReference"))
                        $root.google.api.ResourceReference.encode(message[".google.api.resourceReference"], writer.uint32(/* id 1055, wireType 2 =*/8442).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldOptions message, length delimited. Does not implicitly {@link google.protobuf.FieldOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.IFieldOptions} message FieldOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.ctype = reader.int32();
                            break;
                        case 2:
                            message.packed = reader.bool();
                            break;
                        case 6:
                            message.jstype = reader.int32();
                            break;
                        case 5:
                            message.lazy = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 10:
                            message.weak = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1052:
                            if (!(message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length))
                                message[".google.api.fieldBehavior"] = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message[".google.api.fieldBehavior"].push(reader.int32());
                            } else
                                message[".google.api.fieldBehavior"].push(reader.int32());
                            break;
                        case 1055:
                            message[".google.api.resourceReference"] = $root.google.api.ResourceReference.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldOptions message.
                 * @function verify
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        switch (message.ctype) {
                        default:
                            return "ctype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        if (typeof message.packed !== "boolean")
                            return "packed: boolean expected";
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        switch (message.jstype) {
                        default:
                            return "jstype: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        if (typeof message.lazy !== "boolean")
                            return "lazy: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        if (typeof message.weak !== "boolean")
                            return "weak: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.fieldBehavior"] != null && message.hasOwnProperty(".google.api.fieldBehavior")) {
                        if (!Array.isArray(message[".google.api.fieldBehavior"]))
                            return ".google.api.fieldBehavior: array expected";
                        for (var i = 0; i < message[".google.api.fieldBehavior"].length; ++i)
                            switch (message[".google.api.fieldBehavior"][i]) {
                            default:
                                return ".google.api.fieldBehavior: enum value[] expected";
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                            case 7:
                                break;
                            }
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference")) {
                        var error = $root.google.api.ResourceReference.verify(message[".google.api.resourceReference"]);
                        if (error)
                            return ".google.api.resourceReference." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldOptions} FieldOptions
                 */
                FieldOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldOptions)
                        return object;
                    var message = new $root.google.protobuf.FieldOptions();
                    switch (object.ctype) {
                    case "STRING":
                    case 0:
                        message.ctype = 0;
                        break;
                    case "CORD":
                    case 1:
                        message.ctype = 1;
                        break;
                    case "STRING_PIECE":
                    case 2:
                        message.ctype = 2;
                        break;
                    }
                    if (object.packed != null)
                        message.packed = Boolean(object.packed);
                    switch (object.jstype) {
                    case "JS_NORMAL":
                    case 0:
                        message.jstype = 0;
                        break;
                    case "JS_STRING":
                    case 1:
                        message.jstype = 1;
                        break;
                    case "JS_NUMBER":
                    case 2:
                        message.jstype = 2;
                        break;
                    }
                    if (object.lazy != null)
                        message.lazy = Boolean(object.lazy);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.weak != null)
                        message.weak = Boolean(object.weak);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.FieldOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.fieldBehavior"]) {
                        if (!Array.isArray(object[".google.api.fieldBehavior"]))
                            throw TypeError(".google.protobuf.FieldOptions..google.api.fieldBehavior: array expected");
                        message[".google.api.fieldBehavior"] = [];
                        for (var i = 0; i < object[".google.api.fieldBehavior"].length; ++i)
                            switch (object[".google.api.fieldBehavior"][i]) {
                            default:
                            case "FIELD_BEHAVIOR_UNSPECIFIED":
                            case 0:
                                message[".google.api.fieldBehavior"][i] = 0;
                                break;
                            case "OPTIONAL":
                            case 1:
                                message[".google.api.fieldBehavior"][i] = 1;
                                break;
                            case "REQUIRED":
                            case 2:
                                message[".google.api.fieldBehavior"][i] = 2;
                                break;
                            case "OUTPUT_ONLY":
                            case 3:
                                message[".google.api.fieldBehavior"][i] = 3;
                                break;
                            case "INPUT_ONLY":
                            case 4:
                                message[".google.api.fieldBehavior"][i] = 4;
                                break;
                            case "IMMUTABLE":
                            case 5:
                                message[".google.api.fieldBehavior"][i] = 5;
                                break;
                            case "UNORDERED_LIST":
                            case 6:
                                message[".google.api.fieldBehavior"][i] = 6;
                                break;
                            case "NON_EMPTY_DEFAULT":
                            case 7:
                                message[".google.api.fieldBehavior"][i] = 7;
                                break;
                            }
                    }
                    if (object[".google.api.resourceReference"] != null) {
                        if (typeof object[".google.api.resourceReference"] !== "object")
                            throw TypeError(".google.protobuf.FieldOptions..google.api.resourceReference: object expected");
                        message[".google.api.resourceReference"] = $root.google.api.ResourceReference.fromObject(object[".google.api.resourceReference"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldOptions
                 * @static
                 * @param {google.protobuf.FieldOptions} message FieldOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.fieldBehavior"] = [];
                    }
                    if (options.defaults) {
                        object.ctype = options.enums === String ? "STRING" : 0;
                        object.packed = false;
                        object.deprecated = false;
                        object.lazy = false;
                        object.jstype = options.enums === String ? "JS_NORMAL" : 0;
                        object.weak = false;
                        object[".google.api.resourceReference"] = null;
                    }
                    if (message.ctype != null && message.hasOwnProperty("ctype"))
                        object.ctype = options.enums === String ? $root.google.protobuf.FieldOptions.CType[message.ctype] : message.ctype;
                    if (message.packed != null && message.hasOwnProperty("packed"))
                        object.packed = message.packed;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.lazy != null && message.hasOwnProperty("lazy"))
                        object.lazy = message.lazy;
                    if (message.jstype != null && message.hasOwnProperty("jstype"))
                        object.jstype = options.enums === String ? $root.google.protobuf.FieldOptions.JSType[message.jstype] : message.jstype;
                    if (message.weak != null && message.hasOwnProperty("weak"))
                        object.weak = message.weak;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.fieldBehavior"] && message[".google.api.fieldBehavior"].length) {
                        object[".google.api.fieldBehavior"] = [];
                        for (var j = 0; j < message[".google.api.fieldBehavior"].length; ++j)
                            object[".google.api.fieldBehavior"][j] = options.enums === String ? $root.google.api.FieldBehavior[message[".google.api.fieldBehavior"][j]] : message[".google.api.fieldBehavior"][j];
                    }
                    if (message[".google.api.resourceReference"] != null && message.hasOwnProperty(".google.api.resourceReference"))
                        object[".google.api.resourceReference"] = $root.google.api.ResourceReference.toObject(message[".google.api.resourceReference"], options);
                    return object;
                };
    
                /**
                 * Converts this FieldOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * CType enum.
                 * @name google.protobuf.FieldOptions.CType
                 * @enum {number}
                 * @property {number} STRING=0 STRING value
                 * @property {number} CORD=1 CORD value
                 * @property {number} STRING_PIECE=2 STRING_PIECE value
                 */
                FieldOptions.CType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STRING"] = 0;
                    values[valuesById[1] = "CORD"] = 1;
                    values[valuesById[2] = "STRING_PIECE"] = 2;
                    return values;
                })();
    
                /**
                 * JSType enum.
                 * @name google.protobuf.FieldOptions.JSType
                 * @enum {number}
                 * @property {number} JS_NORMAL=0 JS_NORMAL value
                 * @property {number} JS_STRING=1 JS_STRING value
                 * @property {number} JS_NUMBER=2 JS_NUMBER value
                 */
                FieldOptions.JSType = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "JS_NORMAL"] = 0;
                    values[valuesById[1] = "JS_STRING"] = 1;
                    values[valuesById[2] = "JS_NUMBER"] = 2;
                    return values;
                })();
    
                return FieldOptions;
            })();
    
            protobuf.OneofOptions = (function() {
    
                /**
                 * Properties of an OneofOptions.
                 * @memberof google.protobuf
                 * @interface IOneofOptions
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] OneofOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new OneofOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an OneofOptions.
                 * @implements IOneofOptions
                 * @constructor
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 */
                function OneofOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OneofOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 */
                OneofOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new OneofOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions=} [properties] Properties to set
                 * @returns {google.protobuf.OneofOptions} OneofOptions instance
                 */
                OneofOptions.create = function create(properties) {
                    return new OneofOptions(properties);
                };
    
                /**
                 * Encodes the specified OneofOptions message. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified OneofOptions message, length delimited. Does not implicitly {@link google.protobuf.OneofOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.IOneofOptions} message OneofOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OneofOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.OneofOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OneofOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OneofOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OneofOptions message.
                 * @function verify
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OneofOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an OneofOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.OneofOptions} OneofOptions
                 */
                OneofOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.OneofOptions)
                        return object;
                    var message = new $root.google.protobuf.OneofOptions();
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.OneofOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an OneofOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.OneofOptions
                 * @static
                 * @param {google.protobuf.OneofOptions} message OneofOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OneofOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this OneofOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.OneofOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OneofOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OneofOptions;
            })();
    
            protobuf.EnumOptions = (function() {
    
                /**
                 * Properties of an EnumOptions.
                 * @memberof google.protobuf
                 * @interface IEnumOptions
                 * @property {boolean|null} [allowAlias] EnumOptions allowAlias
                 * @property {boolean|null} [deprecated] EnumOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumOptions.
                 * @implements IEnumOptions
                 * @constructor
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 */
                function EnumOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumOptions allowAlias.
                 * @member {boolean} allowAlias
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.allowAlias = false;
    
                /**
                 * EnumOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.deprecated = false;
    
                /**
                 * EnumOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 */
                EnumOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumOptions} EnumOptions instance
                 */
                EnumOptions.create = function create(properties) {
                    return new EnumOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumOptions message. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.allowAlias != null && Object.hasOwnProperty.call(message, "allowAlias"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.allowAlias);
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.IEnumOptions} message EnumOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            message.allowAlias = reader.bool();
                            break;
                        case 3:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        if (typeof message.allowAlias !== "boolean")
                            return "allowAlias: boolean expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumOptions} EnumOptions
                 */
                EnumOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumOptions();
                    if (object.allowAlias != null)
                        message.allowAlias = Boolean(object.allowAlias);
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumOptions
                 * @static
                 * @param {google.protobuf.EnumOptions} message EnumOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.allowAlias = false;
                        object.deprecated = false;
                    }
                    if (message.allowAlias != null && message.hasOwnProperty("allowAlias"))
                        object.allowAlias = message.allowAlias;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumOptions;
            })();
    
            protobuf.EnumValueOptions = (function() {
    
                /**
                 * Properties of an EnumValueOptions.
                 * @memberof google.protobuf
                 * @interface IEnumValueOptions
                 * @property {boolean|null} [deprecated] EnumValueOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] EnumValueOptions uninterpretedOption
                 */
    
                /**
                 * Constructs a new EnumValueOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents an EnumValueOptions.
                 * @implements IEnumValueOptions
                 * @constructor
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 */
                function EnumValueOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * EnumValueOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.deprecated = false;
    
                /**
                 * EnumValueOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 */
                EnumValueOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * Creates a new EnumValueOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions=} [properties] Properties to set
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions instance
                 */
                EnumValueOptions.create = function create(properties) {
                    return new EnumValueOptions(properties);
                };
    
                /**
                 * Encodes the specified EnumValueOptions message. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 1, wireType 0 =*/8).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified EnumValueOptions message, length delimited. Does not implicitly {@link google.protobuf.EnumValueOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.IEnumValueOptions} message EnumValueOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                EnumValueOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.EnumValueOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an EnumValueOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                EnumValueOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an EnumValueOptions message.
                 * @function verify
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                EnumValueOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an EnumValueOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.EnumValueOptions} EnumValueOptions
                 */
                EnumValueOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.EnumValueOptions)
                        return object;
                    var message = new $root.google.protobuf.EnumValueOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.EnumValueOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an EnumValueOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.EnumValueOptions
                 * @static
                 * @param {google.protobuf.EnumValueOptions} message EnumValueOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                EnumValueOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults)
                        object.deprecated = false;
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this EnumValueOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.EnumValueOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                EnumValueOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return EnumValueOptions;
            })();
    
            protobuf.ServiceOptions = (function() {
    
                /**
                 * Properties of a ServiceOptions.
                 * @memberof google.protobuf
                 * @interface IServiceOptions
                 * @property {boolean|null} [deprecated] ServiceOptions deprecated
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] ServiceOptions uninterpretedOption
                 * @property {string|null} [".google.api.defaultHost"] ServiceOptions .google.api.defaultHost
                 * @property {string|null} [".google.api.oauthScopes"] ServiceOptions .google.api.oauthScopes
                 */
    
                /**
                 * Constructs a new ServiceOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a ServiceOptions.
                 * @implements IServiceOptions
                 * @constructor
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 */
                function ServiceOptions(properties) {
                    this.uninterpretedOption = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ServiceOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.deprecated = false;
    
                /**
                 * ServiceOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * ServiceOptions .google.api.defaultHost.
                 * @member {string} .google.api.defaultHost
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.defaultHost"] = "";
    
                /**
                 * ServiceOptions .google.api.oauthScopes.
                 * @member {string} .google.api.oauthScopes
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 */
                ServiceOptions.prototype[".google.api.oauthScopes"] = "";
    
                /**
                 * Creates a new ServiceOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions=} [properties] Properties to set
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions instance
                 */
                ServiceOptions.create = function create(properties) {
                    return new ServiceOptions(properties);
                };
    
                /**
                 * Encodes the specified ServiceOptions message. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.api.defaultHost"] != null && Object.hasOwnProperty.call(message, ".google.api.defaultHost"))
                        writer.uint32(/* id 1049, wireType 2 =*/8394).string(message[".google.api.defaultHost"]);
                    if (message[".google.api.oauthScopes"] != null && Object.hasOwnProperty.call(message, ".google.api.oauthScopes"))
                        writer.uint32(/* id 1050, wireType 2 =*/8402).string(message[".google.api.oauthScopes"]);
                    return writer;
                };
    
                /**
                 * Encodes the specified ServiceOptions message, length delimited. Does not implicitly {@link google.protobuf.ServiceOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.IServiceOptions} message ServiceOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ServiceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ServiceOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 1049:
                            message[".google.api.defaultHost"] = reader.string();
                            break;
                        case 1050:
                            message[".google.api.oauthScopes"] = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ServiceOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ServiceOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ServiceOptions message.
                 * @function verify
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ServiceOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        if (!$util.isString(message[".google.api.defaultHost"]))
                            return ".google.api.defaultHost: string expected";
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        if (!$util.isString(message[".google.api.oauthScopes"]))
                            return ".google.api.oauthScopes: string expected";
                    return null;
                };
    
                /**
                 * Creates a ServiceOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ServiceOptions} ServiceOptions
                 */
                ServiceOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ServiceOptions)
                        return object;
                    var message = new $root.google.protobuf.ServiceOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.ServiceOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.defaultHost"] != null)
                        message[".google.api.defaultHost"] = String(object[".google.api.defaultHost"]);
                    if (object[".google.api.oauthScopes"] != null)
                        message[".google.api.oauthScopes"] = String(object[".google.api.oauthScopes"]);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ServiceOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ServiceOptions
                 * @static
                 * @param {google.protobuf.ServiceOptions} message ServiceOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ServiceOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.uninterpretedOption = [];
                    if (options.defaults) {
                        object.deprecated = false;
                        object[".google.api.defaultHost"] = "";
                        object[".google.api.oauthScopes"] = "";
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.api.defaultHost"] != null && message.hasOwnProperty(".google.api.defaultHost"))
                        object[".google.api.defaultHost"] = message[".google.api.defaultHost"];
                    if (message[".google.api.oauthScopes"] != null && message.hasOwnProperty(".google.api.oauthScopes"))
                        object[".google.api.oauthScopes"] = message[".google.api.oauthScopes"];
                    return object;
                };
    
                /**
                 * Converts this ServiceOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ServiceOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ServiceOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ServiceOptions;
            })();
    
            protobuf.MethodOptions = (function() {
    
                /**
                 * Properties of a MethodOptions.
                 * @memberof google.protobuf
                 * @interface IMethodOptions
                 * @property {boolean|null} [deprecated] MethodOptions deprecated
                 * @property {google.protobuf.MethodOptions.IdempotencyLevel|null} [idempotencyLevel] MethodOptions idempotencyLevel
                 * @property {Array.<google.protobuf.IUninterpretedOption>|null} [uninterpretedOption] MethodOptions uninterpretedOption
                 * @property {google.api.IHttpRule|null} [".google.api.http"] MethodOptions .google.api.http
                 * @property {Array.<string>|null} [".google.api.methodSignature"] MethodOptions .google.api.methodSignature
                 * @property {google.longrunning.IOperationInfo|null} [".google.longrunning.operationInfo"] MethodOptions .google.longrunning.operationInfo
                 */
    
                /**
                 * Constructs a new MethodOptions.
                 * @memberof google.protobuf
                 * @classdesc Represents a MethodOptions.
                 * @implements IMethodOptions
                 * @constructor
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 */
                function MethodOptions(properties) {
                    this.uninterpretedOption = [];
                    this[".google.api.methodSignature"] = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * MethodOptions deprecated.
                 * @member {boolean} deprecated
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.deprecated = false;
    
                /**
                 * MethodOptions idempotencyLevel.
                 * @member {google.protobuf.MethodOptions.IdempotencyLevel} idempotencyLevel
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.idempotencyLevel = 0;
    
                /**
                 * MethodOptions uninterpretedOption.
                 * @member {Array.<google.protobuf.IUninterpretedOption>} uninterpretedOption
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype.uninterpretedOption = $util.emptyArray;
    
                /**
                 * MethodOptions .google.api.http.
                 * @member {google.api.IHttpRule|null|undefined} .google.api.http
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.http"] = null;
    
                /**
                 * MethodOptions .google.api.methodSignature.
                 * @member {Array.<string>} .google.api.methodSignature
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.api.methodSignature"] = $util.emptyArray;
    
                /**
                 * MethodOptions .google.longrunning.operationInfo.
                 * @member {google.longrunning.IOperationInfo|null|undefined} .google.longrunning.operationInfo
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 */
                MethodOptions.prototype[".google.longrunning.operationInfo"] = null;
    
                /**
                 * Creates a new MethodOptions instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions=} [properties] Properties to set
                 * @returns {google.protobuf.MethodOptions} MethodOptions instance
                 */
                MethodOptions.create = function create(properties) {
                    return new MethodOptions(properties);
                };
    
                /**
                 * Encodes the specified MethodOptions message. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.deprecated != null && Object.hasOwnProperty.call(message, "deprecated"))
                        writer.uint32(/* id 33, wireType 0 =*/264).bool(message.deprecated);
                    if (message.idempotencyLevel != null && Object.hasOwnProperty.call(message, "idempotencyLevel"))
                        writer.uint32(/* id 34, wireType 0 =*/272).int32(message.idempotencyLevel);
                    if (message.uninterpretedOption != null && message.uninterpretedOption.length)
                        for (var i = 0; i < message.uninterpretedOption.length; ++i)
                            $root.google.protobuf.UninterpretedOption.encode(message.uninterpretedOption[i], writer.uint32(/* id 999, wireType 2 =*/7994).fork()).ldelim();
                    if (message[".google.longrunning.operationInfo"] != null && Object.hasOwnProperty.call(message, ".google.longrunning.operationInfo"))
                        $root.google.longrunning.OperationInfo.encode(message[".google.longrunning.operationInfo"], writer.uint32(/* id 1049, wireType 2 =*/8394).fork()).ldelim();
                    if (message[".google.api.methodSignature"] != null && message[".google.api.methodSignature"].length)
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            writer.uint32(/* id 1051, wireType 2 =*/8410).string(message[".google.api.methodSignature"][i]);
                    if (message[".google.api.http"] != null && Object.hasOwnProperty.call(message, ".google.api.http"))
                        $root.google.api.HttpRule.encode(message[".google.api.http"], writer.uint32(/* id 72295728, wireType 2 =*/578365826).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified MethodOptions message, length delimited. Does not implicitly {@link google.protobuf.MethodOptions.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.IMethodOptions} message MethodOptions message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                MethodOptions.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.MethodOptions();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 33:
                            message.deprecated = reader.bool();
                            break;
                        case 34:
                            message.idempotencyLevel = reader.int32();
                            break;
                        case 999:
                            if (!(message.uninterpretedOption && message.uninterpretedOption.length))
                                message.uninterpretedOption = [];
                            message.uninterpretedOption.push($root.google.protobuf.UninterpretedOption.decode(reader, reader.uint32()));
                            break;
                        case 72295728:
                            message[".google.api.http"] = $root.google.api.HttpRule.decode(reader, reader.uint32());
                            break;
                        case 1051:
                            if (!(message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length))
                                message[".google.api.methodSignature"] = [];
                            message[".google.api.methodSignature"].push(reader.string());
                            break;
                        case 1049:
                            message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a MethodOptions message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                MethodOptions.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a MethodOptions message.
                 * @function verify
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                MethodOptions.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        if (typeof message.deprecated !== "boolean")
                            return "deprecated: boolean expected";
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        switch (message.idempotencyLevel) {
                        default:
                            return "idempotencyLevel: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.uninterpretedOption != null && message.hasOwnProperty("uninterpretedOption")) {
                        if (!Array.isArray(message.uninterpretedOption))
                            return "uninterpretedOption: array expected";
                        for (var i = 0; i < message.uninterpretedOption.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.verify(message.uninterpretedOption[i]);
                            if (error)
                                return "uninterpretedOption." + error;
                        }
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http")) {
                        var error = $root.google.api.HttpRule.verify(message[".google.api.http"]);
                        if (error)
                            return ".google.api.http." + error;
                    }
                    if (message[".google.api.methodSignature"] != null && message.hasOwnProperty(".google.api.methodSignature")) {
                        if (!Array.isArray(message[".google.api.methodSignature"]))
                            return ".google.api.methodSignature: array expected";
                        for (var i = 0; i < message[".google.api.methodSignature"].length; ++i)
                            if (!$util.isString(message[".google.api.methodSignature"][i]))
                                return ".google.api.methodSignature: string[] expected";
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo")) {
                        var error = $root.google.longrunning.OperationInfo.verify(message[".google.longrunning.operationInfo"]);
                        if (error)
                            return ".google.longrunning.operationInfo." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a MethodOptions message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.MethodOptions} MethodOptions
                 */
                MethodOptions.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.MethodOptions)
                        return object;
                    var message = new $root.google.protobuf.MethodOptions();
                    if (object.deprecated != null)
                        message.deprecated = Boolean(object.deprecated);
                    switch (object.idempotencyLevel) {
                    case "IDEMPOTENCY_UNKNOWN":
                    case 0:
                        message.idempotencyLevel = 0;
                        break;
                    case "NO_SIDE_EFFECTS":
                    case 1:
                        message.idempotencyLevel = 1;
                        break;
                    case "IDEMPOTENT":
                    case 2:
                        message.idempotencyLevel = 2;
                        break;
                    }
                    if (object.uninterpretedOption) {
                        if (!Array.isArray(object.uninterpretedOption))
                            throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: array expected");
                        message.uninterpretedOption = [];
                        for (var i = 0; i < object.uninterpretedOption.length; ++i) {
                            if (typeof object.uninterpretedOption[i] !== "object")
                                throw TypeError(".google.protobuf.MethodOptions.uninterpretedOption: object expected");
                            message.uninterpretedOption[i] = $root.google.protobuf.UninterpretedOption.fromObject(object.uninterpretedOption[i]);
                        }
                    }
                    if (object[".google.api.http"] != null) {
                        if (typeof object[".google.api.http"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.api.http: object expected");
                        message[".google.api.http"] = $root.google.api.HttpRule.fromObject(object[".google.api.http"]);
                    }
                    if (object[".google.api.methodSignature"]) {
                        if (!Array.isArray(object[".google.api.methodSignature"]))
                            throw TypeError(".google.protobuf.MethodOptions..google.api.methodSignature: array expected");
                        message[".google.api.methodSignature"] = [];
                        for (var i = 0; i < object[".google.api.methodSignature"].length; ++i)
                            message[".google.api.methodSignature"][i] = String(object[".google.api.methodSignature"][i]);
                    }
                    if (object[".google.longrunning.operationInfo"] != null) {
                        if (typeof object[".google.longrunning.operationInfo"] !== "object")
                            throw TypeError(".google.protobuf.MethodOptions..google.longrunning.operationInfo: object expected");
                        message[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.fromObject(object[".google.longrunning.operationInfo"]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a MethodOptions message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.MethodOptions
                 * @static
                 * @param {google.protobuf.MethodOptions} message MethodOptions
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                MethodOptions.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.uninterpretedOption = [];
                        object[".google.api.methodSignature"] = [];
                    }
                    if (options.defaults) {
                        object.deprecated = false;
                        object.idempotencyLevel = options.enums === String ? "IDEMPOTENCY_UNKNOWN" : 0;
                        object[".google.longrunning.operationInfo"] = null;
                        object[".google.api.http"] = null;
                    }
                    if (message.deprecated != null && message.hasOwnProperty("deprecated"))
                        object.deprecated = message.deprecated;
                    if (message.idempotencyLevel != null && message.hasOwnProperty("idempotencyLevel"))
                        object.idempotencyLevel = options.enums === String ? $root.google.protobuf.MethodOptions.IdempotencyLevel[message.idempotencyLevel] : message.idempotencyLevel;
                    if (message.uninterpretedOption && message.uninterpretedOption.length) {
                        object.uninterpretedOption = [];
                        for (var j = 0; j < message.uninterpretedOption.length; ++j)
                            object.uninterpretedOption[j] = $root.google.protobuf.UninterpretedOption.toObject(message.uninterpretedOption[j], options);
                    }
                    if (message[".google.longrunning.operationInfo"] != null && message.hasOwnProperty(".google.longrunning.operationInfo"))
                        object[".google.longrunning.operationInfo"] = $root.google.longrunning.OperationInfo.toObject(message[".google.longrunning.operationInfo"], options);
                    if (message[".google.api.methodSignature"] && message[".google.api.methodSignature"].length) {
                        object[".google.api.methodSignature"] = [];
                        for (var j = 0; j < message[".google.api.methodSignature"].length; ++j)
                            object[".google.api.methodSignature"][j] = message[".google.api.methodSignature"][j];
                    }
                    if (message[".google.api.http"] != null && message.hasOwnProperty(".google.api.http"))
                        object[".google.api.http"] = $root.google.api.HttpRule.toObject(message[".google.api.http"], options);
                    return object;
                };
    
                /**
                 * Converts this MethodOptions to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.MethodOptions
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                MethodOptions.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * IdempotencyLevel enum.
                 * @name google.protobuf.MethodOptions.IdempotencyLevel
                 * @enum {number}
                 * @property {number} IDEMPOTENCY_UNKNOWN=0 IDEMPOTENCY_UNKNOWN value
                 * @property {number} NO_SIDE_EFFECTS=1 NO_SIDE_EFFECTS value
                 * @property {number} IDEMPOTENT=2 IDEMPOTENT value
                 */
                MethodOptions.IdempotencyLevel = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "IDEMPOTENCY_UNKNOWN"] = 0;
                    values[valuesById[1] = "NO_SIDE_EFFECTS"] = 1;
                    values[valuesById[2] = "IDEMPOTENT"] = 2;
                    return values;
                })();
    
                return MethodOptions;
            })();
    
            protobuf.UninterpretedOption = (function() {
    
                /**
                 * Properties of an UninterpretedOption.
                 * @memberof google.protobuf
                 * @interface IUninterpretedOption
                 * @property {Array.<google.protobuf.UninterpretedOption.INamePart>|null} [name] UninterpretedOption name
                 * @property {string|null} [identifierValue] UninterpretedOption identifierValue
                 * @property {number|Long|null} [positiveIntValue] UninterpretedOption positiveIntValue
                 * @property {number|Long|null} [negativeIntValue] UninterpretedOption negativeIntValue
                 * @property {number|null} [doubleValue] UninterpretedOption doubleValue
                 * @property {Uint8Array|null} [stringValue] UninterpretedOption stringValue
                 * @property {string|null} [aggregateValue] UninterpretedOption aggregateValue
                 */
    
                /**
                 * Constructs a new UninterpretedOption.
                 * @memberof google.protobuf
                 * @classdesc Represents an UninterpretedOption.
                 * @implements IUninterpretedOption
                 * @constructor
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 */
                function UninterpretedOption(properties) {
                    this.name = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * UninterpretedOption name.
                 * @member {Array.<google.protobuf.UninterpretedOption.INamePart>} name
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.name = $util.emptyArray;
    
                /**
                 * UninterpretedOption identifierValue.
                 * @member {string} identifierValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.identifierValue = "";
    
                /**
                 * UninterpretedOption positiveIntValue.
                 * @member {number|Long} positiveIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.positiveIntValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;
    
                /**
                 * UninterpretedOption negativeIntValue.
                 * @member {number|Long} negativeIntValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.negativeIntValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * UninterpretedOption doubleValue.
                 * @member {number} doubleValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.doubleValue = 0;
    
                /**
                 * UninterpretedOption stringValue.
                 * @member {Uint8Array} stringValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.stringValue = $util.newBuffer([]);
    
                /**
                 * UninterpretedOption aggregateValue.
                 * @member {string} aggregateValue
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 */
                UninterpretedOption.prototype.aggregateValue = "";
    
                /**
                 * Creates a new UninterpretedOption instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption=} [properties] Properties to set
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption instance
                 */
                UninterpretedOption.create = function create(properties) {
                    return new UninterpretedOption(properties);
                };
    
                /**
                 * Encodes the specified UninterpretedOption message. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && message.name.length)
                        for (var i = 0; i < message.name.length; ++i)
                            $root.google.protobuf.UninterpretedOption.NamePart.encode(message.name[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.identifierValue != null && Object.hasOwnProperty.call(message, "identifierValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.identifierValue);
                    if (message.positiveIntValue != null && Object.hasOwnProperty.call(message, "positiveIntValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).uint64(message.positiveIntValue);
                    if (message.negativeIntValue != null && Object.hasOwnProperty.call(message, "negativeIntValue"))
                        writer.uint32(/* id 5, wireType 0 =*/40).int64(message.negativeIntValue);
                    if (message.doubleValue != null && Object.hasOwnProperty.call(message, "doubleValue"))
                        writer.uint32(/* id 6, wireType 1 =*/49).double(message.doubleValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.stringValue);
                    if (message.aggregateValue != null && Object.hasOwnProperty.call(message, "aggregateValue"))
                        writer.uint32(/* id 8, wireType 2 =*/66).string(message.aggregateValue);
                    return writer;
                };
    
                /**
                 * Encodes the specified UninterpretedOption message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.IUninterpretedOption} message UninterpretedOption message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                UninterpretedOption.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 2:
                            if (!(message.name && message.name.length))
                                message.name = [];
                            message.name.push($root.google.protobuf.UninterpretedOption.NamePart.decode(reader, reader.uint32()));
                            break;
                        case 3:
                            message.identifierValue = reader.string();
                            break;
                        case 4:
                            message.positiveIntValue = reader.uint64();
                            break;
                        case 5:
                            message.negativeIntValue = reader.int64();
                            break;
                        case 6:
                            message.doubleValue = reader.double();
                            break;
                        case 7:
                            message.stringValue = reader.bytes();
                            break;
                        case 8:
                            message.aggregateValue = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an UninterpretedOption message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                UninterpretedOption.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an UninterpretedOption message.
                 * @function verify
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                UninterpretedOption.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name")) {
                        if (!Array.isArray(message.name))
                            return "name: array expected";
                        for (var i = 0; i < message.name.length; ++i) {
                            var error = $root.google.protobuf.UninterpretedOption.NamePart.verify(message.name[i]);
                            if (error)
                                return "name." + error;
                        }
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        if (!$util.isString(message.identifierValue))
                            return "identifierValue: string expected";
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (!$util.isInteger(message.positiveIntValue) && !(message.positiveIntValue && $util.isInteger(message.positiveIntValue.low) && $util.isInteger(message.positiveIntValue.high)))
                            return "positiveIntValue: integer|Long expected";
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (!$util.isInteger(message.negativeIntValue) && !(message.negativeIntValue && $util.isInteger(message.negativeIntValue.low) && $util.isInteger(message.negativeIntValue.high)))
                            return "negativeIntValue: integer|Long expected";
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        if (typeof message.doubleValue !== "number")
                            return "doubleValue: number expected";
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        if (!(message.stringValue && typeof message.stringValue.length === "number" || $util.isString(message.stringValue)))
                            return "stringValue: buffer expected";
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        if (!$util.isString(message.aggregateValue))
                            return "aggregateValue: string expected";
                    return null;
                };
    
                /**
                 * Creates an UninterpretedOption message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.UninterpretedOption} UninterpretedOption
                 */
                UninterpretedOption.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.UninterpretedOption)
                        return object;
                    var message = new $root.google.protobuf.UninterpretedOption();
                    if (object.name) {
                        if (!Array.isArray(object.name))
                            throw TypeError(".google.protobuf.UninterpretedOption.name: array expected");
                        message.name = [];
                        for (var i = 0; i < object.name.length; ++i) {
                            if (typeof object.name[i] !== "object")
                                throw TypeError(".google.protobuf.UninterpretedOption.name: object expected");
                            message.name[i] = $root.google.protobuf.UninterpretedOption.NamePart.fromObject(object.name[i]);
                        }
                    }
                    if (object.identifierValue != null)
                        message.identifierValue = String(object.identifierValue);
                    if (object.positiveIntValue != null)
                        if ($util.Long)
                            (message.positiveIntValue = $util.Long.fromValue(object.positiveIntValue)).unsigned = true;
                        else if (typeof object.positiveIntValue === "string")
                            message.positiveIntValue = parseInt(object.positiveIntValue, 10);
                        else if (typeof object.positiveIntValue === "number")
                            message.positiveIntValue = object.positiveIntValue;
                        else if (typeof object.positiveIntValue === "object")
                            message.positiveIntValue = new $util.LongBits(object.positiveIntValue.low >>> 0, object.positiveIntValue.high >>> 0).toNumber(true);
                    if (object.negativeIntValue != null)
                        if ($util.Long)
                            (message.negativeIntValue = $util.Long.fromValue(object.negativeIntValue)).unsigned = false;
                        else if (typeof object.negativeIntValue === "string")
                            message.negativeIntValue = parseInt(object.negativeIntValue, 10);
                        else if (typeof object.negativeIntValue === "number")
                            message.negativeIntValue = object.negativeIntValue;
                        else if (typeof object.negativeIntValue === "object")
                            message.negativeIntValue = new $util.LongBits(object.negativeIntValue.low >>> 0, object.negativeIntValue.high >>> 0).toNumber();
                    if (object.doubleValue != null)
                        message.doubleValue = Number(object.doubleValue);
                    if (object.stringValue != null)
                        if (typeof object.stringValue === "string")
                            $util.base64.decode(object.stringValue, message.stringValue = $util.newBuffer($util.base64.length(object.stringValue)), 0);
                        else if (object.stringValue.length)
                            message.stringValue = object.stringValue;
                    if (object.aggregateValue != null)
                        message.aggregateValue = String(object.aggregateValue);
                    return message;
                };
    
                /**
                 * Creates a plain object from an UninterpretedOption message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.UninterpretedOption
                 * @static
                 * @param {google.protobuf.UninterpretedOption} message UninterpretedOption
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                UninterpretedOption.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.name = [];
                    if (options.defaults) {
                        object.identifierValue = "";
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, true);
                            object.positiveIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.positiveIntValue = options.longs === String ? "0" : 0;
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.negativeIntValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.negativeIntValue = options.longs === String ? "0" : 0;
                        object.doubleValue = 0;
                        if (options.bytes === String)
                            object.stringValue = "";
                        else {
                            object.stringValue = [];
                            if (options.bytes !== Array)
                                object.stringValue = $util.newBuffer(object.stringValue);
                        }
                        object.aggregateValue = "";
                    }
                    if (message.name && message.name.length) {
                        object.name = [];
                        for (var j = 0; j < message.name.length; ++j)
                            object.name[j] = $root.google.protobuf.UninterpretedOption.NamePart.toObject(message.name[j], options);
                    }
                    if (message.identifierValue != null && message.hasOwnProperty("identifierValue"))
                        object.identifierValue = message.identifierValue;
                    if (message.positiveIntValue != null && message.hasOwnProperty("positiveIntValue"))
                        if (typeof message.positiveIntValue === "number")
                            object.positiveIntValue = options.longs === String ? String(message.positiveIntValue) : message.positiveIntValue;
                        else
                            object.positiveIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.positiveIntValue) : options.longs === Number ? new $util.LongBits(message.positiveIntValue.low >>> 0, message.positiveIntValue.high >>> 0).toNumber(true) : message.positiveIntValue;
                    if (message.negativeIntValue != null && message.hasOwnProperty("negativeIntValue"))
                        if (typeof message.negativeIntValue === "number")
                            object.negativeIntValue = options.longs === String ? String(message.negativeIntValue) : message.negativeIntValue;
                        else
                            object.negativeIntValue = options.longs === String ? $util.Long.prototype.toString.call(message.negativeIntValue) : options.longs === Number ? new $util.LongBits(message.negativeIntValue.low >>> 0, message.negativeIntValue.high >>> 0).toNumber() : message.negativeIntValue;
                    if (message.doubleValue != null && message.hasOwnProperty("doubleValue"))
                        object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;
                    if (message.stringValue != null && message.hasOwnProperty("stringValue"))
                        object.stringValue = options.bytes === String ? $util.base64.encode(message.stringValue, 0, message.stringValue.length) : options.bytes === Array ? Array.prototype.slice.call(message.stringValue) : message.stringValue;
                    if (message.aggregateValue != null && message.hasOwnProperty("aggregateValue"))
                        object.aggregateValue = message.aggregateValue;
                    return object;
                };
    
                /**
                 * Converts this UninterpretedOption to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.UninterpretedOption
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                UninterpretedOption.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                UninterpretedOption.NamePart = (function() {
    
                    /**
                     * Properties of a NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @interface INamePart
                     * @property {string} namePart NamePart namePart
                     * @property {boolean} isExtension NamePart isExtension
                     */
    
                    /**
                     * Constructs a new NamePart.
                     * @memberof google.protobuf.UninterpretedOption
                     * @classdesc Represents a NamePart.
                     * @implements INamePart
                     * @constructor
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     */
                    function NamePart(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * NamePart namePart.
                     * @member {string} namePart
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.namePart = "";
    
                    /**
                     * NamePart isExtension.
                     * @member {boolean} isExtension
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     */
                    NamePart.prototype.isExtension = false;
    
                    /**
                     * Creates a new NamePart instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart=} [properties] Properties to set
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart instance
                     */
                    NamePart.create = function create(properties) {
                        return new NamePart(properties);
                    };
    
                    /**
                     * Encodes the specified NamePart message. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.namePart);
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.isExtension);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified NamePart message, length delimited. Does not implicitly {@link google.protobuf.UninterpretedOption.NamePart.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.INamePart} message NamePart message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    NamePart.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                message.namePart = reader.string();
                                break;
                            case 2:
                                message.isExtension = reader.bool();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        if (!message.hasOwnProperty("namePart"))
                            throw $util.ProtocolError("missing required 'namePart'", { instance: message });
                        if (!message.hasOwnProperty("isExtension"))
                            throw $util.ProtocolError("missing required 'isExtension'", { instance: message });
                        return message;
                    };
    
                    /**
                     * Decodes a NamePart message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    NamePart.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a NamePart message.
                     * @function verify
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    NamePart.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (!$util.isString(message.namePart))
                            return "namePart: string expected";
                        if (typeof message.isExtension !== "boolean")
                            return "isExtension: boolean expected";
                        return null;
                    };
    
                    /**
                     * Creates a NamePart message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.UninterpretedOption.NamePart} NamePart
                     */
                    NamePart.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.UninterpretedOption.NamePart)
                            return object;
                        var message = new $root.google.protobuf.UninterpretedOption.NamePart();
                        if (object.namePart != null)
                            message.namePart = String(object.namePart);
                        if (object.isExtension != null)
                            message.isExtension = Boolean(object.isExtension);
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a NamePart message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @static
                     * @param {google.protobuf.UninterpretedOption.NamePart} message NamePart
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    NamePart.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.defaults) {
                            object.namePart = "";
                            object.isExtension = false;
                        }
                        if (message.namePart != null && message.hasOwnProperty("namePart"))
                            object.namePart = message.namePart;
                        if (message.isExtension != null && message.hasOwnProperty("isExtension"))
                            object.isExtension = message.isExtension;
                        return object;
                    };
    
                    /**
                     * Converts this NamePart to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.UninterpretedOption.NamePart
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    NamePart.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return NamePart;
                })();
    
                return UninterpretedOption;
            })();
    
            protobuf.SourceCodeInfo = (function() {
    
                /**
                 * Properties of a SourceCodeInfo.
                 * @memberof google.protobuf
                 * @interface ISourceCodeInfo
                 * @property {Array.<google.protobuf.SourceCodeInfo.ILocation>|null} [location] SourceCodeInfo location
                 */
    
                /**
                 * Constructs a new SourceCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a SourceCodeInfo.
                 * @implements ISourceCodeInfo
                 * @constructor
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 */
                function SourceCodeInfo(properties) {
                    this.location = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * SourceCodeInfo location.
                 * @member {Array.<google.protobuf.SourceCodeInfo.ILocation>} location
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 */
                SourceCodeInfo.prototype.location = $util.emptyArray;
    
                /**
                 * Creates a new SourceCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo instance
                 */
                SourceCodeInfo.create = function create(properties) {
                    return new SourceCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.location != null && message.location.length)
                        for (var i = 0; i < message.location.length; ++i)
                            $root.google.protobuf.SourceCodeInfo.Location.encode(message.location[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified SourceCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.ISourceCodeInfo} message SourceCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                SourceCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.location && message.location.length))
                                message.location = [];
                            message.location.push($root.google.protobuf.SourceCodeInfo.Location.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a SourceCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                SourceCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a SourceCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                SourceCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.location != null && message.hasOwnProperty("location")) {
                        if (!Array.isArray(message.location))
                            return "location: array expected";
                        for (var i = 0; i < message.location.length; ++i) {
                            var error = $root.google.protobuf.SourceCodeInfo.Location.verify(message.location[i]);
                            if (error)
                                return "location." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a SourceCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.SourceCodeInfo} SourceCodeInfo
                 */
                SourceCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.SourceCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.SourceCodeInfo();
                    if (object.location) {
                        if (!Array.isArray(object.location))
                            throw TypeError(".google.protobuf.SourceCodeInfo.location: array expected");
                        message.location = [];
                        for (var i = 0; i < object.location.length; ++i) {
                            if (typeof object.location[i] !== "object")
                                throw TypeError(".google.protobuf.SourceCodeInfo.location: object expected");
                            message.location[i] = $root.google.protobuf.SourceCodeInfo.Location.fromObject(object.location[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a SourceCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.SourceCodeInfo
                 * @static
                 * @param {google.protobuf.SourceCodeInfo} message SourceCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                SourceCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.location = [];
                    if (message.location && message.location.length) {
                        object.location = [];
                        for (var j = 0; j < message.location.length; ++j)
                            object.location[j] = $root.google.protobuf.SourceCodeInfo.Location.toObject(message.location[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this SourceCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.SourceCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                SourceCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                SourceCodeInfo.Location = (function() {
    
                    /**
                     * Properties of a Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @interface ILocation
                     * @property {Array.<number>|null} [path] Location path
                     * @property {Array.<number>|null} [span] Location span
                     * @property {string|null} [leadingComments] Location leadingComments
                     * @property {string|null} [trailingComments] Location trailingComments
                     * @property {Array.<string>|null} [leadingDetachedComments] Location leadingDetachedComments
                     */
    
                    /**
                     * Constructs a new Location.
                     * @memberof google.protobuf.SourceCodeInfo
                     * @classdesc Represents a Location.
                     * @implements ILocation
                     * @constructor
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     */
                    function Location(properties) {
                        this.path = [];
                        this.span = [];
                        this.leadingDetachedComments = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Location path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.path = $util.emptyArray;
    
                    /**
                     * Location span.
                     * @member {Array.<number>} span
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.span = $util.emptyArray;
    
                    /**
                     * Location leadingComments.
                     * @member {string} leadingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingComments = "";
    
                    /**
                     * Location trailingComments.
                     * @member {string} trailingComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.trailingComments = "";
    
                    /**
                     * Location leadingDetachedComments.
                     * @member {Array.<string>} leadingDetachedComments
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     */
                    Location.prototype.leadingDetachedComments = $util.emptyArray;
    
                    /**
                     * Creates a new Location instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation=} [properties] Properties to set
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location instance
                     */
                    Location.create = function create(properties) {
                        return new Location(properties);
                    };
    
                    /**
                     * Encodes the specified Location message. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.span != null && message.span.length) {
                            writer.uint32(/* id 2, wireType 2 =*/18).fork();
                            for (var i = 0; i < message.span.length; ++i)
                                writer.int32(message.span[i]);
                            writer.ldelim();
                        }
                        if (message.leadingComments != null && Object.hasOwnProperty.call(message, "leadingComments"))
                            writer.uint32(/* id 3, wireType 2 =*/26).string(message.leadingComments);
                        if (message.trailingComments != null && Object.hasOwnProperty.call(message, "trailingComments"))
                            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trailingComments);
                        if (message.leadingDetachedComments != null && message.leadingDetachedComments.length)
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.leadingDetachedComments[i]);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Location message, length delimited. Does not implicitly {@link google.protobuf.SourceCodeInfo.Location.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.ILocation} message Location message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Location.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.SourceCodeInfo.Location();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                if (!(message.span && message.span.length))
                                    message.span = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.span.push(reader.int32());
                                } else
                                    message.span.push(reader.int32());
                                break;
                            case 3:
                                message.leadingComments = reader.string();
                                break;
                            case 4:
                                message.trailingComments = reader.string();
                                break;
                            case 6:
                                if (!(message.leadingDetachedComments && message.leadingDetachedComments.length))
                                    message.leadingDetachedComments = [];
                                message.leadingDetachedComments.push(reader.string());
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes a Location message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Location.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies a Location message.
                     * @function verify
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Location.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.span != null && message.hasOwnProperty("span")) {
                            if (!Array.isArray(message.span))
                                return "span: array expected";
                            for (var i = 0; i < message.span.length; ++i)
                                if (!$util.isInteger(message.span[i]))
                                    return "span: integer[] expected";
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            if (!$util.isString(message.leadingComments))
                                return "leadingComments: string expected";
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            if (!$util.isString(message.trailingComments))
                                return "trailingComments: string expected";
                        if (message.leadingDetachedComments != null && message.hasOwnProperty("leadingDetachedComments")) {
                            if (!Array.isArray(message.leadingDetachedComments))
                                return "leadingDetachedComments: array expected";
                            for (var i = 0; i < message.leadingDetachedComments.length; ++i)
                                if (!$util.isString(message.leadingDetachedComments[i]))
                                    return "leadingDetachedComments: string[] expected";
                        }
                        return null;
                    };
    
                    /**
                     * Creates a Location message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.SourceCodeInfo.Location} Location
                     */
                    Location.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.SourceCodeInfo.Location)
                            return object;
                        var message = new $root.google.protobuf.SourceCodeInfo.Location();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.span) {
                            if (!Array.isArray(object.span))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.span: array expected");
                            message.span = [];
                            for (var i = 0; i < object.span.length; ++i)
                                message.span[i] = object.span[i] | 0;
                        }
                        if (object.leadingComments != null)
                            message.leadingComments = String(object.leadingComments);
                        if (object.trailingComments != null)
                            message.trailingComments = String(object.trailingComments);
                        if (object.leadingDetachedComments) {
                            if (!Array.isArray(object.leadingDetachedComments))
                                throw TypeError(".google.protobuf.SourceCodeInfo.Location.leadingDetachedComments: array expected");
                            message.leadingDetachedComments = [];
                            for (var i = 0; i < object.leadingDetachedComments.length; ++i)
                                message.leadingDetachedComments[i] = String(object.leadingDetachedComments[i]);
                        }
                        return message;
                    };
    
                    /**
                     * Creates a plain object from a Location message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @static
                     * @param {google.protobuf.SourceCodeInfo.Location} message Location
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Location.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults) {
                            object.path = [];
                            object.span = [];
                            object.leadingDetachedComments = [];
                        }
                        if (options.defaults) {
                            object.leadingComments = "";
                            object.trailingComments = "";
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.span && message.span.length) {
                            object.span = [];
                            for (var j = 0; j < message.span.length; ++j)
                                object.span[j] = message.span[j];
                        }
                        if (message.leadingComments != null && message.hasOwnProperty("leadingComments"))
                            object.leadingComments = message.leadingComments;
                        if (message.trailingComments != null && message.hasOwnProperty("trailingComments"))
                            object.trailingComments = message.trailingComments;
                        if (message.leadingDetachedComments && message.leadingDetachedComments.length) {
                            object.leadingDetachedComments = [];
                            for (var j = 0; j < message.leadingDetachedComments.length; ++j)
                                object.leadingDetachedComments[j] = message.leadingDetachedComments[j];
                        }
                        return object;
                    };
    
                    /**
                     * Converts this Location to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.SourceCodeInfo.Location
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Location.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Location;
                })();
    
                return SourceCodeInfo;
            })();
    
            protobuf.GeneratedCodeInfo = (function() {
    
                /**
                 * Properties of a GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @interface IGeneratedCodeInfo
                 * @property {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>|null} [annotation] GeneratedCodeInfo annotation
                 */
    
                /**
                 * Constructs a new GeneratedCodeInfo.
                 * @memberof google.protobuf
                 * @classdesc Represents a GeneratedCodeInfo.
                 * @implements IGeneratedCodeInfo
                 * @constructor
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 */
                function GeneratedCodeInfo(properties) {
                    this.annotation = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GeneratedCodeInfo annotation.
                 * @member {Array.<google.protobuf.GeneratedCodeInfo.IAnnotation>} annotation
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 */
                GeneratedCodeInfo.prototype.annotation = $util.emptyArray;
    
                /**
                 * Creates a new GeneratedCodeInfo instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo=} [properties] Properties to set
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo instance
                 */
                GeneratedCodeInfo.create = function create(properties) {
                    return new GeneratedCodeInfo(properties);
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.annotation != null && message.annotation.length)
                        for (var i = 0; i < message.annotation.length; ++i)
                            $root.google.protobuf.GeneratedCodeInfo.Annotation.encode(message.annotation[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified GeneratedCodeInfo message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.IGeneratedCodeInfo} message GeneratedCodeInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GeneratedCodeInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.annotation && message.annotation.length))
                                message.annotation = [];
                            message.annotation.push($root.google.protobuf.GeneratedCodeInfo.Annotation.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GeneratedCodeInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GeneratedCodeInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GeneratedCodeInfo message.
                 * @function verify
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GeneratedCodeInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.annotation != null && message.hasOwnProperty("annotation")) {
                        if (!Array.isArray(message.annotation))
                            return "annotation: array expected";
                        for (var i = 0; i < message.annotation.length; ++i) {
                            var error = $root.google.protobuf.GeneratedCodeInfo.Annotation.verify(message.annotation[i]);
                            if (error)
                                return "annotation." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a GeneratedCodeInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.GeneratedCodeInfo} GeneratedCodeInfo
                 */
                GeneratedCodeInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.GeneratedCodeInfo)
                        return object;
                    var message = new $root.google.protobuf.GeneratedCodeInfo();
                    if (object.annotation) {
                        if (!Array.isArray(object.annotation))
                            throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: array expected");
                        message.annotation = [];
                        for (var i = 0; i < object.annotation.length; ++i) {
                            if (typeof object.annotation[i] !== "object")
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.annotation: object expected");
                            message.annotation[i] = $root.google.protobuf.GeneratedCodeInfo.Annotation.fromObject(object.annotation[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a GeneratedCodeInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @static
                 * @param {google.protobuf.GeneratedCodeInfo} message GeneratedCodeInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GeneratedCodeInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.annotation = [];
                    if (message.annotation && message.annotation.length) {
                        object.annotation = [];
                        for (var j = 0; j < message.annotation.length; ++j)
                            object.annotation[j] = $root.google.protobuf.GeneratedCodeInfo.Annotation.toObject(message.annotation[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this GeneratedCodeInfo to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.GeneratedCodeInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GeneratedCodeInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                GeneratedCodeInfo.Annotation = (function() {
    
                    /**
                     * Properties of an Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @interface IAnnotation
                     * @property {Array.<number>|null} [path] Annotation path
                     * @property {string|null} [sourceFile] Annotation sourceFile
                     * @property {number|null} [begin] Annotation begin
                     * @property {number|null} [end] Annotation end
                     */
    
                    /**
                     * Constructs a new Annotation.
                     * @memberof google.protobuf.GeneratedCodeInfo
                     * @classdesc Represents an Annotation.
                     * @implements IAnnotation
                     * @constructor
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     */
                    function Annotation(properties) {
                        this.path = [];
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }
    
                    /**
                     * Annotation path.
                     * @member {Array.<number>} path
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.path = $util.emptyArray;
    
                    /**
                     * Annotation sourceFile.
                     * @member {string} sourceFile
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.sourceFile = "";
    
                    /**
                     * Annotation begin.
                     * @member {number} begin
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.begin = 0;
    
                    /**
                     * Annotation end.
                     * @member {number} end
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     */
                    Annotation.prototype.end = 0;
    
                    /**
                     * Creates a new Annotation instance using the specified properties.
                     * @function create
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation=} [properties] Properties to set
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation instance
                     */
                    Annotation.create = function create(properties) {
                        return new Annotation(properties);
                    };
    
                    /**
                     * Encodes the specified Annotation message. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.path != null && message.path.length) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork();
                            for (var i = 0; i < message.path.length; ++i)
                                writer.int32(message.path[i]);
                            writer.ldelim();
                        }
                        if (message.sourceFile != null && Object.hasOwnProperty.call(message, "sourceFile"))
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.sourceFile);
                        if (message.begin != null && Object.hasOwnProperty.call(message, "begin"))
                            writer.uint32(/* id 3, wireType 0 =*/24).int32(message.begin);
                        if (message.end != null && Object.hasOwnProperty.call(message, "end"))
                            writer.uint32(/* id 4, wireType 0 =*/32).int32(message.end);
                        return writer;
                    };
    
                    /**
                     * Encodes the specified Annotation message, length delimited. Does not implicitly {@link google.protobuf.GeneratedCodeInfo.Annotation.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.IAnnotation} message Annotation message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    Annotation.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer.
                     * @function decode
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1:
                                if (!(message.path && message.path.length))
                                    message.path = [];
                                if ((tag & 7) === 2) {
                                    var end2 = reader.uint32() + reader.pos;
                                    while (reader.pos < end2)
                                        message.path.push(reader.int32());
                                } else
                                    message.path.push(reader.int32());
                                break;
                            case 2:
                                message.sourceFile = reader.string();
                                break;
                            case 3:
                                message.begin = reader.int32();
                                break;
                            case 4:
                                message.end = reader.int32();
                                break;
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };
    
                    /**
                     * Decodes an Annotation message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    Annotation.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };
    
                    /**
                     * Verifies an Annotation message.
                     * @function verify
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    Annotation.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        if (message.path != null && message.hasOwnProperty("path")) {
                            if (!Array.isArray(message.path))
                                return "path: array expected";
                            for (var i = 0; i < message.path.length; ++i)
                                if (!$util.isInteger(message.path[i]))
                                    return "path: integer[] expected";
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            if (!$util.isString(message.sourceFile))
                                return "sourceFile: string expected";
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            if (!$util.isInteger(message.begin))
                                return "begin: integer expected";
                        if (message.end != null && message.hasOwnProperty("end"))
                            if (!$util.isInteger(message.end))
                                return "end: integer expected";
                        return null;
                    };
    
                    /**
                     * Creates an Annotation message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {google.protobuf.GeneratedCodeInfo.Annotation} Annotation
                     */
                    Annotation.fromObject = function fromObject(object) {
                        if (object instanceof $root.google.protobuf.GeneratedCodeInfo.Annotation)
                            return object;
                        var message = new $root.google.protobuf.GeneratedCodeInfo.Annotation();
                        if (object.path) {
                            if (!Array.isArray(object.path))
                                throw TypeError(".google.protobuf.GeneratedCodeInfo.Annotation.path: array expected");
                            message.path = [];
                            for (var i = 0; i < object.path.length; ++i)
                                message.path[i] = object.path[i] | 0;
                        }
                        if (object.sourceFile != null)
                            message.sourceFile = String(object.sourceFile);
                        if (object.begin != null)
                            message.begin = object.begin | 0;
                        if (object.end != null)
                            message.end = object.end | 0;
                        return message;
                    };
    
                    /**
                     * Creates a plain object from an Annotation message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @static
                     * @param {google.protobuf.GeneratedCodeInfo.Annotation} message Annotation
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    Annotation.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (options.arrays || options.defaults)
                            object.path = [];
                        if (options.defaults) {
                            object.sourceFile = "";
                            object.begin = 0;
                            object.end = 0;
                        }
                        if (message.path && message.path.length) {
                            object.path = [];
                            for (var j = 0; j < message.path.length; ++j)
                                object.path[j] = message.path[j];
                        }
                        if (message.sourceFile != null && message.hasOwnProperty("sourceFile"))
                            object.sourceFile = message.sourceFile;
                        if (message.begin != null && message.hasOwnProperty("begin"))
                            object.begin = message.begin;
                        if (message.end != null && message.hasOwnProperty("end"))
                            object.end = message.end;
                        return object;
                    };
    
                    /**
                     * Converts this Annotation to JSON.
                     * @function toJSON
                     * @memberof google.protobuf.GeneratedCodeInfo.Annotation
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    Annotation.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };
    
                    return Annotation;
                })();
    
                return GeneratedCodeInfo;
            })();
    
            protobuf.Any = (function() {
    
                /**
                 * Properties of an Any.
                 * @memberof google.protobuf
                 * @interface IAny
                 * @property {string|null} [type_url] Any type_url
                 * @property {Uint8Array|null} [value] Any value
                 */
    
                /**
                 * Constructs a new Any.
                 * @memberof google.protobuf
                 * @classdesc Represents an Any.
                 * @implements IAny
                 * @constructor
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 */
                function Any(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Any type_url.
                 * @member {string} type_url
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.type_url = "";
    
                /**
                 * Any value.
                 * @member {Uint8Array} value
                 * @memberof google.protobuf.Any
                 * @instance
                 */
                Any.prototype.value = $util.newBuffer([]);
    
                /**
                 * Creates a new Any instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny=} [properties] Properties to set
                 * @returns {google.protobuf.Any} Any instance
                 */
                Any.create = function create(properties) {
                    return new Any(properties);
                };
    
                /**
                 * Encodes the specified Any message. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type_url != null && Object.hasOwnProperty.call(message, "type_url"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type_url);
                    if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                        writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.value);
                    return writer;
                };
    
                /**
                 * Encodes the specified Any message, length delimited. Does not implicitly {@link google.protobuf.Any.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.IAny} message Any message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Any.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Any();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type_url = reader.string();
                            break;
                        case 2:
                            message.value = reader.bytes();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Any message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Any} Any
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Any.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Any message.
                 * @function verify
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Any.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        if (!$util.isString(message.type_url))
                            return "type_url: string expected";
                    if (message.value != null && message.hasOwnProperty("value"))
                        if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                            return "value: buffer expected";
                    return null;
                };
    
                /**
                 * Creates an Any message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Any} Any
                 */
                Any.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Any)
                        return object;
                    var message = new $root.google.protobuf.Any();
                    if (object.type_url != null)
                        message.type_url = String(object.type_url);
                    if (object.value != null)
                        if (typeof object.value === "string")
                            $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                        else if (object.value.length)
                            message.value = object.value;
                    return message;
                };
    
                /**
                 * Creates a plain object from an Any message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Any
                 * @static
                 * @param {google.protobuf.Any} message Any
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Any.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type_url = "";
                        if (options.bytes === String)
                            object.value = "";
                        else {
                            object.value = [];
                            if (options.bytes !== Array)
                                object.value = $util.newBuffer(object.value);
                        }
                    }
                    if (message.type_url != null && message.hasOwnProperty("type_url"))
                        object.type_url = message.type_url;
                    if (message.value != null && message.hasOwnProperty("value"))
                        object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                    return object;
                };
    
                /**
                 * Converts this Any to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Any
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Any.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Any;
            })();
    
            protobuf.Duration = (function() {
    
                /**
                 * Properties of a Duration.
                 * @memberof google.protobuf
                 * @interface IDuration
                 * @property {number|Long|null} [seconds] Duration seconds
                 * @property {number|null} [nanos] Duration nanos
                 */
    
                /**
                 * Constructs a new Duration.
                 * @memberof google.protobuf
                 * @classdesc Represents a Duration.
                 * @implements IDuration
                 * @constructor
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 */
                function Duration(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Duration seconds.
                 * @member {number|Long} seconds
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                /**
                 * Duration nanos.
                 * @member {number} nanos
                 * @memberof google.protobuf.Duration
                 * @instance
                 */
                Duration.prototype.nanos = 0;
    
                /**
                 * Creates a new Duration instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration=} [properties] Properties to set
                 * @returns {google.protobuf.Duration} Duration instance
                 */
                Duration.create = function create(properties) {
                    return new Duration(properties);
                };
    
                /**
                 * Encodes the specified Duration message. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                    if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                    return writer;
                };
    
                /**
                 * Encodes the specified Duration message, length delimited. Does not implicitly {@link google.protobuf.Duration.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.IDuration} message Duration message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Duration.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Duration();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.seconds = reader.int64();
                            break;
                        case 2:
                            message.nanos = reader.int32();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Duration message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Duration} Duration
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Duration.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Duration message.
                 * @function verify
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Duration.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                            return "seconds: integer|Long expected";
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        if (!$util.isInteger(message.nanos))
                            return "nanos: integer expected";
                    return null;
                };
    
                /**
                 * Creates a Duration message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Duration} Duration
                 */
                Duration.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Duration)
                        return object;
                    var message = new $root.google.protobuf.Duration();
                    if (object.seconds != null)
                        if ($util.Long)
                            (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                        else if (typeof object.seconds === "string")
                            message.seconds = parseInt(object.seconds, 10);
                        else if (typeof object.seconds === "number")
                            message.seconds = object.seconds;
                        else if (typeof object.seconds === "object")
                            message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                    if (object.nanos != null)
                        message.nanos = object.nanos | 0;
                    return message;
                };
    
                /**
                 * Creates a plain object from a Duration message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Duration
                 * @static
                 * @param {google.protobuf.Duration} message Duration
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Duration.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        if ($util.Long) {
                            var long = new $util.Long(0, 0, false);
                            object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                        } else
                            object.seconds = options.longs === String ? "0" : 0;
                        object.nanos = 0;
                    }
                    if (message.seconds != null && message.hasOwnProperty("seconds"))
                        if (typeof message.seconds === "number")
                            object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                        else
                            object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                    if (message.nanos != null && message.hasOwnProperty("nanos"))
                        object.nanos = message.nanos;
                    return object;
                };
    
                /**
                 * Converts this Duration to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Duration
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Duration.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Duration;
            })();
    
            protobuf.Empty = (function() {
    
                /**
                 * Properties of an Empty.
                 * @memberof google.protobuf
                 * @interface IEmpty
                 */
    
                /**
                 * Constructs a new Empty.
                 * @memberof google.protobuf
                 * @classdesc Represents an Empty.
                 * @implements IEmpty
                 * @constructor
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 */
                function Empty(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Creates a new Empty instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty=} [properties] Properties to set
                 * @returns {google.protobuf.Empty} Empty instance
                 */
                Empty.create = function create(properties) {
                    return new Empty(properties);
                };
    
                /**
                 * Encodes the specified Empty message. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    return writer;
                };
    
                /**
                 * Encodes the specified Empty message, length delimited. Does not implicitly {@link google.protobuf.Empty.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.IEmpty} message Empty message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Empty.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Empty();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Empty message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Empty} Empty
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Empty.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Empty message.
                 * @function verify
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Empty.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    return null;
                };
    
                /**
                 * Creates an Empty message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Empty} Empty
                 */
                Empty.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Empty)
                        return object;
                    return new $root.google.protobuf.Empty();
                };
    
                /**
                 * Creates a plain object from an Empty message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Empty
                 * @static
                 * @param {google.protobuf.Empty} message Empty
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Empty.toObject = function toObject() {
                    return {};
                };
    
                /**
                 * Converts this Empty to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Empty
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Empty.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Empty;
            })();
    
            protobuf.FieldMask = (function() {
    
                /**
                 * Properties of a FieldMask.
                 * @memberof google.protobuf
                 * @interface IFieldMask
                 * @property {Array.<string>|null} [paths] FieldMask paths
                 */
    
                /**
                 * Constructs a new FieldMask.
                 * @memberof google.protobuf
                 * @classdesc Represents a FieldMask.
                 * @implements IFieldMask
                 * @constructor
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 */
                function FieldMask(properties) {
                    this.paths = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * FieldMask paths.
                 * @member {Array.<string>} paths
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 */
                FieldMask.prototype.paths = $util.emptyArray;
    
                /**
                 * Creates a new FieldMask instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask=} [properties] Properties to set
                 * @returns {google.protobuf.FieldMask} FieldMask instance
                 */
                FieldMask.create = function create(properties) {
                    return new FieldMask(properties);
                };
    
                /**
                 * Encodes the specified FieldMask message. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.paths != null && message.paths.length)
                        for (var i = 0; i < message.paths.length; ++i)
                            writer.uint32(/* id 1, wireType 2 =*/10).string(message.paths[i]);
                    return writer;
                };
    
                /**
                 * Encodes the specified FieldMask message, length delimited. Does not implicitly {@link google.protobuf.FieldMask.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.IFieldMask} message FieldMask message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                FieldMask.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FieldMask();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.paths && message.paths.length))
                                message.paths = [];
                            message.paths.push(reader.string());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a FieldMask message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.FieldMask} FieldMask
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                FieldMask.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a FieldMask message.
                 * @function verify
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                FieldMask.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.paths != null && message.hasOwnProperty("paths")) {
                        if (!Array.isArray(message.paths))
                            return "paths: array expected";
                        for (var i = 0; i < message.paths.length; ++i)
                            if (!$util.isString(message.paths[i]))
                                return "paths: string[] expected";
                    }
                    return null;
                };
    
                /**
                 * Creates a FieldMask message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.FieldMask} FieldMask
                 */
                FieldMask.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.FieldMask)
                        return object;
                    var message = new $root.google.protobuf.FieldMask();
                    if (object.paths) {
                        if (!Array.isArray(object.paths))
                            throw TypeError(".google.protobuf.FieldMask.paths: array expected");
                        message.paths = [];
                        for (var i = 0; i < object.paths.length; ++i)
                            message.paths[i] = String(object.paths[i]);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a FieldMask message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.FieldMask
                 * @static
                 * @param {google.protobuf.FieldMask} message FieldMask
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                FieldMask.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.paths = [];
                    if (message.paths && message.paths.length) {
                        object.paths = [];
                        for (var j = 0; j < message.paths.length; ++j)
                            object.paths[j] = message.paths[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this FieldMask to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.FieldMask
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                FieldMask.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return FieldMask;
            })();
    
            protobuf.Struct = (function() {
    
                /**
                 * Properties of a Struct.
                 * @memberof google.protobuf
                 * @interface IStruct
                 * @property {Object.<string,google.protobuf.IValue>|null} [fields] Struct fields
                 */
    
                /**
                 * Constructs a new Struct.
                 * @memberof google.protobuf
                 * @classdesc Represents a Struct.
                 * @implements IStruct
                 * @constructor
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 */
                function Struct(properties) {
                    this.fields = {};
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Struct fields.
                 * @member {Object.<string,google.protobuf.IValue>} fields
                 * @memberof google.protobuf.Struct
                 * @instance
                 */
                Struct.prototype.fields = $util.emptyObject;
    
                /**
                 * Creates a new Struct instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct=} [properties] Properties to set
                 * @returns {google.protobuf.Struct} Struct instance
                 */
                Struct.create = function create(properties) {
                    return new Struct(properties);
                };
    
                /**
                 * Encodes the specified Struct message. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.fields != null && Object.hasOwnProperty.call(message, "fields"))
                        for (var keys = Object.keys(message.fields), i = 0; i < keys.length; ++i) {
                            writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                            $root.google.protobuf.Value.encode(message.fields[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                        }
                    return writer;
                };
    
                /**
                 * Encodes the specified Struct message, length delimited. Does not implicitly {@link google.protobuf.Struct.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.IStruct} message Struct message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Struct.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Struct(), key, value;
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (message.fields === $util.emptyObject)
                                message.fields = {};
                            var end2 = reader.uint32() + reader.pos;
                            key = "";
                            value = null;
                            while (reader.pos < end2) {
                                var tag2 = reader.uint32();
                                switch (tag2 >>> 3) {
                                case 1:
                                    key = reader.string();
                                    break;
                                case 2:
                                    value = $root.google.protobuf.Value.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag2 & 7);
                                    break;
                                }
                            }
                            message.fields[key] = value;
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Struct message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Struct} Struct
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Struct.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Struct message.
                 * @function verify
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Struct.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.fields != null && message.hasOwnProperty("fields")) {
                        if (!$util.isObject(message.fields))
                            return "fields: object expected";
                        var key = Object.keys(message.fields);
                        for (var i = 0; i < key.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.fields[key[i]]);
                            if (error)
                                return "fields." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Struct message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Struct} Struct
                 */
                Struct.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Struct)
                        return object;
                    var message = new $root.google.protobuf.Struct();
                    if (object.fields) {
                        if (typeof object.fields !== "object")
                            throw TypeError(".google.protobuf.Struct.fields: object expected");
                        message.fields = {};
                        for (var keys = Object.keys(object.fields), i = 0; i < keys.length; ++i) {
                            if (typeof object.fields[keys[i]] !== "object")
                                throw TypeError(".google.protobuf.Struct.fields: object expected");
                            message.fields[keys[i]] = $root.google.protobuf.Value.fromObject(object.fields[keys[i]]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Struct message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Struct
                 * @static
                 * @param {google.protobuf.Struct} message Struct
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Struct.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.objects || options.defaults)
                        object.fields = {};
                    var keys2;
                    if (message.fields && (keys2 = Object.keys(message.fields)).length) {
                        object.fields = {};
                        for (var j = 0; j < keys2.length; ++j)
                            object.fields[keys2[j]] = $root.google.protobuf.Value.toObject(message.fields[keys2[j]], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Struct to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Struct
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Struct.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Struct;
            })();
    
            protobuf.Value = (function() {
    
                /**
                 * Properties of a Value.
                 * @memberof google.protobuf
                 * @interface IValue
                 * @property {google.protobuf.NullValue|null} [nullValue] Value nullValue
                 * @property {number|null} [numberValue] Value numberValue
                 * @property {string|null} [stringValue] Value stringValue
                 * @property {boolean|null} [boolValue] Value boolValue
                 * @property {google.protobuf.IStruct|null} [structValue] Value structValue
                 * @property {google.protobuf.IListValue|null} [listValue] Value listValue
                 */
    
                /**
                 * Constructs a new Value.
                 * @memberof google.protobuf
                 * @classdesc Represents a Value.
                 * @implements IValue
                 * @constructor
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 */
                function Value(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Value nullValue.
                 * @member {google.protobuf.NullValue|null|undefined} nullValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.nullValue = null;
    
                /**
                 * Value numberValue.
                 * @member {number|null|undefined} numberValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.numberValue = null;
    
                /**
                 * Value stringValue.
                 * @member {string|null|undefined} stringValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.stringValue = null;
    
                /**
                 * Value boolValue.
                 * @member {boolean|null|undefined} boolValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.boolValue = null;
    
                /**
                 * Value structValue.
                 * @member {google.protobuf.IStruct|null|undefined} structValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.structValue = null;
    
                /**
                 * Value listValue.
                 * @member {google.protobuf.IListValue|null|undefined} listValue
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Value.prototype.listValue = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Value kind.
                 * @member {"nullValue"|"numberValue"|"stringValue"|"boolValue"|"structValue"|"listValue"|undefined} kind
                 * @memberof google.protobuf.Value
                 * @instance
                 */
                Object.defineProperty(Value.prototype, "kind", {
                    get: $util.oneOfGetter($oneOfFields = ["nullValue", "numberValue", "stringValue", "boolValue", "structValue", "listValue"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Value instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue=} [properties] Properties to set
                 * @returns {google.protobuf.Value} Value instance
                 */
                Value.create = function create(properties) {
                    return new Value(properties);
                };
    
                /**
                 * Encodes the specified Value message. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.nullValue != null && Object.hasOwnProperty.call(message, "nullValue"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.nullValue);
                    if (message.numberValue != null && Object.hasOwnProperty.call(message, "numberValue"))
                        writer.uint32(/* id 2, wireType 1 =*/17).double(message.numberValue);
                    if (message.stringValue != null && Object.hasOwnProperty.call(message, "stringValue"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.stringValue);
                    if (message.boolValue != null && Object.hasOwnProperty.call(message, "boolValue"))
                        writer.uint32(/* id 4, wireType 0 =*/32).bool(message.boolValue);
                    if (message.structValue != null && Object.hasOwnProperty.call(message, "structValue"))
                        $root.google.protobuf.Struct.encode(message.structValue, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    if (message.listValue != null && Object.hasOwnProperty.call(message, "listValue"))
                        $root.google.protobuf.ListValue.encode(message.listValue, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Value message, length delimited. Does not implicitly {@link google.protobuf.Value.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.IValue} message Value message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Value.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Value();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.nullValue = reader.int32();
                            break;
                        case 2:
                            message.numberValue = reader.double();
                            break;
                        case 3:
                            message.stringValue = reader.string();
                            break;
                        case 4:
                            message.boolValue = reader.bool();
                            break;
                        case 5:
                            message.structValue = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                            break;
                        case 6:
                            message.listValue = $root.google.protobuf.ListValue.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Value message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.Value} Value
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Value.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Value message.
                 * @function verify
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Value.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        properties.kind = 1;
                        switch (message.nullValue) {
                        default:
                            return "nullValue: enum value expected";
                        case 0:
                            break;
                        }
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.numberValue !== "number")
                            return "numberValue: number expected";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (!$util.isString(message.stringValue))
                            return "stringValue: string expected";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        if (typeof message.boolValue !== "boolean")
                            return "boolValue: boolean expected";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.Struct.verify(message.structValue);
                            if (error)
                                return "structValue." + error;
                        }
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        if (properties.kind === 1)
                            return "kind: multiple values";
                        properties.kind = 1;
                        {
                            var error = $root.google.protobuf.ListValue.verify(message.listValue);
                            if (error)
                                return "listValue." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Value message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.Value} Value
                 */
                Value.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.Value)
                        return object;
                    var message = new $root.google.protobuf.Value();
                    switch (object.nullValue) {
                    case "NULL_VALUE":
                    case 0:
                        message.nullValue = 0;
                        break;
                    }
                    if (object.numberValue != null)
                        message.numberValue = Number(object.numberValue);
                    if (object.stringValue != null)
                        message.stringValue = String(object.stringValue);
                    if (object.boolValue != null)
                        message.boolValue = Boolean(object.boolValue);
                    if (object.structValue != null) {
                        if (typeof object.structValue !== "object")
                            throw TypeError(".google.protobuf.Value.structValue: object expected");
                        message.structValue = $root.google.protobuf.Struct.fromObject(object.structValue);
                    }
                    if (object.listValue != null) {
                        if (typeof object.listValue !== "object")
                            throw TypeError(".google.protobuf.Value.listValue: object expected");
                        message.listValue = $root.google.protobuf.ListValue.fromObject(object.listValue);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Value message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.Value
                 * @static
                 * @param {google.protobuf.Value} message Value
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Value.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (message.nullValue != null && message.hasOwnProperty("nullValue")) {
                        object.nullValue = options.enums === String ? $root.google.protobuf.NullValue[message.nullValue] : message.nullValue;
                        if (options.oneofs)
                            object.kind = "nullValue";
                    }
                    if (message.numberValue != null && message.hasOwnProperty("numberValue")) {
                        object.numberValue = options.json && !isFinite(message.numberValue) ? String(message.numberValue) : message.numberValue;
                        if (options.oneofs)
                            object.kind = "numberValue";
                    }
                    if (message.stringValue != null && message.hasOwnProperty("stringValue")) {
                        object.stringValue = message.stringValue;
                        if (options.oneofs)
                            object.kind = "stringValue";
                    }
                    if (message.boolValue != null && message.hasOwnProperty("boolValue")) {
                        object.boolValue = message.boolValue;
                        if (options.oneofs)
                            object.kind = "boolValue";
                    }
                    if (message.structValue != null && message.hasOwnProperty("structValue")) {
                        object.structValue = $root.google.protobuf.Struct.toObject(message.structValue, options);
                        if (options.oneofs)
                            object.kind = "structValue";
                    }
                    if (message.listValue != null && message.hasOwnProperty("listValue")) {
                        object.listValue = $root.google.protobuf.ListValue.toObject(message.listValue, options);
                        if (options.oneofs)
                            object.kind = "listValue";
                    }
                    return object;
                };
    
                /**
                 * Converts this Value to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.Value
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Value.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Value;
            })();
    
            /**
             * NullValue enum.
             * @name google.protobuf.NullValue
             * @enum {number}
             * @property {number} NULL_VALUE=0 NULL_VALUE value
             */
            protobuf.NullValue = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "NULL_VALUE"] = 0;
                return values;
            })();
    
            protobuf.ListValue = (function() {
    
                /**
                 * Properties of a ListValue.
                 * @memberof google.protobuf
                 * @interface IListValue
                 * @property {Array.<google.protobuf.IValue>|null} [values] ListValue values
                 */
    
                /**
                 * Constructs a new ListValue.
                 * @memberof google.protobuf
                 * @classdesc Represents a ListValue.
                 * @implements IListValue
                 * @constructor
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 */
                function ListValue(properties) {
                    this.values = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListValue values.
                 * @member {Array.<google.protobuf.IValue>} values
                 * @memberof google.protobuf.ListValue
                 * @instance
                 */
                ListValue.prototype.values = $util.emptyArray;
    
                /**
                 * Creates a new ListValue instance using the specified properties.
                 * @function create
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue=} [properties] Properties to set
                 * @returns {google.protobuf.ListValue} ListValue instance
                 */
                ListValue.create = function create(properties) {
                    return new ListValue(properties);
                };
    
                /**
                 * Encodes the specified ListValue message. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.values != null && message.values.length)
                        for (var i = 0; i < message.values.length; ++i)
                            $root.google.protobuf.Value.encode(message.values[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified ListValue message, length delimited. Does not implicitly {@link google.protobuf.ListValue.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.IListValue} message ListValue message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListValue.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.ListValue();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.values && message.values.length))
                                message.values = [];
                            message.values.push($root.google.protobuf.Value.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListValue message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.protobuf.ListValue} ListValue
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListValue.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListValue message.
                 * @function verify
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListValue.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.values != null && message.hasOwnProperty("values")) {
                        if (!Array.isArray(message.values))
                            return "values: array expected";
                        for (var i = 0; i < message.values.length; ++i) {
                            var error = $root.google.protobuf.Value.verify(message.values[i]);
                            if (error)
                                return "values." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a ListValue message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.protobuf.ListValue} ListValue
                 */
                ListValue.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.protobuf.ListValue)
                        return object;
                    var message = new $root.google.protobuf.ListValue();
                    if (object.values) {
                        if (!Array.isArray(object.values))
                            throw TypeError(".google.protobuf.ListValue.values: array expected");
                        message.values = [];
                        for (var i = 0; i < object.values.length; ++i) {
                            if (typeof object.values[i] !== "object")
                                throw TypeError(".google.protobuf.ListValue.values: object expected");
                            message.values[i] = $root.google.protobuf.Value.fromObject(object.values[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListValue message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.protobuf.ListValue
                 * @static
                 * @param {google.protobuf.ListValue} message ListValue
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListValue.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.values = [];
                    if (message.values && message.values.length) {
                        object.values = [];
                        for (var j = 0; j < message.values.length; ++j)
                            object.values[j] = $root.google.protobuf.Value.toObject(message.values[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this ListValue to JSON.
                 * @function toJSON
                 * @memberof google.protobuf.ListValue
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListValue.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ListValue;
            })();
    
            return protobuf;
        })();
    
        google.cloud = (function() {
    
            /**
             * Namespace cloud.
             * @memberof google
             * @namespace
             */
            var cloud = {};
    
            cloud.gkehub = (function() {
    
                /**
                 * Namespace gkehub.
                 * @memberof google.cloud
                 * @namespace
                 */
                var gkehub = {};
    
                gkehub.configmanagement = (function() {
    
                    /**
                     * Namespace configmanagement.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var configmanagement = {};
    
                    configmanagement.v1 = (function() {
    
                        /**
                         * Namespace v1.
                         * @memberof google.cloud.gkehub.configmanagement
                         * @namespace
                         */
                        var v1 = {};
    
                        /**
                         * DeploymentState enum.
                         * @name google.cloud.gkehub.configmanagement.v1.DeploymentState
                         * @enum {number}
                         * @property {number} DEPLOYMENT_STATE_UNSPECIFIED=0 DEPLOYMENT_STATE_UNSPECIFIED value
                         * @property {number} NOT_INSTALLED=1 NOT_INSTALLED value
                         * @property {number} INSTALLED=2 INSTALLED value
                         * @property {number} ERROR=3 ERROR value
                         */
                        v1.DeploymentState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DEPLOYMENT_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_INSTALLED"] = 1;
                            values[valuesById[2] = "INSTALLED"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            return values;
                        })();
    
                        v1.MembershipState = (function() {
    
                            /**
                             * Properties of a MembershipState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IMembershipState
                             * @property {string|null} [clusterName] MembershipState clusterName
                             * @property {google.cloud.gkehub.configmanagement.v1.IMembershipSpec|null} [membershipSpec] MembershipState membershipSpec
                             * @property {google.cloud.gkehub.configmanagement.v1.IOperatorState|null} [operatorState] MembershipState operatorState
                             * @property {google.cloud.gkehub.configmanagement.v1.IConfigSyncState|null} [configSyncState] MembershipState configSyncState
                             * @property {google.cloud.gkehub.configmanagement.v1.IPolicyControllerState|null} [policyControllerState] MembershipState policyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerState|null} [hierarchyControllerState] MembershipState hierarchyControllerState
                             */
    
                            /**
                             * Constructs a new MembershipState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a MembershipState.
                             * @implements IMembershipState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipState=} [properties] Properties to set
                             */
                            function MembershipState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipState clusterName.
                             * @member {string} clusterName
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.clusterName = "";
    
                            /**
                             * MembershipState membershipSpec.
                             * @member {google.cloud.gkehub.configmanagement.v1.IMembershipSpec|null|undefined} membershipSpec
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.membershipSpec = null;
    
                            /**
                             * MembershipState operatorState.
                             * @member {google.cloud.gkehub.configmanagement.v1.IOperatorState|null|undefined} operatorState
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.operatorState = null;
    
                            /**
                             * MembershipState configSyncState.
                             * @member {google.cloud.gkehub.configmanagement.v1.IConfigSyncState|null|undefined} configSyncState
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.configSyncState = null;
    
                            /**
                             * MembershipState policyControllerState.
                             * @member {google.cloud.gkehub.configmanagement.v1.IPolicyControllerState|null|undefined} policyControllerState
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.policyControllerState = null;
    
                            /**
                             * MembershipState hierarchyControllerState.
                             * @member {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerState|null|undefined} hierarchyControllerState
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.hierarchyControllerState = null;
    
                            /**
                             * Creates a new MembershipState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipState} MembershipState instance
                             */
                            MembershipState.create = function create(properties) {
                                return new MembershipState(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.MembershipState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.clusterName);
                                if (message.membershipSpec != null && Object.hasOwnProperty.call(message, "membershipSpec"))
                                    $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.encode(message.membershipSpec, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.operatorState != null && Object.hasOwnProperty.call(message, "operatorState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.OperatorState.encode(message.operatorState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.configSyncState != null && Object.hasOwnProperty.call(message, "configSyncState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState.encode(message.configSyncState, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.policyControllerState != null && Object.hasOwnProperty.call(message, "policyControllerState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState.encode(message.policyControllerState, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.hierarchyControllerState != null && Object.hasOwnProperty.call(message, "hierarchyControllerState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.encode(message.hierarchyControllerState, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.MembershipState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.MembershipState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.clusterName = reader.string();
                                        break;
                                    case 2:
                                        message.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.operatorState = $root.google.cloud.gkehub.configmanagement.v1.OperatorState.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.configSyncState = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState.decode(reader, reader.uint32());
                                        break;
                                    case 7:
                                        message.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                    if (!$util.isString(message.clusterName))
                                        return "clusterName: string expected";
                                if (message.membershipSpec != null && message.hasOwnProperty("membershipSpec")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.verify(message.membershipSpec);
                                    if (error)
                                        return "membershipSpec." + error;
                                }
                                if (message.operatorState != null && message.hasOwnProperty("operatorState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.OperatorState.verify(message.operatorState);
                                    if (error)
                                        return "operatorState." + error;
                                }
                                if (message.configSyncState != null && message.hasOwnProperty("configSyncState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState.verify(message.configSyncState);
                                    if (error)
                                        return "configSyncState." + error;
                                }
                                if (message.policyControllerState != null && message.hasOwnProperty("policyControllerState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState.verify(message.policyControllerState);
                                    if (error)
                                        return "policyControllerState." + error;
                                }
                                if (message.hierarchyControllerState != null && message.hasOwnProperty("hierarchyControllerState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.verify(message.hierarchyControllerState);
                                    if (error)
                                        return "hierarchyControllerState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipState} MembershipState
                             */
                            MembershipState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.MembershipState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.MembershipState();
                                if (object.clusterName != null)
                                    message.clusterName = String(object.clusterName);
                                if (object.membershipSpec != null) {
                                    if (typeof object.membershipSpec !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipState.membershipSpec: object expected");
                                    message.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.fromObject(object.membershipSpec);
                                }
                                if (object.operatorState != null) {
                                    if (typeof object.operatorState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipState.operatorState: object expected");
                                    message.operatorState = $root.google.cloud.gkehub.configmanagement.v1.OperatorState.fromObject(object.operatorState);
                                }
                                if (object.configSyncState != null) {
                                    if (typeof object.configSyncState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipState.configSyncState: object expected");
                                    message.configSyncState = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState.fromObject(object.configSyncState);
                                }
                                if (object.policyControllerState != null) {
                                    if (typeof object.policyControllerState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipState.policyControllerState: object expected");
                                    message.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState.fromObject(object.policyControllerState);
                                }
                                if (object.hierarchyControllerState != null) {
                                    if (typeof object.hierarchyControllerState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipState.hierarchyControllerState: object expected");
                                    message.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.fromObject(object.hierarchyControllerState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.MembershipState} message MembershipState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.clusterName = "";
                                    object.membershipSpec = null;
                                    object.operatorState = null;
                                    object.configSyncState = null;
                                    object.policyControllerState = null;
                                    object.hierarchyControllerState = null;
                                }
                                if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                    object.clusterName = message.clusterName;
                                if (message.membershipSpec != null && message.hasOwnProperty("membershipSpec"))
                                    object.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.toObject(message.membershipSpec, options);
                                if (message.operatorState != null && message.hasOwnProperty("operatorState"))
                                    object.operatorState = $root.google.cloud.gkehub.configmanagement.v1.OperatorState.toObject(message.operatorState, options);
                                if (message.configSyncState != null && message.hasOwnProperty("configSyncState"))
                                    object.configSyncState = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState.toObject(message.configSyncState, options);
                                if (message.policyControllerState != null && message.hasOwnProperty("policyControllerState"))
                                    object.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState.toObject(message.policyControllerState, options);
                                if (message.hierarchyControllerState != null && message.hasOwnProperty("hierarchyControllerState"))
                                    object.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.toObject(message.hierarchyControllerState, options);
                                return object;
                            };
    
                            /**
                             * Converts this MembershipState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipState;
                        })();
    
                        v1.MembershipSpec = (function() {
    
                            /**
                             * Properties of a MembershipSpec.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IMembershipSpec
                             * @property {google.cloud.gkehub.configmanagement.v1.IConfigSync|null} [configSync] MembershipSpec configSync
                             * @property {google.cloud.gkehub.configmanagement.v1.IPolicyController|null} [policyController] MembershipSpec policyController
                             * @property {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerConfig|null} [hierarchyController] MembershipSpec hierarchyController
                             * @property {string|null} [version] MembershipSpec version
                             */
    
                            /**
                             * Constructs a new MembershipSpec.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a MembershipSpec.
                             * @implements IMembershipSpec
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipSpec=} [properties] Properties to set
                             */
                            function MembershipSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipSpec configSync.
                             * @member {google.cloud.gkehub.configmanagement.v1.IConfigSync|null|undefined} configSync
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.configSync = null;
    
                            /**
                             * MembershipSpec policyController.
                             * @member {google.cloud.gkehub.configmanagement.v1.IPolicyController|null|undefined} policyController
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.policyController = null;
    
                            /**
                             * MembershipSpec hierarchyController.
                             * @member {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerConfig|null|undefined} hierarchyController
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.hierarchyController = null;
    
                            /**
                             * MembershipSpec version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.version = "";
    
                            /**
                             * Creates a new MembershipSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipSpec} MembershipSpec instance
                             */
                            MembershipSpec.create = function create(properties) {
                                return new MembershipSpec(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipSpec message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.MembershipSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipSpec} message MembershipSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.configSync != null && Object.hasOwnProperty.call(message, "configSync"))
                                    $root.google.cloud.gkehub.configmanagement.v1.ConfigSync.encode(message.configSync, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.policyController != null && Object.hasOwnProperty.call(message, "policyController"))
                                    $root.google.cloud.gkehub.configmanagement.v1.PolicyController.encode(message.policyController, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.hierarchyController != null && Object.hasOwnProperty.call(message, "hierarchyController"))
                                    $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.encode(message.hierarchyController, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.MembershipSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IMembershipSpec} message MembershipSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipSpec} MembershipSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.configSync = $root.google.cloud.gkehub.configmanagement.v1.ConfigSync.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.policyController = $root.google.cloud.gkehub.configmanagement.v1.PolicyController.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.decode(reader, reader.uint32());
                                        break;
                                    case 10:
                                        message.version = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipSpec} MembershipSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.configSync != null && message.hasOwnProperty("configSync")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.ConfigSync.verify(message.configSync);
                                    if (error)
                                        return "configSync." + error;
                                }
                                if (message.policyController != null && message.hasOwnProperty("policyController")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.PolicyController.verify(message.policyController);
                                    if (error)
                                        return "policyController." + error;
                                }
                                if (message.hierarchyController != null && message.hasOwnProperty("hierarchyController")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.verify(message.hierarchyController);
                                    if (error)
                                        return "hierarchyController." + error;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a MembershipSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.MembershipSpec} MembershipSpec
                             */
                            MembershipSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec();
                                if (object.configSync != null) {
                                    if (typeof object.configSync !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipSpec.configSync: object expected");
                                    message.configSync = $root.google.cloud.gkehub.configmanagement.v1.ConfigSync.fromObject(object.configSync);
                                }
                                if (object.policyController != null) {
                                    if (typeof object.policyController !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipSpec.policyController: object expected");
                                    message.policyController = $root.google.cloud.gkehub.configmanagement.v1.PolicyController.fromObject(object.policyController);
                                }
                                if (object.hierarchyController != null) {
                                    if (typeof object.hierarchyController !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.MembershipSpec.hierarchyController: object expected");
                                    message.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.fromObject(object.hierarchyController);
                                }
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.MembershipSpec} message MembershipSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.configSync = null;
                                    object.policyController = null;
                                    object.hierarchyController = null;
                                    object.version = "";
                                }
                                if (message.configSync != null && message.hasOwnProperty("configSync"))
                                    object.configSync = $root.google.cloud.gkehub.configmanagement.v1.ConfigSync.toObject(message.configSync, options);
                                if (message.policyController != null && message.hasOwnProperty("policyController"))
                                    object.policyController = $root.google.cloud.gkehub.configmanagement.v1.PolicyController.toObject(message.policyController, options);
                                if (message.hierarchyController != null && message.hasOwnProperty("hierarchyController"))
                                    object.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.toObject(message.hierarchyController, options);
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this MembershipSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.MembershipSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipSpec;
                        })();
    
                        v1.ConfigSync = (function() {
    
                            /**
                             * Properties of a ConfigSync.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IConfigSync
                             * @property {google.cloud.gkehub.configmanagement.v1.IGitConfig|null} [git] ConfigSync git
                             * @property {string|null} [sourceFormat] ConfigSync sourceFormat
                             */
    
                            /**
                             * Constructs a new ConfigSync.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a ConfigSync.
                             * @implements IConfigSync
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSync=} [properties] Properties to set
                             */
                            function ConfigSync(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSync git.
                             * @member {google.cloud.gkehub.configmanagement.v1.IGitConfig|null|undefined} git
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @instance
                             */
                            ConfigSync.prototype.git = null;
    
                            /**
                             * ConfigSync sourceFormat.
                             * @member {string} sourceFormat
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @instance
                             */
                            ConfigSync.prototype.sourceFormat = "";
    
                            /**
                             * Creates a new ConfigSync instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSync=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSync} ConfigSync instance
                             */
                            ConfigSync.create = function create(properties) {
                                return new ConfigSync(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSync message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSync.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSync} message ConfigSync message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSync.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.git != null && Object.hasOwnProperty.call(message, "git"))
                                    $root.google.cloud.gkehub.configmanagement.v1.GitConfig.encode(message.git, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.sourceFormat != null && Object.hasOwnProperty.call(message, "sourceFormat"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.sourceFormat);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSync message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSync.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSync} message ConfigSync message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSync.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSync message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSync} ConfigSync
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSync.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSync();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 7:
                                        message.git = $root.google.cloud.gkehub.configmanagement.v1.GitConfig.decode(reader, reader.uint32());
                                        break;
                                    case 8:
                                        message.sourceFormat = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSync message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSync} ConfigSync
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSync.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSync message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSync.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.git != null && message.hasOwnProperty("git")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.GitConfig.verify(message.git);
                                    if (error)
                                        return "git." + error;
                                }
                                if (message.sourceFormat != null && message.hasOwnProperty("sourceFormat"))
                                    if (!$util.isString(message.sourceFormat))
                                        return "sourceFormat: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSync message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSync} ConfigSync
                             */
                            ConfigSync.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.ConfigSync)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSync();
                                if (object.git != null) {
                                    if (typeof object.git !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.ConfigSync.git: object expected");
                                    message.git = $root.google.cloud.gkehub.configmanagement.v1.GitConfig.fromObject(object.git);
                                }
                                if (object.sourceFormat != null)
                                    message.sourceFormat = String(object.sourceFormat);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSync message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ConfigSync} message ConfigSync
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSync.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.git = null;
                                    object.sourceFormat = "";
                                }
                                if (message.git != null && message.hasOwnProperty("git"))
                                    object.git = $root.google.cloud.gkehub.configmanagement.v1.GitConfig.toObject(message.git, options);
                                if (message.sourceFormat != null && message.hasOwnProperty("sourceFormat"))
                                    object.sourceFormat = message.sourceFormat;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSync to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSync
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSync.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSync;
                        })();
    
                        v1.GitConfig = (function() {
    
                            /**
                             * Properties of a GitConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IGitConfig
                             * @property {string|null} [syncRepo] GitConfig syncRepo
                             * @property {string|null} [syncBranch] GitConfig syncBranch
                             * @property {string|null} [policyDir] GitConfig policyDir
                             * @property {number|Long|null} [syncWaitSecs] GitConfig syncWaitSecs
                             * @property {string|null} [syncRev] GitConfig syncRev
                             * @property {string|null} [secretType] GitConfig secretType
                             * @property {string|null} [httpsProxy] GitConfig httpsProxy
                             * @property {string|null} [gcpServiceAccountEmail] GitConfig gcpServiceAccountEmail
                             */
    
                            /**
                             * Constructs a new GitConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a GitConfig.
                             * @implements IGitConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IGitConfig=} [properties] Properties to set
                             */
                            function GitConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GitConfig syncRepo.
                             * @member {string} syncRepo
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncRepo = "";
    
                            /**
                             * GitConfig syncBranch.
                             * @member {string} syncBranch
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncBranch = "";
    
                            /**
                             * GitConfig policyDir.
                             * @member {string} policyDir
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.policyDir = "";
    
                            /**
                             * GitConfig syncWaitSecs.
                             * @member {number|Long} syncWaitSecs
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncWaitSecs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * GitConfig syncRev.
                             * @member {string} syncRev
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncRev = "";
    
                            /**
                             * GitConfig secretType.
                             * @member {string} secretType
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.secretType = "";
    
                            /**
                             * GitConfig httpsProxy.
                             * @member {string} httpsProxy
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.httpsProxy = "";
    
                            /**
                             * GitConfig gcpServiceAccountEmail.
                             * @member {string} gcpServiceAccountEmail
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.gcpServiceAccountEmail = "";
    
                            /**
                             * Creates a new GitConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGitConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.GitConfig} GitConfig instance
                             */
                            GitConfig.create = function create(properties) {
                                return new GitConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GitConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.GitConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGitConfig} message GitConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.syncRepo != null && Object.hasOwnProperty.call(message, "syncRepo"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.syncRepo);
                                if (message.syncBranch != null && Object.hasOwnProperty.call(message, "syncBranch"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.syncBranch);
                                if (message.policyDir != null && Object.hasOwnProperty.call(message, "policyDir"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.policyDir);
                                if (message.syncWaitSecs != null && Object.hasOwnProperty.call(message, "syncWaitSecs"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.syncWaitSecs);
                                if (message.syncRev != null && Object.hasOwnProperty.call(message, "syncRev"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.syncRev);
                                if (message.secretType != null && Object.hasOwnProperty.call(message, "secretType"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.secretType);
                                if (message.httpsProxy != null && Object.hasOwnProperty.call(message, "httpsProxy"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.httpsProxy);
                                if (message.gcpServiceAccountEmail != null && Object.hasOwnProperty.call(message, "gcpServiceAccountEmail"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.gcpServiceAccountEmail);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GitConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.GitConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGitConfig} message GitConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GitConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.GitConfig} GitConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.GitConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.syncRepo = reader.string();
                                        break;
                                    case 2:
                                        message.syncBranch = reader.string();
                                        break;
                                    case 3:
                                        message.policyDir = reader.string();
                                        break;
                                    case 4:
                                        message.syncWaitSecs = reader.int64();
                                        break;
                                    case 5:
                                        message.syncRev = reader.string();
                                        break;
                                    case 6:
                                        message.secretType = reader.string();
                                        break;
                                    case 7:
                                        message.httpsProxy = reader.string();
                                        break;
                                    case 8:
                                        message.gcpServiceAccountEmail = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GitConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.GitConfig} GitConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GitConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GitConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.syncRepo != null && message.hasOwnProperty("syncRepo"))
                                    if (!$util.isString(message.syncRepo))
                                        return "syncRepo: string expected";
                                if (message.syncBranch != null && message.hasOwnProperty("syncBranch"))
                                    if (!$util.isString(message.syncBranch))
                                        return "syncBranch: string expected";
                                if (message.policyDir != null && message.hasOwnProperty("policyDir"))
                                    if (!$util.isString(message.policyDir))
                                        return "policyDir: string expected";
                                if (message.syncWaitSecs != null && message.hasOwnProperty("syncWaitSecs"))
                                    if (!$util.isInteger(message.syncWaitSecs) && !(message.syncWaitSecs && $util.isInteger(message.syncWaitSecs.low) && $util.isInteger(message.syncWaitSecs.high)))
                                        return "syncWaitSecs: integer|Long expected";
                                if (message.syncRev != null && message.hasOwnProperty("syncRev"))
                                    if (!$util.isString(message.syncRev))
                                        return "syncRev: string expected";
                                if (message.secretType != null && message.hasOwnProperty("secretType"))
                                    if (!$util.isString(message.secretType))
                                        return "secretType: string expected";
                                if (message.httpsProxy != null && message.hasOwnProperty("httpsProxy"))
                                    if (!$util.isString(message.httpsProxy))
                                        return "httpsProxy: string expected";
                                if (message.gcpServiceAccountEmail != null && message.hasOwnProperty("gcpServiceAccountEmail"))
                                    if (!$util.isString(message.gcpServiceAccountEmail))
                                        return "gcpServiceAccountEmail: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GitConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.GitConfig} GitConfig
                             */
                            GitConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.GitConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.GitConfig();
                                if (object.syncRepo != null)
                                    message.syncRepo = String(object.syncRepo);
                                if (object.syncBranch != null)
                                    message.syncBranch = String(object.syncBranch);
                                if (object.policyDir != null)
                                    message.policyDir = String(object.policyDir);
                                if (object.syncWaitSecs != null)
                                    if ($util.Long)
                                        (message.syncWaitSecs = $util.Long.fromValue(object.syncWaitSecs)).unsigned = false;
                                    else if (typeof object.syncWaitSecs === "string")
                                        message.syncWaitSecs = parseInt(object.syncWaitSecs, 10);
                                    else if (typeof object.syncWaitSecs === "number")
                                        message.syncWaitSecs = object.syncWaitSecs;
                                    else if (typeof object.syncWaitSecs === "object")
                                        message.syncWaitSecs = new $util.LongBits(object.syncWaitSecs.low >>> 0, object.syncWaitSecs.high >>> 0).toNumber();
                                if (object.syncRev != null)
                                    message.syncRev = String(object.syncRev);
                                if (object.secretType != null)
                                    message.secretType = String(object.secretType);
                                if (object.httpsProxy != null)
                                    message.httpsProxy = String(object.httpsProxy);
                                if (object.gcpServiceAccountEmail != null)
                                    message.gcpServiceAccountEmail = String(object.gcpServiceAccountEmail);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GitConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.GitConfig} message GitConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GitConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.syncRepo = "";
                                    object.syncBranch = "";
                                    object.policyDir = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.syncWaitSecs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.syncWaitSecs = options.longs === String ? "0" : 0;
                                    object.syncRev = "";
                                    object.secretType = "";
                                    object.httpsProxy = "";
                                    object.gcpServiceAccountEmail = "";
                                }
                                if (message.syncRepo != null && message.hasOwnProperty("syncRepo"))
                                    object.syncRepo = message.syncRepo;
                                if (message.syncBranch != null && message.hasOwnProperty("syncBranch"))
                                    object.syncBranch = message.syncBranch;
                                if (message.policyDir != null && message.hasOwnProperty("policyDir"))
                                    object.policyDir = message.policyDir;
                                if (message.syncWaitSecs != null && message.hasOwnProperty("syncWaitSecs"))
                                    if (typeof message.syncWaitSecs === "number")
                                        object.syncWaitSecs = options.longs === String ? String(message.syncWaitSecs) : message.syncWaitSecs;
                                    else
                                        object.syncWaitSecs = options.longs === String ? $util.Long.prototype.toString.call(message.syncWaitSecs) : options.longs === Number ? new $util.LongBits(message.syncWaitSecs.low >>> 0, message.syncWaitSecs.high >>> 0).toNumber() : message.syncWaitSecs;
                                if (message.syncRev != null && message.hasOwnProperty("syncRev"))
                                    object.syncRev = message.syncRev;
                                if (message.secretType != null && message.hasOwnProperty("secretType"))
                                    object.secretType = message.secretType;
                                if (message.httpsProxy != null && message.hasOwnProperty("httpsProxy"))
                                    object.httpsProxy = message.httpsProxy;
                                if (message.gcpServiceAccountEmail != null && message.hasOwnProperty("gcpServiceAccountEmail"))
                                    object.gcpServiceAccountEmail = message.gcpServiceAccountEmail;
                                return object;
                            };
    
                            /**
                             * Converts this GitConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.GitConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GitConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GitConfig;
                        })();
    
                        v1.PolicyController = (function() {
    
                            /**
                             * Properties of a PolicyController.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IPolicyController
                             * @property {boolean|null} [enabled] PolicyController enabled
                             * @property {boolean|null} [templateLibraryInstalled] PolicyController templateLibraryInstalled
                             * @property {number|Long|null} [auditIntervalSeconds] PolicyController auditIntervalSeconds
                             * @property {Array.<string>|null} [exemptableNamespaces] PolicyController exemptableNamespaces
                             * @property {boolean|null} [referentialRulesEnabled] PolicyController referentialRulesEnabled
                             * @property {boolean|null} [logDeniesEnabled] PolicyController logDeniesEnabled
                             */
    
                            /**
                             * Constructs a new PolicyController.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a PolicyController.
                             * @implements IPolicyController
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyController=} [properties] Properties to set
                             */
                            function PolicyController(properties) {
                                this.exemptableNamespaces = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyController enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.enabled = false;
    
                            /**
                             * PolicyController templateLibraryInstalled.
                             * @member {boolean|null|undefined} templateLibraryInstalled
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.templateLibraryInstalled = null;
    
                            /**
                             * PolicyController auditIntervalSeconds.
                             * @member {number|Long|null|undefined} auditIntervalSeconds
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.auditIntervalSeconds = null;
    
                            /**
                             * PolicyController exemptableNamespaces.
                             * @member {Array.<string>} exemptableNamespaces
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.exemptableNamespaces = $util.emptyArray;
    
                            /**
                             * PolicyController referentialRulesEnabled.
                             * @member {boolean} referentialRulesEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.referentialRulesEnabled = false;
    
                            /**
                             * PolicyController logDeniesEnabled.
                             * @member {boolean} logDeniesEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.logDeniesEnabled = false;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * PolicyController _templateLibraryInstalled.
                             * @member {"templateLibraryInstalled"|undefined} _templateLibraryInstalled
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            Object.defineProperty(PolicyController.prototype, "_templateLibraryInstalled", {
                                get: $util.oneOfGetter($oneOfFields = ["templateLibraryInstalled"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * PolicyController _auditIntervalSeconds.
                             * @member {"auditIntervalSeconds"|undefined} _auditIntervalSeconds
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             */
                            Object.defineProperty(PolicyController.prototype, "_auditIntervalSeconds", {
                                get: $util.oneOfGetter($oneOfFields = ["auditIntervalSeconds"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new PolicyController instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyController=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyController} PolicyController instance
                             */
                            PolicyController.create = function create(properties) {
                                return new PolicyController(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyController message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.PolicyController.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyController} message PolicyController message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyController.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.templateLibraryInstalled != null && Object.hasOwnProperty.call(message, "templateLibraryInstalled"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.templateLibraryInstalled);
                                if (message.auditIntervalSeconds != null && Object.hasOwnProperty.call(message, "auditIntervalSeconds"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.auditIntervalSeconds);
                                if (message.exemptableNamespaces != null && message.exemptableNamespaces.length)
                                    for (var i = 0; i < message.exemptableNamespaces.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.exemptableNamespaces[i]);
                                if (message.referentialRulesEnabled != null && Object.hasOwnProperty.call(message, "referentialRulesEnabled"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.referentialRulesEnabled);
                                if (message.logDeniesEnabled != null && Object.hasOwnProperty.call(message, "logDeniesEnabled"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.logDeniesEnabled);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyController message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.PolicyController.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyController} message PolicyController message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyController.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyController message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyController} PolicyController
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyController.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.PolicyController();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    case 2:
                                        message.templateLibraryInstalled = reader.bool();
                                        break;
                                    case 3:
                                        message.auditIntervalSeconds = reader.int64();
                                        break;
                                    case 4:
                                        if (!(message.exemptableNamespaces && message.exemptableNamespaces.length))
                                            message.exemptableNamespaces = [];
                                        message.exemptableNamespaces.push(reader.string());
                                        break;
                                    case 5:
                                        message.referentialRulesEnabled = reader.bool();
                                        break;
                                    case 6:
                                        message.logDeniesEnabled = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyController message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyController} PolicyController
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyController.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyController message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyController.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.templateLibraryInstalled != null && message.hasOwnProperty("templateLibraryInstalled")) {
                                    properties._templateLibraryInstalled = 1;
                                    if (typeof message.templateLibraryInstalled !== "boolean")
                                        return "templateLibraryInstalled: boolean expected";
                                }
                                if (message.auditIntervalSeconds != null && message.hasOwnProperty("auditIntervalSeconds")) {
                                    properties._auditIntervalSeconds = 1;
                                    if (!$util.isInteger(message.auditIntervalSeconds) && !(message.auditIntervalSeconds && $util.isInteger(message.auditIntervalSeconds.low) && $util.isInteger(message.auditIntervalSeconds.high)))
                                        return "auditIntervalSeconds: integer|Long expected";
                                }
                                if (message.exemptableNamespaces != null && message.hasOwnProperty("exemptableNamespaces")) {
                                    if (!Array.isArray(message.exemptableNamespaces))
                                        return "exemptableNamespaces: array expected";
                                    for (var i = 0; i < message.exemptableNamespaces.length; ++i)
                                        if (!$util.isString(message.exemptableNamespaces[i]))
                                            return "exemptableNamespaces: string[] expected";
                                }
                                if (message.referentialRulesEnabled != null && message.hasOwnProperty("referentialRulesEnabled"))
                                    if (typeof message.referentialRulesEnabled !== "boolean")
                                        return "referentialRulesEnabled: boolean expected";
                                if (message.logDeniesEnabled != null && message.hasOwnProperty("logDeniesEnabled"))
                                    if (typeof message.logDeniesEnabled !== "boolean")
                                        return "logDeniesEnabled: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a PolicyController message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyController} PolicyController
                             */
                            PolicyController.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.PolicyController)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.PolicyController();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                if (object.templateLibraryInstalled != null)
                                    message.templateLibraryInstalled = Boolean(object.templateLibraryInstalled);
                                if (object.auditIntervalSeconds != null)
                                    if ($util.Long)
                                        (message.auditIntervalSeconds = $util.Long.fromValue(object.auditIntervalSeconds)).unsigned = false;
                                    else if (typeof object.auditIntervalSeconds === "string")
                                        message.auditIntervalSeconds = parseInt(object.auditIntervalSeconds, 10);
                                    else if (typeof object.auditIntervalSeconds === "number")
                                        message.auditIntervalSeconds = object.auditIntervalSeconds;
                                    else if (typeof object.auditIntervalSeconds === "object")
                                        message.auditIntervalSeconds = new $util.LongBits(object.auditIntervalSeconds.low >>> 0, object.auditIntervalSeconds.high >>> 0).toNumber();
                                if (object.exemptableNamespaces) {
                                    if (!Array.isArray(object.exemptableNamespaces))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.PolicyController.exemptableNamespaces: array expected");
                                    message.exemptableNamespaces = [];
                                    for (var i = 0; i < object.exemptableNamespaces.length; ++i)
                                        message.exemptableNamespaces[i] = String(object.exemptableNamespaces[i]);
                                }
                                if (object.referentialRulesEnabled != null)
                                    message.referentialRulesEnabled = Boolean(object.referentialRulesEnabled);
                                if (object.logDeniesEnabled != null)
                                    message.logDeniesEnabled = Boolean(object.logDeniesEnabled);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyController message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.PolicyController} message PolicyController
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyController.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.exemptableNamespaces = [];
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.referentialRulesEnabled = false;
                                    object.logDeniesEnabled = false;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.templateLibraryInstalled != null && message.hasOwnProperty("templateLibraryInstalled")) {
                                    object.templateLibraryInstalled = message.templateLibraryInstalled;
                                    if (options.oneofs)
                                        object._templateLibraryInstalled = "templateLibraryInstalled";
                                }
                                if (message.auditIntervalSeconds != null && message.hasOwnProperty("auditIntervalSeconds")) {
                                    if (typeof message.auditIntervalSeconds === "number")
                                        object.auditIntervalSeconds = options.longs === String ? String(message.auditIntervalSeconds) : message.auditIntervalSeconds;
                                    else
                                        object.auditIntervalSeconds = options.longs === String ? $util.Long.prototype.toString.call(message.auditIntervalSeconds) : options.longs === Number ? new $util.LongBits(message.auditIntervalSeconds.low >>> 0, message.auditIntervalSeconds.high >>> 0).toNumber() : message.auditIntervalSeconds;
                                    if (options.oneofs)
                                        object._auditIntervalSeconds = "auditIntervalSeconds";
                                }
                                if (message.exemptableNamespaces && message.exemptableNamespaces.length) {
                                    object.exemptableNamespaces = [];
                                    for (var j = 0; j < message.exemptableNamespaces.length; ++j)
                                        object.exemptableNamespaces[j] = message.exemptableNamespaces[j];
                                }
                                if (message.referentialRulesEnabled != null && message.hasOwnProperty("referentialRulesEnabled"))
                                    object.referentialRulesEnabled = message.referentialRulesEnabled;
                                if (message.logDeniesEnabled != null && message.hasOwnProperty("logDeniesEnabled"))
                                    object.logDeniesEnabled = message.logDeniesEnabled;
                                return object;
                            };
    
                            /**
                             * Converts this PolicyController to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyController
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyController.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyController;
                        })();
    
                        v1.HierarchyControllerConfig = (function() {
    
                            /**
                             * Properties of a HierarchyControllerConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IHierarchyControllerConfig
                             * @property {boolean|null} [enabled] HierarchyControllerConfig enabled
                             * @property {boolean|null} [enablePodTreeLabels] HierarchyControllerConfig enablePodTreeLabels
                             * @property {boolean|null} [enableHierarchicalResourceQuota] HierarchyControllerConfig enableHierarchicalResourceQuota
                             */
    
                            /**
                             * Constructs a new HierarchyControllerConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a HierarchyControllerConfig.
                             * @implements IHierarchyControllerConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerConfig=} [properties] Properties to set
                             */
                            function HierarchyControllerConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerConfig enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enabled = false;
    
                            /**
                             * HierarchyControllerConfig enablePodTreeLabels.
                             * @member {boolean} enablePodTreeLabels
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enablePodTreeLabels = false;
    
                            /**
                             * HierarchyControllerConfig enableHierarchicalResourceQuota.
                             * @member {boolean} enableHierarchicalResourceQuota
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enableHierarchicalResourceQuota = false;
    
                            /**
                             * Creates a new HierarchyControllerConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig} HierarchyControllerConfig instance
                             */
                            HierarchyControllerConfig.create = function create(properties) {
                                return new HierarchyControllerConfig(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerConfig} message HierarchyControllerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.enablePodTreeLabels != null && Object.hasOwnProperty.call(message, "enablePodTreeLabels"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enablePodTreeLabels);
                                if (message.enableHierarchicalResourceQuota != null && Object.hasOwnProperty.call(message, "enableHierarchicalResourceQuota"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableHierarchicalResourceQuota);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerConfig} message HierarchyControllerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig} HierarchyControllerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    case 2:
                                        message.enablePodTreeLabels = reader.bool();
                                        break;
                                    case 3:
                                        message.enableHierarchicalResourceQuota = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig} HierarchyControllerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.enablePodTreeLabels != null && message.hasOwnProperty("enablePodTreeLabels"))
                                    if (typeof message.enablePodTreeLabels !== "boolean")
                                        return "enablePodTreeLabels: boolean expected";
                                if (message.enableHierarchicalResourceQuota != null && message.hasOwnProperty("enableHierarchicalResourceQuota"))
                                    if (typeof message.enableHierarchicalResourceQuota !== "boolean")
                                        return "enableHierarchicalResourceQuota: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig} HierarchyControllerConfig
                             */
                            HierarchyControllerConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                if (object.enablePodTreeLabels != null)
                                    message.enablePodTreeLabels = Boolean(object.enablePodTreeLabels);
                                if (object.enableHierarchicalResourceQuota != null)
                                    message.enableHierarchicalResourceQuota = Boolean(object.enableHierarchicalResourceQuota);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig} message HierarchyControllerConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.enablePodTreeLabels = false;
                                    object.enableHierarchicalResourceQuota = false;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.enablePodTreeLabels != null && message.hasOwnProperty("enablePodTreeLabels"))
                                    object.enablePodTreeLabels = message.enablePodTreeLabels;
                                if (message.enableHierarchicalResourceQuota != null && message.hasOwnProperty("enableHierarchicalResourceQuota"))
                                    object.enableHierarchicalResourceQuota = message.enableHierarchicalResourceQuota;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerConfig;
                        })();
    
                        v1.HierarchyControllerDeploymentState = (function() {
    
                            /**
                             * Properties of a HierarchyControllerDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IHierarchyControllerDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [hnc] HierarchyControllerDeploymentState hnc
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [extension] HierarchyControllerDeploymentState extension
                             */
    
                            /**
                             * Constructs a new HierarchyControllerDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a HierarchyControllerDeploymentState.
                             * @implements IHierarchyControllerDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerDeploymentState=} [properties] Properties to set
                             */
                            function HierarchyControllerDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerDeploymentState hnc.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} hnc
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @instance
                             */
                            HierarchyControllerDeploymentState.prototype.hnc = 0;
    
                            /**
                             * HierarchyControllerDeploymentState extension.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} extension
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @instance
                             */
                            HierarchyControllerDeploymentState.prototype.extension = 0;
    
                            /**
                             * Creates a new HierarchyControllerDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState instance
                             */
                            HierarchyControllerDeploymentState.create = function create(properties) {
                                return new HierarchyControllerDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerDeploymentState} message HierarchyControllerDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hnc != null && Object.hasOwnProperty.call(message, "hnc"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.hnc);
                                if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.extension);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerDeploymentState} message HierarchyControllerDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.hnc = reader.int32();
                                        break;
                                    case 2:
                                        message.extension = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    switch (message.hnc) {
                                    default:
                                        return "hnc: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    switch (message.extension) {
                                    default:
                                        return "extension: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             */
                            HierarchyControllerDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState();
                                switch (object.hnc) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.hnc = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.hnc = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.hnc = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.hnc = 3;
                                    break;
                                }
                                switch (object.extension) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.extension = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.extension = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.extension = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.extension = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState} message HierarchyControllerDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.hnc = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.extension = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    object.hnc = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.hnc] : message.hnc;
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    object.extension = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.extension] : message.extension;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerDeploymentState;
                        })();
    
                        v1.HierarchyControllerVersion = (function() {
    
                            /**
                             * Properties of a HierarchyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IHierarchyControllerVersion
                             * @property {string|null} [hnc] HierarchyControllerVersion hnc
                             * @property {string|null} [extension] HierarchyControllerVersion extension
                             */
    
                            /**
                             * Constructs a new HierarchyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a HierarchyControllerVersion.
                             * @implements IHierarchyControllerVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerVersion=} [properties] Properties to set
                             */
                            function HierarchyControllerVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerVersion hnc.
                             * @member {string} hnc
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @instance
                             */
                            HierarchyControllerVersion.prototype.hnc = "";
    
                            /**
                             * HierarchyControllerVersion extension.
                             * @member {string} extension
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @instance
                             */
                            HierarchyControllerVersion.prototype.extension = "";
    
                            /**
                             * Creates a new HierarchyControllerVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion} HierarchyControllerVersion instance
                             */
                            HierarchyControllerVersion.create = function create(properties) {
                                return new HierarchyControllerVersion(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerVersion} message HierarchyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hnc != null && Object.hasOwnProperty.call(message, "hnc"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.hnc);
                                if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.extension);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerVersion} message HierarchyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion} HierarchyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.hnc = reader.string();
                                        break;
                                    case 2:
                                        message.extension = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion} HierarchyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    if (!$util.isString(message.hnc))
                                        return "hnc: string expected";
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    if (!$util.isString(message.extension))
                                        return "extension: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion} HierarchyControllerVersion
                             */
                            HierarchyControllerVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion();
                                if (object.hnc != null)
                                    message.hnc = String(object.hnc);
                                if (object.extension != null)
                                    message.extension = String(object.extension);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion} message HierarchyControllerVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.hnc = "";
                                    object.extension = "";
                                }
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    object.hnc = message.hnc;
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    object.extension = message.extension;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerVersion;
                        })();
    
                        v1.HierarchyControllerState = (function() {
    
                            /**
                             * Properties of a HierarchyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IHierarchyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerVersion|null} [version] HierarchyControllerState version
                             * @property {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerDeploymentState|null} [state] HierarchyControllerState state
                             */
    
                            /**
                             * Constructs a new HierarchyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a HierarchyControllerState.
                             * @implements IHierarchyControllerState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerState=} [properties] Properties to set
                             */
                            function HierarchyControllerState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerState version.
                             * @member {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @instance
                             */
                            HierarchyControllerState.prototype.version = null;
    
                            /**
                             * HierarchyControllerState state.
                             * @member {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerDeploymentState|null|undefined} state
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @instance
                             */
                            HierarchyControllerState.prototype.state = null;
    
                            /**
                             * Creates a new HierarchyControllerState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerState} HierarchyControllerState instance
                             */
                            HierarchyControllerState.create = function create(properties) {
                                return new HierarchyControllerState(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerState} message HierarchyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.encode(message.state, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IHierarchyControllerState} message HierarchyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerState} HierarchyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.state = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerState} HierarchyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.state != null && message.hasOwnProperty("state")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.verify(message.state);
                                    if (error)
                                        return "state." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.HierarchyControllerState} HierarchyControllerState
                             */
                            HierarchyControllerState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.fromObject(object.version);
                                }
                                if (object.state != null) {
                                    if (typeof object.state !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.HierarchyControllerState.state: object expected");
                                    message.state = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.fromObject(object.state);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.HierarchyControllerState} message HierarchyControllerState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.state = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerVersion.toObject(message.version, options);
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = $root.google.cloud.gkehub.configmanagement.v1.HierarchyControllerDeploymentState.toObject(message.state, options);
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.HierarchyControllerState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerState;
                        })();
    
                        v1.OperatorState = (function() {
    
                            /**
                             * Properties of an OperatorState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IOperatorState
                             * @property {string|null} [version] OperatorState version
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [deploymentState] OperatorState deploymentState
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1.IInstallError>|null} [errors] OperatorState errors
                             */
    
                            /**
                             * Constructs a new OperatorState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents an OperatorState.
                             * @implements IOperatorState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IOperatorState=} [properties] Properties to set
                             */
                            function OperatorState(properties) {
                                this.errors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * OperatorState version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.version = "";
    
                            /**
                             * OperatorState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.deploymentState = 0;
    
                            /**
                             * OperatorState errors.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1.IInstallError>} errors
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.errors = $util.emptyArray;
    
                            /**
                             * Creates a new OperatorState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IOperatorState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.OperatorState} OperatorState instance
                             */
                            OperatorState.create = function create(properties) {
                                return new OperatorState(properties);
                            };
    
                            /**
                             * Encodes the specified OperatorState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.OperatorState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IOperatorState} message OperatorState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperatorState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.deploymentState);
                                if (message.errors != null && message.errors.length)
                                    for (var i = 0; i < message.errors.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1.InstallError.encode(message.errors[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified OperatorState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.OperatorState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IOperatorState} message OperatorState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperatorState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an OperatorState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.OperatorState} OperatorState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperatorState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.OperatorState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = reader.string();
                                        break;
                                    case 2:
                                        message.deploymentState = reader.int32();
                                        break;
                                    case 3:
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.gkehub.configmanagement.v1.InstallError.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an OperatorState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.OperatorState} OperatorState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperatorState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an OperatorState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            OperatorState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    switch (message.deploymentState) {
                                    default:
                                        return "deploymentState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.errors != null && message.hasOwnProperty("errors")) {
                                    if (!Array.isArray(message.errors))
                                        return "errors: array expected";
                                    for (var i = 0; i < message.errors.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1.InstallError.verify(message.errors[i]);
                                        if (error)
                                            return "errors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an OperatorState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.OperatorState} OperatorState
                             */
                            OperatorState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.OperatorState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.OperatorState();
                                if (object.version != null)
                                    message.version = String(object.version);
                                switch (object.deploymentState) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.deploymentState = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.deploymentState = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.deploymentState = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.deploymentState = 3;
                                    break;
                                }
                                if (object.errors) {
                                    if (!Array.isArray(object.errors))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.OperatorState.errors: array expected");
                                    message.errors = [];
                                    for (var i = 0; i < object.errors.length; ++i) {
                                        if (typeof object.errors[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1.OperatorState.errors: object expected");
                                        message.errors[i] = $root.google.cloud.gkehub.configmanagement.v1.InstallError.fromObject(object.errors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an OperatorState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.OperatorState} message OperatorState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            OperatorState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errors = [];
                                if (options.defaults) {
                                    object.version = "";
                                    object.deploymentState = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.deploymentState] : message.deploymentState;
                                if (message.errors && message.errors.length) {
                                    object.errors = [];
                                    for (var j = 0; j < message.errors.length; ++j)
                                        object.errors[j] = $root.google.cloud.gkehub.configmanagement.v1.InstallError.toObject(message.errors[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this OperatorState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.OperatorState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            OperatorState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return OperatorState;
                        })();
    
                        v1.InstallError = (function() {
    
                            /**
                             * Properties of an InstallError.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IInstallError
                             * @property {string|null} [errorMessage] InstallError errorMessage
                             */
    
                            /**
                             * Constructs a new InstallError.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents an InstallError.
                             * @implements IInstallError
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IInstallError=} [properties] Properties to set
                             */
                            function InstallError(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InstallError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @instance
                             */
                            InstallError.prototype.errorMessage = "";
    
                            /**
                             * Creates a new InstallError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IInstallError=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.InstallError} InstallError instance
                             */
                            InstallError.create = function create(properties) {
                                return new InstallError(properties);
                            };
    
                            /**
                             * Encodes the specified InstallError message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.InstallError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IInstallError} message InstallError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InstallError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.errorMessage);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InstallError message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.InstallError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IInstallError} message InstallError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InstallError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InstallError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.InstallError} InstallError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InstallError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.InstallError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.errorMessage = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InstallError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.InstallError} InstallError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InstallError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InstallError message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InstallError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an InstallError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.InstallError} InstallError
                             */
                            InstallError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.InstallError)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.InstallError();
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InstallError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.InstallError} message InstallError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InstallError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.errorMessage = "";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                return object;
                            };
    
                            /**
                             * Converts this InstallError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.InstallError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InstallError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return InstallError;
                        })();
    
                        v1.ConfigSyncState = (function() {
    
                            /**
                             * Properties of a ConfigSyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IConfigSyncState
                             * @property {google.cloud.gkehub.configmanagement.v1.IConfigSyncVersion|null} [version] ConfigSyncState version
                             * @property {google.cloud.gkehub.configmanagement.v1.IConfigSyncDeploymentState|null} [deploymentState] ConfigSyncState deploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1.ISyncState|null} [syncState] ConfigSyncState syncState
                             */
    
                            /**
                             * Constructs a new ConfigSyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a ConfigSyncState.
                             * @implements IConfigSyncState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncState=} [properties] Properties to set
                             */
                            function ConfigSyncState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncState version.
                             * @member {google.cloud.gkehub.configmanagement.v1.IConfigSyncVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.version = null;
    
                            /**
                             * ConfigSyncState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1.IConfigSyncDeploymentState|null|undefined} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.deploymentState = null;
    
                            /**
                             * ConfigSyncState syncState.
                             * @member {google.cloud.gkehub.configmanagement.v1.ISyncState|null|undefined} syncState
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.syncState = null;
    
                            /**
                             * Creates a new ConfigSyncState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncState} ConfigSyncState instance
                             */
                            ConfigSyncState.create = function create(properties) {
                                return new ConfigSyncState(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSyncState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncState} message ConfigSyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.encode(message.deploymentState, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.syncState != null && Object.hasOwnProperty.call(message, "syncState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.SyncState.encode(message.syncState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSyncState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncState} message ConfigSyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncState} ConfigSyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.syncState = $root.google.cloud.gkehub.configmanagement.v1.SyncState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncState} ConfigSyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.verify(message.deploymentState);
                                    if (error)
                                        return "deploymentState." + error;
                                }
                                if (message.syncState != null && message.hasOwnProperty("syncState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.SyncState.verify(message.syncState);
                                    if (error)
                                        return "syncState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncState} ConfigSyncState
                             */
                            ConfigSyncState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.ConfigSyncState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.fromObject(object.version);
                                }
                                if (object.deploymentState != null) {
                                    if (typeof object.deploymentState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.ConfigSyncState.deploymentState: object expected");
                                    message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.fromObject(object.deploymentState);
                                }
                                if (object.syncState != null) {
                                    if (typeof object.syncState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.ConfigSyncState.syncState: object expected");
                                    message.syncState = $root.google.cloud.gkehub.configmanagement.v1.SyncState.fromObject(object.syncState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ConfigSyncState} message ConfigSyncState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.deploymentState = null;
                                    object.syncState = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.toObject(message.version, options);
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.toObject(message.deploymentState, options);
                                if (message.syncState != null && message.hasOwnProperty("syncState"))
                                    object.syncState = $root.google.cloud.gkehub.configmanagement.v1.SyncState.toObject(message.syncState, options);
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncState;
                        })();
    
                        v1.ConfigSyncVersion = (function() {
    
                            /**
                             * Properties of a ConfigSyncVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IConfigSyncVersion
                             * @property {string|null} [importer] ConfigSyncVersion importer
                             * @property {string|null} [syncer] ConfigSyncVersion syncer
                             * @property {string|null} [gitSync] ConfigSyncVersion gitSync
                             * @property {string|null} [monitor] ConfigSyncVersion monitor
                             * @property {string|null} [reconcilerManager] ConfigSyncVersion reconcilerManager
                             * @property {string|null} [rootReconciler] ConfigSyncVersion rootReconciler
                             */
    
                            /**
                             * Constructs a new ConfigSyncVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a ConfigSyncVersion.
                             * @implements IConfigSyncVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncVersion=} [properties] Properties to set
                             */
                            function ConfigSyncVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncVersion importer.
                             * @member {string} importer
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.importer = "";
    
                            /**
                             * ConfigSyncVersion syncer.
                             * @member {string} syncer
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.syncer = "";
    
                            /**
                             * ConfigSyncVersion gitSync.
                             * @member {string} gitSync
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.gitSync = "";
    
                            /**
                             * ConfigSyncVersion monitor.
                             * @member {string} monitor
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.monitor = "";
    
                            /**
                             * ConfigSyncVersion reconcilerManager.
                             * @member {string} reconcilerManager
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.reconcilerManager = "";
    
                            /**
                             * ConfigSyncVersion rootReconciler.
                             * @member {string} rootReconciler
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.rootReconciler = "";
    
                            /**
                             * Creates a new ConfigSyncVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion} ConfigSyncVersion instance
                             */
                            ConfigSyncVersion.create = function create(properties) {
                                return new ConfigSyncVersion(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncVersion} message ConfigSyncVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importer != null && Object.hasOwnProperty.call(message, "importer"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.importer);
                                if (message.syncer != null && Object.hasOwnProperty.call(message, "syncer"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.syncer);
                                if (message.gitSync != null && Object.hasOwnProperty.call(message, "gitSync"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.gitSync);
                                if (message.monitor != null && Object.hasOwnProperty.call(message, "monitor"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.monitor);
                                if (message.reconcilerManager != null && Object.hasOwnProperty.call(message, "reconcilerManager"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.reconcilerManager);
                                if (message.rootReconciler != null && Object.hasOwnProperty.call(message, "rootReconciler"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.rootReconciler);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncVersion} message ConfigSyncVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion} ConfigSyncVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importer = reader.string();
                                        break;
                                    case 2:
                                        message.syncer = reader.string();
                                        break;
                                    case 3:
                                        message.gitSync = reader.string();
                                        break;
                                    case 4:
                                        message.monitor = reader.string();
                                        break;
                                    case 5:
                                        message.reconcilerManager = reader.string();
                                        break;
                                    case 6:
                                        message.rootReconciler = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion} ConfigSyncVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    if (!$util.isString(message.importer))
                                        return "importer: string expected";
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    if (!$util.isString(message.syncer))
                                        return "syncer: string expected";
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    if (!$util.isString(message.gitSync))
                                        return "gitSync: string expected";
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    if (!$util.isString(message.monitor))
                                        return "monitor: string expected";
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    if (!$util.isString(message.reconcilerManager))
                                        return "reconcilerManager: string expected";
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    if (!$util.isString(message.rootReconciler))
                                        return "rootReconciler: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion} ConfigSyncVersion
                             */
                            ConfigSyncVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion();
                                if (object.importer != null)
                                    message.importer = String(object.importer);
                                if (object.syncer != null)
                                    message.syncer = String(object.syncer);
                                if (object.gitSync != null)
                                    message.gitSync = String(object.gitSync);
                                if (object.monitor != null)
                                    message.monitor = String(object.monitor);
                                if (object.reconcilerManager != null)
                                    message.reconcilerManager = String(object.reconcilerManager);
                                if (object.rootReconciler != null)
                                    message.rootReconciler = String(object.rootReconciler);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion} message ConfigSyncVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importer = "";
                                    object.syncer = "";
                                    object.gitSync = "";
                                    object.monitor = "";
                                    object.reconcilerManager = "";
                                    object.rootReconciler = "";
                                }
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    object.importer = message.importer;
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    object.syncer = message.syncer;
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    object.gitSync = message.gitSync;
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    object.monitor = message.monitor;
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    object.reconcilerManager = message.reconcilerManager;
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    object.rootReconciler = message.rootReconciler;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncVersion;
                        })();
    
                        v1.ConfigSyncDeploymentState = (function() {
    
                            /**
                             * Properties of a ConfigSyncDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IConfigSyncDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [importer] ConfigSyncDeploymentState importer
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [syncer] ConfigSyncDeploymentState syncer
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [gitSync] ConfigSyncDeploymentState gitSync
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [monitor] ConfigSyncDeploymentState monitor
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [reconcilerManager] ConfigSyncDeploymentState reconcilerManager
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [rootReconciler] ConfigSyncDeploymentState rootReconciler
                             */
    
                            /**
                             * Constructs a new ConfigSyncDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a ConfigSyncDeploymentState.
                             * @implements IConfigSyncDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncDeploymentState=} [properties] Properties to set
                             */
                            function ConfigSyncDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncDeploymentState importer.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} importer
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.importer = 0;
    
                            /**
                             * ConfigSyncDeploymentState syncer.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} syncer
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.syncer = 0;
    
                            /**
                             * ConfigSyncDeploymentState gitSync.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} gitSync
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.gitSync = 0;
    
                            /**
                             * ConfigSyncDeploymentState monitor.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} monitor
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.monitor = 0;
    
                            /**
                             * ConfigSyncDeploymentState reconcilerManager.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} reconcilerManager
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.reconcilerManager = 0;
    
                            /**
                             * ConfigSyncDeploymentState rootReconciler.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} rootReconciler
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.rootReconciler = 0;
    
                            /**
                             * Creates a new ConfigSyncDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState} ConfigSyncDeploymentState instance
                             */
                            ConfigSyncDeploymentState.create = function create(properties) {
                                return new ConfigSyncDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncDeploymentState} message ConfigSyncDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importer != null && Object.hasOwnProperty.call(message, "importer"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.importer);
                                if (message.syncer != null && Object.hasOwnProperty.call(message, "syncer"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.syncer);
                                if (message.gitSync != null && Object.hasOwnProperty.call(message, "gitSync"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.gitSync);
                                if (message.monitor != null && Object.hasOwnProperty.call(message, "monitor"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.monitor);
                                if (message.reconcilerManager != null && Object.hasOwnProperty.call(message, "reconcilerManager"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.reconcilerManager);
                                if (message.rootReconciler != null && Object.hasOwnProperty.call(message, "rootReconciler"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.rootReconciler);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IConfigSyncDeploymentState} message ConfigSyncDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importer = reader.int32();
                                        break;
                                    case 2:
                                        message.syncer = reader.int32();
                                        break;
                                    case 3:
                                        message.gitSync = reader.int32();
                                        break;
                                    case 4:
                                        message.monitor = reader.int32();
                                        break;
                                    case 5:
                                        message.reconcilerManager = reader.int32();
                                        break;
                                    case 6:
                                        message.rootReconciler = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    switch (message.importer) {
                                    default:
                                        return "importer: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    switch (message.syncer) {
                                    default:
                                        return "syncer: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    switch (message.gitSync) {
                                    default:
                                        return "gitSync: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    switch (message.monitor) {
                                    default:
                                        return "monitor: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    switch (message.reconcilerManager) {
                                    default:
                                        return "reconcilerManager: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    switch (message.rootReconciler) {
                                    default:
                                        return "rootReconciler: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             */
                            ConfigSyncDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState();
                                switch (object.importer) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.importer = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.importer = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.importer = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.importer = 3;
                                    break;
                                }
                                switch (object.syncer) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.syncer = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.syncer = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.syncer = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.syncer = 3;
                                    break;
                                }
                                switch (object.gitSync) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gitSync = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gitSync = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gitSync = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gitSync = 3;
                                    break;
                                }
                                switch (object.monitor) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.monitor = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.monitor = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.monitor = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.monitor = 3;
                                    break;
                                }
                                switch (object.reconcilerManager) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.reconcilerManager = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.reconcilerManager = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.reconcilerManager = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.reconcilerManager = 3;
                                    break;
                                }
                                switch (object.rootReconciler) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.rootReconciler = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.rootReconciler = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.rootReconciler = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.rootReconciler = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState} message ConfigSyncDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importer = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.syncer = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gitSync = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.monitor = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.reconcilerManager = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.rootReconciler = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    object.importer = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.importer] : message.importer;
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    object.syncer = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.syncer] : message.syncer;
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    object.gitSync = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.gitSync] : message.gitSync;
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    object.monitor = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.monitor] : message.monitor;
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    object.reconcilerManager = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.reconcilerManager] : message.reconcilerManager;
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    object.rootReconciler = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.rootReconciler] : message.rootReconciler;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.ConfigSyncDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncDeploymentState;
                        })();
    
                        v1.SyncState = (function() {
    
                            /**
                             * Properties of a SyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface ISyncState
                             * @property {string|null} [sourceToken] SyncState sourceToken
                             * @property {string|null} [importToken] SyncState importToken
                             * @property {string|null} [syncToken] SyncState syncToken
                             * @property {string|null} [lastSync] SyncState lastSync
                             * @property {google.protobuf.ITimestamp|null} [lastSyncTime] SyncState lastSyncTime
                             * @property {google.cloud.gkehub.configmanagement.v1.SyncState.SyncCode|null} [code] SyncState code
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1.ISyncError>|null} [errors] SyncState errors
                             */
    
                            /**
                             * Constructs a new SyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a SyncState.
                             * @implements ISyncState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncState=} [properties] Properties to set
                             */
                            function SyncState(properties) {
                                this.errors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SyncState sourceToken.
                             * @member {string} sourceToken
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.sourceToken = "";
    
                            /**
                             * SyncState importToken.
                             * @member {string} importToken
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.importToken = "";
    
                            /**
                             * SyncState syncToken.
                             * @member {string} syncToken
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.syncToken = "";
    
                            /**
                             * SyncState lastSync.
                             * @member {string} lastSync
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.lastSync = "";
    
                            /**
                             * SyncState lastSyncTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} lastSyncTime
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.lastSyncTime = null;
    
                            /**
                             * SyncState code.
                             * @member {google.cloud.gkehub.configmanagement.v1.SyncState.SyncCode} code
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.code = 0;
    
                            /**
                             * SyncState errors.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1.ISyncError>} errors
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             */
                            SyncState.prototype.errors = $util.emptyArray;
    
                            /**
                             * Creates a new SyncState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncState} SyncState instance
                             */
                            SyncState.create = function create(properties) {
                                return new SyncState(properties);
                            };
    
                            /**
                             * Encodes the specified SyncState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.SyncState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncState} message SyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sourceToken != null && Object.hasOwnProperty.call(message, "sourceToken"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourceToken);
                                if (message.importToken != null && Object.hasOwnProperty.call(message, "importToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.importToken);
                                if (message.syncToken != null && Object.hasOwnProperty.call(message, "syncToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.syncToken);
                                if (message.lastSync != null && Object.hasOwnProperty.call(message, "lastSync"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.lastSync);
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.code);
                                if (message.errors != null && message.errors.length)
                                    for (var i = 0; i < message.errors.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1.SyncError.encode(message.errors[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.lastSyncTime != null && Object.hasOwnProperty.call(message, "lastSyncTime"))
                                    $root.google.protobuf.Timestamp.encode(message.lastSyncTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SyncState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.SyncState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncState} message SyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SyncState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncState} SyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.SyncState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sourceToken = reader.string();
                                        break;
                                    case 2:
                                        message.importToken = reader.string();
                                        break;
                                    case 3:
                                        message.syncToken = reader.string();
                                        break;
                                    case 4:
                                        message.lastSync = reader.string();
                                        break;
                                    case 7:
                                        message.lastSyncTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.code = reader.int32();
                                        break;
                                    case 6:
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.gkehub.configmanagement.v1.SyncError.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SyncState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncState} SyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SyncState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SyncState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                    if (!$util.isString(message.sourceToken))
                                        return "sourceToken: string expected";
                                if (message.importToken != null && message.hasOwnProperty("importToken"))
                                    if (!$util.isString(message.importToken))
                                        return "importToken: string expected";
                                if (message.syncToken != null && message.hasOwnProperty("syncToken"))
                                    if (!$util.isString(message.syncToken))
                                        return "syncToken: string expected";
                                if (message.lastSync != null && message.hasOwnProperty("lastSync"))
                                    if (!$util.isString(message.lastSync))
                                        return "lastSync: string expected";
                                if (message.lastSyncTime != null && message.hasOwnProperty("lastSyncTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.lastSyncTime);
                                    if (error)
                                        return "lastSyncTime." + error;
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    switch (message.code) {
                                    default:
                                        return "code: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.errors != null && message.hasOwnProperty("errors")) {
                                    if (!Array.isArray(message.errors))
                                        return "errors: array expected";
                                    for (var i = 0; i < message.errors.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1.SyncError.verify(message.errors[i]);
                                        if (error)
                                            return "errors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SyncState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncState} SyncState
                             */
                            SyncState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.SyncState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.SyncState();
                                if (object.sourceToken != null)
                                    message.sourceToken = String(object.sourceToken);
                                if (object.importToken != null)
                                    message.importToken = String(object.importToken);
                                if (object.syncToken != null)
                                    message.syncToken = String(object.syncToken);
                                if (object.lastSync != null)
                                    message.lastSync = String(object.lastSync);
                                if (object.lastSyncTime != null) {
                                    if (typeof object.lastSyncTime !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.SyncState.lastSyncTime: object expected");
                                    message.lastSyncTime = $root.google.protobuf.Timestamp.fromObject(object.lastSyncTime);
                                }
                                switch (object.code) {
                                case "SYNC_CODE_UNSPECIFIED":
                                case 0:
                                    message.code = 0;
                                    break;
                                case "SYNCED":
                                case 1:
                                    message.code = 1;
                                    break;
                                case "PENDING":
                                case 2:
                                    message.code = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.code = 3;
                                    break;
                                case "NOT_CONFIGURED":
                                case 4:
                                    message.code = 4;
                                    break;
                                case "NOT_INSTALLED":
                                case 5:
                                    message.code = 5;
                                    break;
                                case "UNAUTHORIZED":
                                case 6:
                                    message.code = 6;
                                    break;
                                case "UNREACHABLE":
                                case 7:
                                    message.code = 7;
                                    break;
                                }
                                if (object.errors) {
                                    if (!Array.isArray(object.errors))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.SyncState.errors: array expected");
                                    message.errors = [];
                                    for (var i = 0; i < object.errors.length; ++i) {
                                        if (typeof object.errors[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1.SyncState.errors: object expected");
                                        message.errors[i] = $root.google.cloud.gkehub.configmanagement.v1.SyncError.fromObject(object.errors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SyncState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.SyncState} message SyncState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SyncState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errors = [];
                                if (options.defaults) {
                                    object.sourceToken = "";
                                    object.importToken = "";
                                    object.syncToken = "";
                                    object.lastSync = "";
                                    object.code = options.enums === String ? "SYNC_CODE_UNSPECIFIED" : 0;
                                    object.lastSyncTime = null;
                                }
                                if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                    object.sourceToken = message.sourceToken;
                                if (message.importToken != null && message.hasOwnProperty("importToken"))
                                    object.importToken = message.importToken;
                                if (message.syncToken != null && message.hasOwnProperty("syncToken"))
                                    object.syncToken = message.syncToken;
                                if (message.lastSync != null && message.hasOwnProperty("lastSync"))
                                    object.lastSync = message.lastSync;
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.SyncState.SyncCode[message.code] : message.code;
                                if (message.errors && message.errors.length) {
                                    object.errors = [];
                                    for (var j = 0; j < message.errors.length; ++j)
                                        object.errors[j] = $root.google.cloud.gkehub.configmanagement.v1.SyncError.toObject(message.errors[j], options);
                                }
                                if (message.lastSyncTime != null && message.hasOwnProperty("lastSyncTime"))
                                    object.lastSyncTime = $root.google.protobuf.Timestamp.toObject(message.lastSyncTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this SyncState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SyncState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * SyncCode enum.
                             * @name google.cloud.gkehub.configmanagement.v1.SyncState.SyncCode
                             * @enum {number}
                             * @property {number} SYNC_CODE_UNSPECIFIED=0 SYNC_CODE_UNSPECIFIED value
                             * @property {number} SYNCED=1 SYNCED value
                             * @property {number} PENDING=2 PENDING value
                             * @property {number} ERROR=3 ERROR value
                             * @property {number} NOT_CONFIGURED=4 NOT_CONFIGURED value
                             * @property {number} NOT_INSTALLED=5 NOT_INSTALLED value
                             * @property {number} UNAUTHORIZED=6 UNAUTHORIZED value
                             * @property {number} UNREACHABLE=7 UNREACHABLE value
                             */
                            SyncState.SyncCode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "SYNC_CODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SYNCED"] = 1;
                                values[valuesById[2] = "PENDING"] = 2;
                                values[valuesById[3] = "ERROR"] = 3;
                                values[valuesById[4] = "NOT_CONFIGURED"] = 4;
                                values[valuesById[5] = "NOT_INSTALLED"] = 5;
                                values[valuesById[6] = "UNAUTHORIZED"] = 6;
                                values[valuesById[7] = "UNREACHABLE"] = 7;
                                return values;
                            })();
    
                            return SyncState;
                        })();
    
                        v1.SyncError = (function() {
    
                            /**
                             * Properties of a SyncError.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface ISyncError
                             * @property {string|null} [code] SyncError code
                             * @property {string|null} [errorMessage] SyncError errorMessage
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1.IErrorResource>|null} [errorResources] SyncError errorResources
                             */
    
                            /**
                             * Constructs a new SyncError.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a SyncError.
                             * @implements ISyncError
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncError=} [properties] Properties to set
                             */
                            function SyncError(properties) {
                                this.errorResources = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SyncError code.
                             * @member {string} code
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @instance
                             */
                            SyncError.prototype.code = "";
    
                            /**
                             * SyncError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @instance
                             */
                            SyncError.prototype.errorMessage = "";
    
                            /**
                             * SyncError errorResources.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1.IErrorResource>} errorResources
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @instance
                             */
                            SyncError.prototype.errorResources = $util.emptyArray;
    
                            /**
                             * Creates a new SyncError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncError=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncError} SyncError instance
                             */
                            SyncError.create = function create(properties) {
                                return new SyncError(properties);
                            };
    
                            /**
                             * Encodes the specified SyncError message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.SyncError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncError} message SyncError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorMessage);
                                if (message.errorResources != null && message.errorResources.length)
                                    for (var i = 0; i < message.errorResources.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1.ErrorResource.encode(message.errorResources[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SyncError message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.SyncError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ISyncError} message SyncError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SyncError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncError} SyncError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.SyncError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.code = reader.string();
                                        break;
                                    case 2:
                                        message.errorMessage = reader.string();
                                        break;
                                    case 3:
                                        if (!(message.errorResources && message.errorResources.length))
                                            message.errorResources = [];
                                        message.errorResources.push($root.google.cloud.gkehub.configmanagement.v1.ErrorResource.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SyncError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncError} SyncError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SyncError message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SyncError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.code != null && message.hasOwnProperty("code"))
                                    if (!$util.isString(message.code))
                                        return "code: string expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                if (message.errorResources != null && message.hasOwnProperty("errorResources")) {
                                    if (!Array.isArray(message.errorResources))
                                        return "errorResources: array expected";
                                    for (var i = 0; i < message.errorResources.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1.ErrorResource.verify(message.errorResources[i]);
                                        if (error)
                                            return "errorResources." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SyncError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.SyncError} SyncError
                             */
                            SyncError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.SyncError)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.SyncError();
                                if (object.code != null)
                                    message.code = String(object.code);
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                if (object.errorResources) {
                                    if (!Array.isArray(object.errorResources))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.SyncError.errorResources: array expected");
                                    message.errorResources = [];
                                    for (var i = 0; i < object.errorResources.length; ++i) {
                                        if (typeof object.errorResources[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1.SyncError.errorResources: object expected");
                                        message.errorResources[i] = $root.google.cloud.gkehub.configmanagement.v1.ErrorResource.fromObject(object.errorResources[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SyncError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.SyncError} message SyncError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SyncError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errorResources = [];
                                if (options.defaults) {
                                    object.code = "";
                                    object.errorMessage = "";
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = message.code;
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                if (message.errorResources && message.errorResources.length) {
                                    object.errorResources = [];
                                    for (var j = 0; j < message.errorResources.length; ++j)
                                        object.errorResources[j] = $root.google.cloud.gkehub.configmanagement.v1.ErrorResource.toObject(message.errorResources[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SyncError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.SyncError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SyncError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SyncError;
                        })();
    
                        v1.ErrorResource = (function() {
    
                            /**
                             * Properties of an ErrorResource.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IErrorResource
                             * @property {string|null} [sourcePath] ErrorResource sourcePath
                             * @property {string|null} [resourceName] ErrorResource resourceName
                             * @property {string|null} [resourceNamespace] ErrorResource resourceNamespace
                             * @property {google.cloud.gkehub.configmanagement.v1.IGroupVersionKind|null} [resourceGvk] ErrorResource resourceGvk
                             */
    
                            /**
                             * Constructs a new ErrorResource.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents an ErrorResource.
                             * @implements IErrorResource
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IErrorResource=} [properties] Properties to set
                             */
                            function ErrorResource(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ErrorResource sourcePath.
                             * @member {string} sourcePath
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.sourcePath = "";
    
                            /**
                             * ErrorResource resourceName.
                             * @member {string} resourceName
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceName = "";
    
                            /**
                             * ErrorResource resourceNamespace.
                             * @member {string} resourceNamespace
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceNamespace = "";
    
                            /**
                             * ErrorResource resourceGvk.
                             * @member {google.cloud.gkehub.configmanagement.v1.IGroupVersionKind|null|undefined} resourceGvk
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceGvk = null;
    
                            /**
                             * Creates a new ErrorResource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IErrorResource=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.ErrorResource} ErrorResource instance
                             */
                            ErrorResource.create = function create(properties) {
                                return new ErrorResource(properties);
                            };
    
                            /**
                             * Encodes the specified ErrorResource message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ErrorResource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IErrorResource} message ErrorResource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ErrorResource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sourcePath != null && Object.hasOwnProperty.call(message, "sourcePath"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourcePath);
                                if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceName);
                                if (message.resourceNamespace != null && Object.hasOwnProperty.call(message, "resourceNamespace"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.resourceNamespace);
                                if (message.resourceGvk != null && Object.hasOwnProperty.call(message, "resourceGvk"))
                                    $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind.encode(message.resourceGvk, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ErrorResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.ErrorResource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IErrorResource} message ErrorResource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ErrorResource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ErrorResource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.ErrorResource} ErrorResource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ErrorResource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.ErrorResource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sourcePath = reader.string();
                                        break;
                                    case 2:
                                        message.resourceName = reader.string();
                                        break;
                                    case 3:
                                        message.resourceNamespace = reader.string();
                                        break;
                                    case 4:
                                        message.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ErrorResource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.ErrorResource} ErrorResource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ErrorResource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ErrorResource message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ErrorResource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    if (!$util.isString(message.sourcePath))
                                        return "sourcePath: string expected";
                                if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                    if (!$util.isString(message.resourceName))
                                        return "resourceName: string expected";
                                if (message.resourceNamespace != null && message.hasOwnProperty("resourceNamespace"))
                                    if (!$util.isString(message.resourceNamespace))
                                        return "resourceNamespace: string expected";
                                if (message.resourceGvk != null && message.hasOwnProperty("resourceGvk")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind.verify(message.resourceGvk);
                                    if (error)
                                        return "resourceGvk." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ErrorResource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.ErrorResource} ErrorResource
                             */
                            ErrorResource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.ErrorResource)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.ErrorResource();
                                if (object.sourcePath != null)
                                    message.sourcePath = String(object.sourcePath);
                                if (object.resourceName != null)
                                    message.resourceName = String(object.resourceName);
                                if (object.resourceNamespace != null)
                                    message.resourceNamespace = String(object.resourceNamespace);
                                if (object.resourceGvk != null) {
                                    if (typeof object.resourceGvk !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.ErrorResource.resourceGvk: object expected");
                                    message.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind.fromObject(object.resourceGvk);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ErrorResource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.ErrorResource} message ErrorResource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ErrorResource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.sourcePath = "";
                                    object.resourceName = "";
                                    object.resourceNamespace = "";
                                    object.resourceGvk = null;
                                }
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    object.sourcePath = message.sourcePath;
                                if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                    object.resourceName = message.resourceName;
                                if (message.resourceNamespace != null && message.hasOwnProperty("resourceNamespace"))
                                    object.resourceNamespace = message.resourceNamespace;
                                if (message.resourceGvk != null && message.hasOwnProperty("resourceGvk"))
                                    object.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind.toObject(message.resourceGvk, options);
                                return object;
                            };
    
                            /**
                             * Converts this ErrorResource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.ErrorResource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ErrorResource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ErrorResource;
                        })();
    
                        v1.GroupVersionKind = (function() {
    
                            /**
                             * Properties of a GroupVersionKind.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IGroupVersionKind
                             * @property {string|null} [group] GroupVersionKind group
                             * @property {string|null} [version] GroupVersionKind version
                             * @property {string|null} [kind] GroupVersionKind kind
                             */
    
                            /**
                             * Constructs a new GroupVersionKind.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a GroupVersionKind.
                             * @implements IGroupVersionKind
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IGroupVersionKind=} [properties] Properties to set
                             */
                            function GroupVersionKind(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GroupVersionKind group.
                             * @member {string} group
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.group = "";
    
                            /**
                             * GroupVersionKind version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.version = "";
    
                            /**
                             * GroupVersionKind kind.
                             * @member {string} kind
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.kind = "";
    
                            /**
                             * Creates a new GroupVersionKind instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGroupVersionKind=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.GroupVersionKind} GroupVersionKind instance
                             */
                            GroupVersionKind.create = function create(properties) {
                                return new GroupVersionKind(properties);
                            };
    
                            /**
                             * Encodes the specified GroupVersionKind message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.GroupVersionKind.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGroupVersionKind} message GroupVersionKind message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GroupVersionKind.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.group != null && Object.hasOwnProperty.call(message, "group"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.group);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                                if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GroupVersionKind message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.GroupVersionKind.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGroupVersionKind} message GroupVersionKind message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GroupVersionKind.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GroupVersionKind message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.GroupVersionKind} GroupVersionKind
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GroupVersionKind.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.group = reader.string();
                                        break;
                                    case 2:
                                        message.version = reader.string();
                                        break;
                                    case 3:
                                        message.kind = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GroupVersionKind message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.GroupVersionKind} GroupVersionKind
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GroupVersionKind.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GroupVersionKind message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GroupVersionKind.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.group != null && message.hasOwnProperty("group"))
                                    if (!$util.isString(message.group))
                                        return "group: string expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    if (!$util.isString(message.kind))
                                        return "kind: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GroupVersionKind message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.GroupVersionKind} GroupVersionKind
                             */
                            GroupVersionKind.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.GroupVersionKind();
                                if (object.group != null)
                                    message.group = String(object.group);
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.kind != null)
                                    message.kind = String(object.kind);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GroupVersionKind message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.GroupVersionKind} message GroupVersionKind
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GroupVersionKind.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.group = "";
                                    object.version = "";
                                    object.kind = "";
                                }
                                if (message.group != null && message.hasOwnProperty("group"))
                                    object.group = message.group;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    object.kind = message.kind;
                                return object;
                            };
    
                            /**
                             * Converts this GroupVersionKind to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.GroupVersionKind
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GroupVersionKind.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GroupVersionKind;
                        })();
    
                        v1.PolicyControllerState = (function() {
    
                            /**
                             * Properties of a PolicyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IPolicyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1.IPolicyControllerVersion|null} [version] PolicyControllerState version
                             * @property {google.cloud.gkehub.configmanagement.v1.IGatekeeperDeploymentState|null} [deploymentState] PolicyControllerState deploymentState
                             */
    
                            /**
                             * Constructs a new PolicyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a PolicyControllerState.
                             * @implements IPolicyControllerState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerState=} [properties] Properties to set
                             */
                            function PolicyControllerState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyControllerState version.
                             * @member {google.cloud.gkehub.configmanagement.v1.IPolicyControllerVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @instance
                             */
                            PolicyControllerState.prototype.version = null;
    
                            /**
                             * PolicyControllerState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1.IGatekeeperDeploymentState|null|undefined} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @instance
                             */
                            PolicyControllerState.prototype.deploymentState = null;
    
                            /**
                             * Creates a new PolicyControllerState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerState} PolicyControllerState instance
                             */
                            PolicyControllerState.create = function create(properties) {
                                return new PolicyControllerState(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyControllerState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.PolicyControllerState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerState} message PolicyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.encode(message.deploymentState, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyControllerState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.PolicyControllerState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerState} message PolicyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyControllerState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerState} PolicyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyControllerState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerState} PolicyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyControllerState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyControllerState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.verify(message.deploymentState);
                                    if (error)
                                        return "deploymentState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PolicyControllerState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerState} PolicyControllerState
                             */
                            PolicyControllerState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.PolicyControllerState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.fromObject(object.version);
                                }
                                if (object.deploymentState != null) {
                                    if (typeof object.deploymentState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1.PolicyControllerState.deploymentState: object expected");
                                    message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.fromObject(object.deploymentState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyControllerState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.PolicyControllerState} message PolicyControllerState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyControllerState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.deploymentState = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.toObject(message.version, options);
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.toObject(message.deploymentState, options);
                                return object;
                            };
    
                            /**
                             * Converts this PolicyControllerState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyControllerState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyControllerState;
                        })();
    
                        v1.PolicyControllerVersion = (function() {
    
                            /**
                             * Properties of a PolicyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IPolicyControllerVersion
                             * @property {string|null} [version] PolicyControllerVersion version
                             */
    
                            /**
                             * Constructs a new PolicyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a PolicyControllerVersion.
                             * @implements IPolicyControllerVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerVersion=} [properties] Properties to set
                             */
                            function PolicyControllerVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyControllerVersion version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @instance
                             */
                            PolicyControllerVersion.prototype.version = "";
    
                            /**
                             * Creates a new PolicyControllerVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion} PolicyControllerVersion instance
                             */
                            PolicyControllerVersion.create = function create(properties) {
                                return new PolicyControllerVersion(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyControllerVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerVersion} message PolicyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyControllerVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IPolicyControllerVersion} message PolicyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyControllerVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion} PolicyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyControllerVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion} PolicyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyControllerVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyControllerVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a PolicyControllerVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion} PolicyControllerVersion
                             */
                            PolicyControllerVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyControllerVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion} message PolicyControllerVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyControllerVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.version = "";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this PolicyControllerVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.PolicyControllerVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyControllerVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyControllerVersion;
                        })();
    
                        v1.GatekeeperDeploymentState = (function() {
    
                            /**
                             * Properties of a GatekeeperDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @interface IGatekeeperDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [gatekeeperControllerManagerState] GatekeeperDeploymentState gatekeeperControllerManagerState
                             * @property {google.cloud.gkehub.configmanagement.v1.DeploymentState|null} [gatekeeperAudit] GatekeeperDeploymentState gatekeeperAudit
                             */
    
                            /**
                             * Constructs a new GatekeeperDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1
                             * @classdesc Represents a GatekeeperDeploymentState.
                             * @implements IGatekeeperDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1.IGatekeeperDeploymentState=} [properties] Properties to set
                             */
                            function GatekeeperDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GatekeeperDeploymentState gatekeeperControllerManagerState.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} gatekeeperControllerManagerState
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperControllerManagerState = 0;
    
                            /**
                             * GatekeeperDeploymentState gatekeeperAudit.
                             * @member {google.cloud.gkehub.configmanagement.v1.DeploymentState} gatekeeperAudit
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperAudit = 0;
    
                            /**
                             * Creates a new GatekeeperDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGatekeeperDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState} GatekeeperDeploymentState instance
                             */
                            GatekeeperDeploymentState.create = function create(properties) {
                                return new GatekeeperDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified GatekeeperDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGatekeeperDeploymentState} message GatekeeperDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatekeeperDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.gatekeeperControllerManagerState != null && Object.hasOwnProperty.call(message, "gatekeeperControllerManagerState"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.gatekeeperControllerManagerState);
                                if (message.gatekeeperAudit != null && Object.hasOwnProperty.call(message, "gatekeeperAudit"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.gatekeeperAudit);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GatekeeperDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.IGatekeeperDeploymentState} message GatekeeperDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatekeeperDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GatekeeperDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState} GatekeeperDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatekeeperDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.gatekeeperControllerManagerState = reader.int32();
                                        break;
                                    case 2:
                                        message.gatekeeperAudit = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GatekeeperDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState} GatekeeperDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatekeeperDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GatekeeperDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GatekeeperDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.gatekeeperControllerManagerState != null && message.hasOwnProperty("gatekeeperControllerManagerState"))
                                    switch (message.gatekeeperControllerManagerState) {
                                    default:
                                        return "gatekeeperControllerManagerState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gatekeeperAudit != null && message.hasOwnProperty("gatekeeperAudit"))
                                    switch (message.gatekeeperAudit) {
                                    default:
                                        return "gatekeeperAudit: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a GatekeeperDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState} GatekeeperDeploymentState
                             */
                            GatekeeperDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState();
                                switch (object.gatekeeperControllerManagerState) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperControllerManagerState = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperControllerManagerState = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperControllerManagerState = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperControllerManagerState = 3;
                                    break;
                                }
                                switch (object.gatekeeperAudit) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperAudit = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperAudit = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperAudit = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperAudit = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GatekeeperDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState} message GatekeeperDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GatekeeperDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.gatekeeperControllerManagerState = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gatekeeperAudit = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.gatekeeperControllerManagerState != null && message.hasOwnProperty("gatekeeperControllerManagerState"))
                                    object.gatekeeperControllerManagerState = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.gatekeeperControllerManagerState] : message.gatekeeperControllerManagerState;
                                if (message.gatekeeperAudit != null && message.hasOwnProperty("gatekeeperAudit"))
                                    object.gatekeeperAudit = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1.DeploymentState[message.gatekeeperAudit] : message.gatekeeperAudit;
                                return object;
                            };
    
                            /**
                             * Converts this GatekeeperDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1.GatekeeperDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GatekeeperDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GatekeeperDeploymentState;
                        })();
    
                        return v1;
                    })();
    
                    configmanagement.v1alpha = (function() {
    
                        /**
                         * Namespace v1alpha.
                         * @memberof google.cloud.gkehub.configmanagement
                         * @namespace
                         */
                        var v1alpha = {};
    
                        /**
                         * DeploymentState enum.
                         * @name google.cloud.gkehub.configmanagement.v1alpha.DeploymentState
                         * @enum {number}
                         * @property {number} DEPLOYMENT_STATE_UNSPECIFIED=0 DEPLOYMENT_STATE_UNSPECIFIED value
                         * @property {number} NOT_INSTALLED=1 NOT_INSTALLED value
                         * @property {number} INSTALLED=2 INSTALLED value
                         * @property {number} ERROR=3 ERROR value
                         */
                        v1alpha.DeploymentState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DEPLOYMENT_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_INSTALLED"] = 1;
                            values[valuesById[2] = "INSTALLED"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            return values;
                        })();
    
                        v1alpha.MembershipState = (function() {
    
                            /**
                             * Properties of a MembershipState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IMembershipState
                             * @property {string|null} [clusterName] MembershipState clusterName
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec|null} [membershipSpec] MembershipState membershipSpec
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IOperatorState|null} [operatorState] MembershipState operatorState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncState|null} [configSyncState] MembershipState configSyncState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerState|null} [policyControllerState] MembershipState policyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzState|null} [binauthzState] MembershipState binauthzState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerState|null} [hierarchyControllerState] MembershipState hierarchyControllerState
                             */
    
                            /**
                             * Constructs a new MembershipState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a MembershipState.
                             * @implements IMembershipState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipState=} [properties] Properties to set
                             */
                            function MembershipState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipState clusterName.
                             * @member {string} clusterName
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.clusterName = "";
    
                            /**
                             * MembershipState membershipSpec.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec|null|undefined} membershipSpec
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.membershipSpec = null;
    
                            /**
                             * MembershipState operatorState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IOperatorState|null|undefined} operatorState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.operatorState = null;
    
                            /**
                             * MembershipState configSyncState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncState|null|undefined} configSyncState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.configSyncState = null;
    
                            /**
                             * MembershipState policyControllerState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerState|null|undefined} policyControllerState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.policyControllerState = null;
    
                            /**
                             * MembershipState binauthzState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzState|null|undefined} binauthzState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.binauthzState = null;
    
                            /**
                             * MembershipState hierarchyControllerState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerState|null|undefined} hierarchyControllerState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.hierarchyControllerState = null;
    
                            /**
                             * Creates a new MembershipState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipState} MembershipState instance
                             */
                            MembershipState.create = function create(properties) {
                                return new MembershipState(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.MembershipState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.clusterName);
                                if (message.membershipSpec != null && Object.hasOwnProperty.call(message, "membershipSpec"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.encode(message.membershipSpec, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.operatorState != null && Object.hasOwnProperty.call(message, "operatorState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState.encode(message.operatorState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.configSyncState != null && Object.hasOwnProperty.call(message, "configSyncState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.encode(message.configSyncState, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.policyControllerState != null && Object.hasOwnProperty.call(message, "policyControllerState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.encode(message.policyControllerState, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.binauthzState != null && Object.hasOwnProperty.call(message, "binauthzState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.encode(message.binauthzState, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.hierarchyControllerState != null && Object.hasOwnProperty.call(message, "hierarchyControllerState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.encode(message.hierarchyControllerState, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.MembershipState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.clusterName = reader.string();
                                        break;
                                    case 2:
                                        message.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.operatorState = $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.configSyncState = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.decode(reader, reader.uint32());
                                        break;
                                    case 6:
                                        message.binauthzState = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.decode(reader, reader.uint32());
                                        break;
                                    case 7:
                                        message.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                    if (!$util.isString(message.clusterName))
                                        return "clusterName: string expected";
                                if (message.membershipSpec != null && message.hasOwnProperty("membershipSpec")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.verify(message.membershipSpec);
                                    if (error)
                                        return "membershipSpec." + error;
                                }
                                if (message.operatorState != null && message.hasOwnProperty("operatorState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState.verify(message.operatorState);
                                    if (error)
                                        return "operatorState." + error;
                                }
                                if (message.configSyncState != null && message.hasOwnProperty("configSyncState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.verify(message.configSyncState);
                                    if (error)
                                        return "configSyncState." + error;
                                }
                                if (message.policyControllerState != null && message.hasOwnProperty("policyControllerState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.verify(message.policyControllerState);
                                    if (error)
                                        return "policyControllerState." + error;
                                }
                                if (message.binauthzState != null && message.hasOwnProperty("binauthzState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.verify(message.binauthzState);
                                    if (error)
                                        return "binauthzState." + error;
                                }
                                if (message.hierarchyControllerState != null && message.hasOwnProperty("hierarchyControllerState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.verify(message.hierarchyControllerState);
                                    if (error)
                                        return "hierarchyControllerState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipState} MembershipState
                             */
                            MembershipState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState();
                                if (object.clusterName != null)
                                    message.clusterName = String(object.clusterName);
                                if (object.membershipSpec != null) {
                                    if (typeof object.membershipSpec !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipState.membershipSpec: object expected");
                                    message.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.fromObject(object.membershipSpec);
                                }
                                if (object.operatorState != null) {
                                    if (typeof object.operatorState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipState.operatorState: object expected");
                                    message.operatorState = $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState.fromObject(object.operatorState);
                                }
                                if (object.configSyncState != null) {
                                    if (typeof object.configSyncState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipState.configSyncState: object expected");
                                    message.configSyncState = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.fromObject(object.configSyncState);
                                }
                                if (object.policyControllerState != null) {
                                    if (typeof object.policyControllerState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipState.policyControllerState: object expected");
                                    message.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.fromObject(object.policyControllerState);
                                }
                                if (object.binauthzState != null) {
                                    if (typeof object.binauthzState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipState.binauthzState: object expected");
                                    message.binauthzState = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.fromObject(object.binauthzState);
                                }
                                if (object.hierarchyControllerState != null) {
                                    if (typeof object.hierarchyControllerState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipState.hierarchyControllerState: object expected");
                                    message.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.fromObject(object.hierarchyControllerState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.MembershipState} message MembershipState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.clusterName = "";
                                    object.membershipSpec = null;
                                    object.operatorState = null;
                                    object.configSyncState = null;
                                    object.policyControllerState = null;
                                    object.binauthzState = null;
                                    object.hierarchyControllerState = null;
                                }
                                if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                    object.clusterName = message.clusterName;
                                if (message.membershipSpec != null && message.hasOwnProperty("membershipSpec"))
                                    object.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.toObject(message.membershipSpec, options);
                                if (message.operatorState != null && message.hasOwnProperty("operatorState"))
                                    object.operatorState = $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState.toObject(message.operatorState, options);
                                if (message.configSyncState != null && message.hasOwnProperty("configSyncState"))
                                    object.configSyncState = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.toObject(message.configSyncState, options);
                                if (message.policyControllerState != null && message.hasOwnProperty("policyControllerState"))
                                    object.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.toObject(message.policyControllerState, options);
                                if (message.binauthzState != null && message.hasOwnProperty("binauthzState"))
                                    object.binauthzState = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.toObject(message.binauthzState, options);
                                if (message.hierarchyControllerState != null && message.hasOwnProperty("hierarchyControllerState"))
                                    object.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.toObject(message.hierarchyControllerState, options);
                                return object;
                            };
    
                            /**
                             * Converts this MembershipState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipState;
                        })();
    
                        v1alpha.MembershipSpec = (function() {
    
                            /**
                             * Properties of a MembershipSpec.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IMembershipSpec
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IConfigSync|null} [configSync] MembershipSpec configSync
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IPolicyController|null} [policyController] MembershipSpec policyController
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzConfig|null} [binauthz] MembershipSpec binauthz
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerConfig|null} [hierarchyController] MembershipSpec hierarchyController
                             * @property {string|null} [version] MembershipSpec version
                             */
    
                            /**
                             * Constructs a new MembershipSpec.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a MembershipSpec.
                             * @implements IMembershipSpec
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec=} [properties] Properties to set
                             */
                            function MembershipSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipSpec configSync.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IConfigSync|null|undefined} configSync
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.configSync = null;
    
                            /**
                             * MembershipSpec policyController.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IPolicyController|null|undefined} policyController
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.policyController = null;
    
                            /**
                             * MembershipSpec binauthz.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzConfig|null|undefined} binauthz
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.binauthz = null;
    
                            /**
                             * MembershipSpec hierarchyController.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerConfig|null|undefined} hierarchyController
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.hierarchyController = null;
    
                            /**
                             * MembershipSpec version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.version = "";
    
                            /**
                             * Creates a new MembershipSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec} MembershipSpec instance
                             */
                            MembershipSpec.create = function create(properties) {
                                return new MembershipSpec(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipSpec message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec} message MembershipSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.configSync != null && Object.hasOwnProperty.call(message, "configSync"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.encode(message.configSync, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.policyController != null && Object.hasOwnProperty.call(message, "policyController"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController.encode(message.policyController, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.binauthz != null && Object.hasOwnProperty.call(message, "binauthz"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.encode(message.binauthz, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.hierarchyController != null && Object.hasOwnProperty.call(message, "hierarchyController"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.encode(message.hierarchyController, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec} message MembershipSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec} MembershipSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.configSync = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.policyController = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.binauthz = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.decode(reader, reader.uint32());
                                        break;
                                    case 10:
                                        message.version = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec} MembershipSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.configSync != null && message.hasOwnProperty("configSync")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.verify(message.configSync);
                                    if (error)
                                        return "configSync." + error;
                                }
                                if (message.policyController != null && message.hasOwnProperty("policyController")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController.verify(message.policyController);
                                    if (error)
                                        return "policyController." + error;
                                }
                                if (message.binauthz != null && message.hasOwnProperty("binauthz")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.verify(message.binauthz);
                                    if (error)
                                        return "binauthz." + error;
                                }
                                if (message.hierarchyController != null && message.hasOwnProperty("hierarchyController")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.verify(message.hierarchyController);
                                    if (error)
                                        return "hierarchyController." + error;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a MembershipSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec} MembershipSpec
                             */
                            MembershipSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec();
                                if (object.configSync != null) {
                                    if (typeof object.configSync !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.configSync: object expected");
                                    message.configSync = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.fromObject(object.configSync);
                                }
                                if (object.policyController != null) {
                                    if (typeof object.policyController !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.policyController: object expected");
                                    message.policyController = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController.fromObject(object.policyController);
                                }
                                if (object.binauthz != null) {
                                    if (typeof object.binauthz !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.binauthz: object expected");
                                    message.binauthz = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.fromObject(object.binauthz);
                                }
                                if (object.hierarchyController != null) {
                                    if (typeof object.hierarchyController !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.hierarchyController: object expected");
                                    message.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.fromObject(object.hierarchyController);
                                }
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec} message MembershipSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.configSync = null;
                                    object.policyController = null;
                                    object.binauthz = null;
                                    object.hierarchyController = null;
                                    object.version = "";
                                }
                                if (message.configSync != null && message.hasOwnProperty("configSync"))
                                    object.configSync = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.toObject(message.configSync, options);
                                if (message.policyController != null && message.hasOwnProperty("policyController"))
                                    object.policyController = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController.toObject(message.policyController, options);
                                if (message.binauthz != null && message.hasOwnProperty("binauthz"))
                                    object.binauthz = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.toObject(message.binauthz, options);
                                if (message.hierarchyController != null && message.hasOwnProperty("hierarchyController"))
                                    object.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.toObject(message.hierarchyController, options);
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this MembershipSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipSpec;
                        })();
    
                        v1alpha.ConfigSync = (function() {
    
                            /**
                             * Properties of a ConfigSync.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IConfigSync
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IGitConfig|null} [git] ConfigSync git
                             * @property {string|null} [sourceFormat] ConfigSync sourceFormat
                             */
    
                            /**
                             * Constructs a new ConfigSync.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a ConfigSync.
                             * @implements IConfigSync
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSync=} [properties] Properties to set
                             */
                            function ConfigSync(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSync git.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IGitConfig|null|undefined} git
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @instance
                             */
                            ConfigSync.prototype.git = null;
    
                            /**
                             * ConfigSync sourceFormat.
                             * @member {string} sourceFormat
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @instance
                             */
                            ConfigSync.prototype.sourceFormat = "";
    
                            /**
                             * Creates a new ConfigSync instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSync=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSync} ConfigSync instance
                             */
                            ConfigSync.create = function create(properties) {
                                return new ConfigSync(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSync message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSync} message ConfigSync message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSync.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.git != null && Object.hasOwnProperty.call(message, "git"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig.encode(message.git, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.sourceFormat != null && Object.hasOwnProperty.call(message, "sourceFormat"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.sourceFormat);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSync message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSync} message ConfigSync message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSync.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSync message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSync} ConfigSync
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSync.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 7:
                                        message.git = $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig.decode(reader, reader.uint32());
                                        break;
                                    case 8:
                                        message.sourceFormat = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSync message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSync} ConfigSync
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSync.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSync message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSync.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.git != null && message.hasOwnProperty("git")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig.verify(message.git);
                                    if (error)
                                        return "git." + error;
                                }
                                if (message.sourceFormat != null && message.hasOwnProperty("sourceFormat"))
                                    if (!$util.isString(message.sourceFormat))
                                        return "sourceFormat: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSync message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSync} ConfigSync
                             */
                            ConfigSync.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSync();
                                if (object.git != null) {
                                    if (typeof object.git !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.ConfigSync.git: object expected");
                                    message.git = $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig.fromObject(object.git);
                                }
                                if (object.sourceFormat != null)
                                    message.sourceFormat = String(object.sourceFormat);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSync message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ConfigSync} message ConfigSync
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSync.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.git = null;
                                    object.sourceFormat = "";
                                }
                                if (message.git != null && message.hasOwnProperty("git"))
                                    object.git = $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig.toObject(message.git, options);
                                if (message.sourceFormat != null && message.hasOwnProperty("sourceFormat"))
                                    object.sourceFormat = message.sourceFormat;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSync to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSync
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSync.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSync;
                        })();
    
                        v1alpha.GitConfig = (function() {
    
                            /**
                             * Properties of a GitConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IGitConfig
                             * @property {string|null} [syncRepo] GitConfig syncRepo
                             * @property {string|null} [syncBranch] GitConfig syncBranch
                             * @property {string|null} [policyDir] GitConfig policyDir
                             * @property {number|Long|null} [syncWaitSecs] GitConfig syncWaitSecs
                             * @property {string|null} [syncRev] GitConfig syncRev
                             * @property {string|null} [secretType] GitConfig secretType
                             * @property {string|null} [httpsProxy] GitConfig httpsProxy
                             * @property {string|null} [gcpServiceAccountEmail] GitConfig gcpServiceAccountEmail
                             */
    
                            /**
                             * Constructs a new GitConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a GitConfig.
                             * @implements IGitConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGitConfig=} [properties] Properties to set
                             */
                            function GitConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GitConfig syncRepo.
                             * @member {string} syncRepo
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncRepo = "";
    
                            /**
                             * GitConfig syncBranch.
                             * @member {string} syncBranch
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncBranch = "";
    
                            /**
                             * GitConfig policyDir.
                             * @member {string} policyDir
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.policyDir = "";
    
                            /**
                             * GitConfig syncWaitSecs.
                             * @member {number|Long} syncWaitSecs
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncWaitSecs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * GitConfig syncRev.
                             * @member {string} syncRev
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncRev = "";
    
                            /**
                             * GitConfig secretType.
                             * @member {string} secretType
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.secretType = "";
    
                            /**
                             * GitConfig httpsProxy.
                             * @member {string} httpsProxy
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.httpsProxy = "";
    
                            /**
                             * GitConfig gcpServiceAccountEmail.
                             * @member {string} gcpServiceAccountEmail
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.gcpServiceAccountEmail = "";
    
                            /**
                             * Creates a new GitConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGitConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GitConfig} GitConfig instance
                             */
                            GitConfig.create = function create(properties) {
                                return new GitConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GitConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.GitConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGitConfig} message GitConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.syncRepo != null && Object.hasOwnProperty.call(message, "syncRepo"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.syncRepo);
                                if (message.syncBranch != null && Object.hasOwnProperty.call(message, "syncBranch"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.syncBranch);
                                if (message.policyDir != null && Object.hasOwnProperty.call(message, "policyDir"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.policyDir);
                                if (message.syncWaitSecs != null && Object.hasOwnProperty.call(message, "syncWaitSecs"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.syncWaitSecs);
                                if (message.syncRev != null && Object.hasOwnProperty.call(message, "syncRev"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.syncRev);
                                if (message.secretType != null && Object.hasOwnProperty.call(message, "secretType"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.secretType);
                                if (message.httpsProxy != null && Object.hasOwnProperty.call(message, "httpsProxy"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.httpsProxy);
                                if (message.gcpServiceAccountEmail != null && Object.hasOwnProperty.call(message, "gcpServiceAccountEmail"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.gcpServiceAccountEmail);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GitConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.GitConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGitConfig} message GitConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GitConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GitConfig} GitConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.syncRepo = reader.string();
                                        break;
                                    case 2:
                                        message.syncBranch = reader.string();
                                        break;
                                    case 3:
                                        message.policyDir = reader.string();
                                        break;
                                    case 4:
                                        message.syncWaitSecs = reader.int64();
                                        break;
                                    case 5:
                                        message.syncRev = reader.string();
                                        break;
                                    case 6:
                                        message.secretType = reader.string();
                                        break;
                                    case 7:
                                        message.httpsProxy = reader.string();
                                        break;
                                    case 8:
                                        message.gcpServiceAccountEmail = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GitConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GitConfig} GitConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GitConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GitConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.syncRepo != null && message.hasOwnProperty("syncRepo"))
                                    if (!$util.isString(message.syncRepo))
                                        return "syncRepo: string expected";
                                if (message.syncBranch != null && message.hasOwnProperty("syncBranch"))
                                    if (!$util.isString(message.syncBranch))
                                        return "syncBranch: string expected";
                                if (message.policyDir != null && message.hasOwnProperty("policyDir"))
                                    if (!$util.isString(message.policyDir))
                                        return "policyDir: string expected";
                                if (message.syncWaitSecs != null && message.hasOwnProperty("syncWaitSecs"))
                                    if (!$util.isInteger(message.syncWaitSecs) && !(message.syncWaitSecs && $util.isInteger(message.syncWaitSecs.low) && $util.isInteger(message.syncWaitSecs.high)))
                                        return "syncWaitSecs: integer|Long expected";
                                if (message.syncRev != null && message.hasOwnProperty("syncRev"))
                                    if (!$util.isString(message.syncRev))
                                        return "syncRev: string expected";
                                if (message.secretType != null && message.hasOwnProperty("secretType"))
                                    if (!$util.isString(message.secretType))
                                        return "secretType: string expected";
                                if (message.httpsProxy != null && message.hasOwnProperty("httpsProxy"))
                                    if (!$util.isString(message.httpsProxy))
                                        return "httpsProxy: string expected";
                                if (message.gcpServiceAccountEmail != null && message.hasOwnProperty("gcpServiceAccountEmail"))
                                    if (!$util.isString(message.gcpServiceAccountEmail))
                                        return "gcpServiceAccountEmail: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GitConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GitConfig} GitConfig
                             */
                            GitConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.GitConfig();
                                if (object.syncRepo != null)
                                    message.syncRepo = String(object.syncRepo);
                                if (object.syncBranch != null)
                                    message.syncBranch = String(object.syncBranch);
                                if (object.policyDir != null)
                                    message.policyDir = String(object.policyDir);
                                if (object.syncWaitSecs != null)
                                    if ($util.Long)
                                        (message.syncWaitSecs = $util.Long.fromValue(object.syncWaitSecs)).unsigned = false;
                                    else if (typeof object.syncWaitSecs === "string")
                                        message.syncWaitSecs = parseInt(object.syncWaitSecs, 10);
                                    else if (typeof object.syncWaitSecs === "number")
                                        message.syncWaitSecs = object.syncWaitSecs;
                                    else if (typeof object.syncWaitSecs === "object")
                                        message.syncWaitSecs = new $util.LongBits(object.syncWaitSecs.low >>> 0, object.syncWaitSecs.high >>> 0).toNumber();
                                if (object.syncRev != null)
                                    message.syncRev = String(object.syncRev);
                                if (object.secretType != null)
                                    message.secretType = String(object.secretType);
                                if (object.httpsProxy != null)
                                    message.httpsProxy = String(object.httpsProxy);
                                if (object.gcpServiceAccountEmail != null)
                                    message.gcpServiceAccountEmail = String(object.gcpServiceAccountEmail);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GitConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.GitConfig} message GitConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GitConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.syncRepo = "";
                                    object.syncBranch = "";
                                    object.policyDir = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.syncWaitSecs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.syncWaitSecs = options.longs === String ? "0" : 0;
                                    object.syncRev = "";
                                    object.secretType = "";
                                    object.httpsProxy = "";
                                    object.gcpServiceAccountEmail = "";
                                }
                                if (message.syncRepo != null && message.hasOwnProperty("syncRepo"))
                                    object.syncRepo = message.syncRepo;
                                if (message.syncBranch != null && message.hasOwnProperty("syncBranch"))
                                    object.syncBranch = message.syncBranch;
                                if (message.policyDir != null && message.hasOwnProperty("policyDir"))
                                    object.policyDir = message.policyDir;
                                if (message.syncWaitSecs != null && message.hasOwnProperty("syncWaitSecs"))
                                    if (typeof message.syncWaitSecs === "number")
                                        object.syncWaitSecs = options.longs === String ? String(message.syncWaitSecs) : message.syncWaitSecs;
                                    else
                                        object.syncWaitSecs = options.longs === String ? $util.Long.prototype.toString.call(message.syncWaitSecs) : options.longs === Number ? new $util.LongBits(message.syncWaitSecs.low >>> 0, message.syncWaitSecs.high >>> 0).toNumber() : message.syncWaitSecs;
                                if (message.syncRev != null && message.hasOwnProperty("syncRev"))
                                    object.syncRev = message.syncRev;
                                if (message.secretType != null && message.hasOwnProperty("secretType"))
                                    object.secretType = message.secretType;
                                if (message.httpsProxy != null && message.hasOwnProperty("httpsProxy"))
                                    object.httpsProxy = message.httpsProxy;
                                if (message.gcpServiceAccountEmail != null && message.hasOwnProperty("gcpServiceAccountEmail"))
                                    object.gcpServiceAccountEmail = message.gcpServiceAccountEmail;
                                return object;
                            };
    
                            /**
                             * Converts this GitConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GitConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GitConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GitConfig;
                        })();
    
                        v1alpha.PolicyController = (function() {
    
                            /**
                             * Properties of a PolicyController.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IPolicyController
                             * @property {boolean|null} [enabled] PolicyController enabled
                             * @property {boolean|null} [templateLibraryInstalled] PolicyController templateLibraryInstalled
                             * @property {number|Long|null} [auditIntervalSeconds] PolicyController auditIntervalSeconds
                             * @property {Array.<string>|null} [exemptableNamespaces] PolicyController exemptableNamespaces
                             * @property {boolean|null} [referentialRulesEnabled] PolicyController referentialRulesEnabled
                             * @property {boolean|null} [logDeniesEnabled] PolicyController logDeniesEnabled
                             * @property {boolean|null} [mutationEnabled] PolicyController mutationEnabled
                             */
    
                            /**
                             * Constructs a new PolicyController.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a PolicyController.
                             * @implements IPolicyController
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyController=} [properties] Properties to set
                             */
                            function PolicyController(properties) {
                                this.exemptableNamespaces = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyController enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.enabled = false;
    
                            /**
                             * PolicyController templateLibraryInstalled.
                             * @member {boolean|null|undefined} templateLibraryInstalled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.templateLibraryInstalled = null;
    
                            /**
                             * PolicyController auditIntervalSeconds.
                             * @member {number|Long|null|undefined} auditIntervalSeconds
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.auditIntervalSeconds = null;
    
                            /**
                             * PolicyController exemptableNamespaces.
                             * @member {Array.<string>} exemptableNamespaces
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.exemptableNamespaces = $util.emptyArray;
    
                            /**
                             * PolicyController referentialRulesEnabled.
                             * @member {boolean} referentialRulesEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.referentialRulesEnabled = false;
    
                            /**
                             * PolicyController logDeniesEnabled.
                             * @member {boolean} logDeniesEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.logDeniesEnabled = false;
    
                            /**
                             * PolicyController mutationEnabled.
                             * @member {boolean} mutationEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.mutationEnabled = false;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * PolicyController _templateLibraryInstalled.
                             * @member {"templateLibraryInstalled"|undefined} _templateLibraryInstalled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            Object.defineProperty(PolicyController.prototype, "_templateLibraryInstalled", {
                                get: $util.oneOfGetter($oneOfFields = ["templateLibraryInstalled"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * PolicyController _auditIntervalSeconds.
                             * @member {"auditIntervalSeconds"|undefined} _auditIntervalSeconds
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             */
                            Object.defineProperty(PolicyController.prototype, "_auditIntervalSeconds", {
                                get: $util.oneOfGetter($oneOfFields = ["auditIntervalSeconds"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new PolicyController instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyController=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyController} PolicyController instance
                             */
                            PolicyController.create = function create(properties) {
                                return new PolicyController(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyController message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.PolicyController.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyController} message PolicyController message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyController.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.templateLibraryInstalled != null && Object.hasOwnProperty.call(message, "templateLibraryInstalled"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.templateLibraryInstalled);
                                if (message.auditIntervalSeconds != null && Object.hasOwnProperty.call(message, "auditIntervalSeconds"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.auditIntervalSeconds);
                                if (message.exemptableNamespaces != null && message.exemptableNamespaces.length)
                                    for (var i = 0; i < message.exemptableNamespaces.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.exemptableNamespaces[i]);
                                if (message.referentialRulesEnabled != null && Object.hasOwnProperty.call(message, "referentialRulesEnabled"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.referentialRulesEnabled);
                                if (message.logDeniesEnabled != null && Object.hasOwnProperty.call(message, "logDeniesEnabled"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.logDeniesEnabled);
                                if (message.mutationEnabled != null && Object.hasOwnProperty.call(message, "mutationEnabled"))
                                    writer.uint32(/* id 7, wireType 0 =*/56).bool(message.mutationEnabled);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyController message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.PolicyController.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyController} message PolicyController message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyController.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyController message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyController} PolicyController
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyController.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    case 2:
                                        message.templateLibraryInstalled = reader.bool();
                                        break;
                                    case 3:
                                        message.auditIntervalSeconds = reader.int64();
                                        break;
                                    case 4:
                                        if (!(message.exemptableNamespaces && message.exemptableNamespaces.length))
                                            message.exemptableNamespaces = [];
                                        message.exemptableNamespaces.push(reader.string());
                                        break;
                                    case 5:
                                        message.referentialRulesEnabled = reader.bool();
                                        break;
                                    case 6:
                                        message.logDeniesEnabled = reader.bool();
                                        break;
                                    case 7:
                                        message.mutationEnabled = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyController message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyController} PolicyController
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyController.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyController message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyController.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.templateLibraryInstalled != null && message.hasOwnProperty("templateLibraryInstalled")) {
                                    properties._templateLibraryInstalled = 1;
                                    if (typeof message.templateLibraryInstalled !== "boolean")
                                        return "templateLibraryInstalled: boolean expected";
                                }
                                if (message.auditIntervalSeconds != null && message.hasOwnProperty("auditIntervalSeconds")) {
                                    properties._auditIntervalSeconds = 1;
                                    if (!$util.isInteger(message.auditIntervalSeconds) && !(message.auditIntervalSeconds && $util.isInteger(message.auditIntervalSeconds.low) && $util.isInteger(message.auditIntervalSeconds.high)))
                                        return "auditIntervalSeconds: integer|Long expected";
                                }
                                if (message.exemptableNamespaces != null && message.hasOwnProperty("exemptableNamespaces")) {
                                    if (!Array.isArray(message.exemptableNamespaces))
                                        return "exemptableNamespaces: array expected";
                                    for (var i = 0; i < message.exemptableNamespaces.length; ++i)
                                        if (!$util.isString(message.exemptableNamespaces[i]))
                                            return "exemptableNamespaces: string[] expected";
                                }
                                if (message.referentialRulesEnabled != null && message.hasOwnProperty("referentialRulesEnabled"))
                                    if (typeof message.referentialRulesEnabled !== "boolean")
                                        return "referentialRulesEnabled: boolean expected";
                                if (message.logDeniesEnabled != null && message.hasOwnProperty("logDeniesEnabled"))
                                    if (typeof message.logDeniesEnabled !== "boolean")
                                        return "logDeniesEnabled: boolean expected";
                                if (message.mutationEnabled != null && message.hasOwnProperty("mutationEnabled"))
                                    if (typeof message.mutationEnabled !== "boolean")
                                        return "mutationEnabled: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a PolicyController message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyController} PolicyController
                             */
                            PolicyController.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyController();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                if (object.templateLibraryInstalled != null)
                                    message.templateLibraryInstalled = Boolean(object.templateLibraryInstalled);
                                if (object.auditIntervalSeconds != null)
                                    if ($util.Long)
                                        (message.auditIntervalSeconds = $util.Long.fromValue(object.auditIntervalSeconds)).unsigned = false;
                                    else if (typeof object.auditIntervalSeconds === "string")
                                        message.auditIntervalSeconds = parseInt(object.auditIntervalSeconds, 10);
                                    else if (typeof object.auditIntervalSeconds === "number")
                                        message.auditIntervalSeconds = object.auditIntervalSeconds;
                                    else if (typeof object.auditIntervalSeconds === "object")
                                        message.auditIntervalSeconds = new $util.LongBits(object.auditIntervalSeconds.low >>> 0, object.auditIntervalSeconds.high >>> 0).toNumber();
                                if (object.exemptableNamespaces) {
                                    if (!Array.isArray(object.exemptableNamespaces))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.PolicyController.exemptableNamespaces: array expected");
                                    message.exemptableNamespaces = [];
                                    for (var i = 0; i < object.exemptableNamespaces.length; ++i)
                                        message.exemptableNamespaces[i] = String(object.exemptableNamespaces[i]);
                                }
                                if (object.referentialRulesEnabled != null)
                                    message.referentialRulesEnabled = Boolean(object.referentialRulesEnabled);
                                if (object.logDeniesEnabled != null)
                                    message.logDeniesEnabled = Boolean(object.logDeniesEnabled);
                                if (object.mutationEnabled != null)
                                    message.mutationEnabled = Boolean(object.mutationEnabled);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyController message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.PolicyController} message PolicyController
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyController.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.exemptableNamespaces = [];
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.referentialRulesEnabled = false;
                                    object.logDeniesEnabled = false;
                                    object.mutationEnabled = false;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.templateLibraryInstalled != null && message.hasOwnProperty("templateLibraryInstalled")) {
                                    object.templateLibraryInstalled = message.templateLibraryInstalled;
                                    if (options.oneofs)
                                        object._templateLibraryInstalled = "templateLibraryInstalled";
                                }
                                if (message.auditIntervalSeconds != null && message.hasOwnProperty("auditIntervalSeconds")) {
                                    if (typeof message.auditIntervalSeconds === "number")
                                        object.auditIntervalSeconds = options.longs === String ? String(message.auditIntervalSeconds) : message.auditIntervalSeconds;
                                    else
                                        object.auditIntervalSeconds = options.longs === String ? $util.Long.prototype.toString.call(message.auditIntervalSeconds) : options.longs === Number ? new $util.LongBits(message.auditIntervalSeconds.low >>> 0, message.auditIntervalSeconds.high >>> 0).toNumber() : message.auditIntervalSeconds;
                                    if (options.oneofs)
                                        object._auditIntervalSeconds = "auditIntervalSeconds";
                                }
                                if (message.exemptableNamespaces && message.exemptableNamespaces.length) {
                                    object.exemptableNamespaces = [];
                                    for (var j = 0; j < message.exemptableNamespaces.length; ++j)
                                        object.exemptableNamespaces[j] = message.exemptableNamespaces[j];
                                }
                                if (message.referentialRulesEnabled != null && message.hasOwnProperty("referentialRulesEnabled"))
                                    object.referentialRulesEnabled = message.referentialRulesEnabled;
                                if (message.logDeniesEnabled != null && message.hasOwnProperty("logDeniesEnabled"))
                                    object.logDeniesEnabled = message.logDeniesEnabled;
                                if (message.mutationEnabled != null && message.hasOwnProperty("mutationEnabled"))
                                    object.mutationEnabled = message.mutationEnabled;
                                return object;
                            };
    
                            /**
                             * Converts this PolicyController to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyController
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyController.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyController;
                        })();
    
                        v1alpha.BinauthzConfig = (function() {
    
                            /**
                             * Properties of a BinauthzConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IBinauthzConfig
                             * @property {boolean|null} [enabled] BinauthzConfig enabled
                             */
    
                            /**
                             * Constructs a new BinauthzConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a BinauthzConfig.
                             * @implements IBinauthzConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzConfig=} [properties] Properties to set
                             */
                            function BinauthzConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BinauthzConfig enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @instance
                             */
                            BinauthzConfig.prototype.enabled = false;
    
                            /**
                             * Creates a new BinauthzConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig} BinauthzConfig instance
                             */
                            BinauthzConfig.create = function create(properties) {
                                return new BinauthzConfig(properties);
                            };
    
                            /**
                             * Encodes the specified BinauthzConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzConfig} message BinauthzConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BinauthzConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzConfig} message BinauthzConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BinauthzConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig} BinauthzConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BinauthzConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig} BinauthzConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BinauthzConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BinauthzConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a BinauthzConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig} BinauthzConfig
                             */
                            BinauthzConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BinauthzConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig} message BinauthzConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BinauthzConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.enabled = false;
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                return object;
                            };
    
                            /**
                             * Converts this BinauthzConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BinauthzConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return BinauthzConfig;
                        })();
    
                        v1alpha.HierarchyControllerConfig = (function() {
    
                            /**
                             * Properties of a HierarchyControllerConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IHierarchyControllerConfig
                             * @property {boolean|null} [enabled] HierarchyControllerConfig enabled
                             * @property {boolean|null} [enablePodTreeLabels] HierarchyControllerConfig enablePodTreeLabels
                             * @property {boolean|null} [enableHierarchicalResourceQuota] HierarchyControllerConfig enableHierarchicalResourceQuota
                             */
    
                            /**
                             * Constructs a new HierarchyControllerConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a HierarchyControllerConfig.
                             * @implements IHierarchyControllerConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerConfig=} [properties] Properties to set
                             */
                            function HierarchyControllerConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerConfig enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enabled = false;
    
                            /**
                             * HierarchyControllerConfig enablePodTreeLabels.
                             * @member {boolean} enablePodTreeLabels
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enablePodTreeLabels = false;
    
                            /**
                             * HierarchyControllerConfig enableHierarchicalResourceQuota.
                             * @member {boolean} enableHierarchicalResourceQuota
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enableHierarchicalResourceQuota = false;
    
                            /**
                             * Creates a new HierarchyControllerConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig} HierarchyControllerConfig instance
                             */
                            HierarchyControllerConfig.create = function create(properties) {
                                return new HierarchyControllerConfig(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerConfig} message HierarchyControllerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.enablePodTreeLabels != null && Object.hasOwnProperty.call(message, "enablePodTreeLabels"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enablePodTreeLabels);
                                if (message.enableHierarchicalResourceQuota != null && Object.hasOwnProperty.call(message, "enableHierarchicalResourceQuota"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableHierarchicalResourceQuota);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerConfig} message HierarchyControllerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig} HierarchyControllerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    case 2:
                                        message.enablePodTreeLabels = reader.bool();
                                        break;
                                    case 3:
                                        message.enableHierarchicalResourceQuota = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig} HierarchyControllerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.enablePodTreeLabels != null && message.hasOwnProperty("enablePodTreeLabels"))
                                    if (typeof message.enablePodTreeLabels !== "boolean")
                                        return "enablePodTreeLabels: boolean expected";
                                if (message.enableHierarchicalResourceQuota != null && message.hasOwnProperty("enableHierarchicalResourceQuota"))
                                    if (typeof message.enableHierarchicalResourceQuota !== "boolean")
                                        return "enableHierarchicalResourceQuota: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig} HierarchyControllerConfig
                             */
                            HierarchyControllerConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                if (object.enablePodTreeLabels != null)
                                    message.enablePodTreeLabels = Boolean(object.enablePodTreeLabels);
                                if (object.enableHierarchicalResourceQuota != null)
                                    message.enableHierarchicalResourceQuota = Boolean(object.enableHierarchicalResourceQuota);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig} message HierarchyControllerConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.enablePodTreeLabels = false;
                                    object.enableHierarchicalResourceQuota = false;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.enablePodTreeLabels != null && message.hasOwnProperty("enablePodTreeLabels"))
                                    object.enablePodTreeLabels = message.enablePodTreeLabels;
                                if (message.enableHierarchicalResourceQuota != null && message.hasOwnProperty("enableHierarchicalResourceQuota"))
                                    object.enableHierarchicalResourceQuota = message.enableHierarchicalResourceQuota;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerConfig;
                        })();
    
                        v1alpha.HierarchyControllerDeploymentState = (function() {
    
                            /**
                             * Properties of a HierarchyControllerDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IHierarchyControllerDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [hnc] HierarchyControllerDeploymentState hnc
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [extension] HierarchyControllerDeploymentState extension
                             */
    
                            /**
                             * Constructs a new HierarchyControllerDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a HierarchyControllerDeploymentState.
                             * @implements IHierarchyControllerDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerDeploymentState=} [properties] Properties to set
                             */
                            function HierarchyControllerDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerDeploymentState hnc.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} hnc
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @instance
                             */
                            HierarchyControllerDeploymentState.prototype.hnc = 0;
    
                            /**
                             * HierarchyControllerDeploymentState extension.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} extension
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @instance
                             */
                            HierarchyControllerDeploymentState.prototype.extension = 0;
    
                            /**
                             * Creates a new HierarchyControllerDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState instance
                             */
                            HierarchyControllerDeploymentState.create = function create(properties) {
                                return new HierarchyControllerDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerDeploymentState} message HierarchyControllerDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hnc != null && Object.hasOwnProperty.call(message, "hnc"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.hnc);
                                if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.extension);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerDeploymentState} message HierarchyControllerDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.hnc = reader.int32();
                                        break;
                                    case 2:
                                        message.extension = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    switch (message.hnc) {
                                    default:
                                        return "hnc: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    switch (message.extension) {
                                    default:
                                        return "extension: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             */
                            HierarchyControllerDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState();
                                switch (object.hnc) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.hnc = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.hnc = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.hnc = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.hnc = 3;
                                    break;
                                }
                                switch (object.extension) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.extension = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.extension = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.extension = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.extension = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState} message HierarchyControllerDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.hnc = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.extension = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    object.hnc = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.hnc] : message.hnc;
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    object.extension = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.extension] : message.extension;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerDeploymentState;
                        })();
    
                        v1alpha.HierarchyControllerVersion = (function() {
    
                            /**
                             * Properties of a HierarchyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IHierarchyControllerVersion
                             * @property {string|null} [hnc] HierarchyControllerVersion hnc
                             * @property {string|null} [extension] HierarchyControllerVersion extension
                             */
    
                            /**
                             * Constructs a new HierarchyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a HierarchyControllerVersion.
                             * @implements IHierarchyControllerVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerVersion=} [properties] Properties to set
                             */
                            function HierarchyControllerVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerVersion hnc.
                             * @member {string} hnc
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @instance
                             */
                            HierarchyControllerVersion.prototype.hnc = "";
    
                            /**
                             * HierarchyControllerVersion extension.
                             * @member {string} extension
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @instance
                             */
                            HierarchyControllerVersion.prototype.extension = "";
    
                            /**
                             * Creates a new HierarchyControllerVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion} HierarchyControllerVersion instance
                             */
                            HierarchyControllerVersion.create = function create(properties) {
                                return new HierarchyControllerVersion(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerVersion} message HierarchyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hnc != null && Object.hasOwnProperty.call(message, "hnc"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.hnc);
                                if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.extension);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerVersion} message HierarchyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion} HierarchyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.hnc = reader.string();
                                        break;
                                    case 2:
                                        message.extension = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion} HierarchyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    if (!$util.isString(message.hnc))
                                        return "hnc: string expected";
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    if (!$util.isString(message.extension))
                                        return "extension: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion} HierarchyControllerVersion
                             */
                            HierarchyControllerVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion();
                                if (object.hnc != null)
                                    message.hnc = String(object.hnc);
                                if (object.extension != null)
                                    message.extension = String(object.extension);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion} message HierarchyControllerVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.hnc = "";
                                    object.extension = "";
                                }
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    object.hnc = message.hnc;
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    object.extension = message.extension;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerVersion;
                        })();
    
                        v1alpha.HierarchyControllerState = (function() {
    
                            /**
                             * Properties of a HierarchyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IHierarchyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerVersion|null} [version] HierarchyControllerState version
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerDeploymentState|null} [state] HierarchyControllerState state
                             */
    
                            /**
                             * Constructs a new HierarchyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a HierarchyControllerState.
                             * @implements IHierarchyControllerState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerState=} [properties] Properties to set
                             */
                            function HierarchyControllerState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerState version.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @instance
                             */
                            HierarchyControllerState.prototype.version = null;
    
                            /**
                             * HierarchyControllerState state.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerDeploymentState|null|undefined} state
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @instance
                             */
                            HierarchyControllerState.prototype.state = null;
    
                            /**
                             * Creates a new HierarchyControllerState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState} HierarchyControllerState instance
                             */
                            HierarchyControllerState.create = function create(properties) {
                                return new HierarchyControllerState(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerState} message HierarchyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.encode(message.state, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IHierarchyControllerState} message HierarchyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState} HierarchyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.state = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState} HierarchyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.state != null && message.hasOwnProperty("state")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.verify(message.state);
                                    if (error)
                                        return "state." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState} HierarchyControllerState
                             */
                            HierarchyControllerState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.fromObject(object.version);
                                }
                                if (object.state != null) {
                                    if (typeof object.state !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState.state: object expected");
                                    message.state = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.fromObject(object.state);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState} message HierarchyControllerState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.state = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerVersion.toObject(message.version, options);
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = $root.google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerDeploymentState.toObject(message.state, options);
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.HierarchyControllerState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerState;
                        })();
    
                        v1alpha.OperatorState = (function() {
    
                            /**
                             * Properties of an OperatorState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IOperatorState
                             * @property {string|null} [version] OperatorState version
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [deploymentState] OperatorState deploymentState
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1alpha.IInstallError>|null} [errors] OperatorState errors
                             */
    
                            /**
                             * Constructs a new OperatorState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents an OperatorState.
                             * @implements IOperatorState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IOperatorState=} [properties] Properties to set
                             */
                            function OperatorState(properties) {
                                this.errors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * OperatorState version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.version = "";
    
                            /**
                             * OperatorState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.deploymentState = 0;
    
                            /**
                             * OperatorState errors.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1alpha.IInstallError>} errors
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.errors = $util.emptyArray;
    
                            /**
                             * Creates a new OperatorState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IOperatorState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.OperatorState} OperatorState instance
                             */
                            OperatorState.create = function create(properties) {
                                return new OperatorState(properties);
                            };
    
                            /**
                             * Encodes the specified OperatorState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.OperatorState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IOperatorState} message OperatorState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperatorState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.deploymentState);
                                if (message.errors != null && message.errors.length)
                                    for (var i = 0; i < message.errors.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError.encode(message.errors[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified OperatorState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.OperatorState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IOperatorState} message OperatorState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperatorState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an OperatorState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.OperatorState} OperatorState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperatorState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = reader.string();
                                        break;
                                    case 2:
                                        message.deploymentState = reader.int32();
                                        break;
                                    case 3:
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.gkehub.configmanagement.v1alpha.InstallError.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an OperatorState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.OperatorState} OperatorState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperatorState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an OperatorState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            OperatorState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    switch (message.deploymentState) {
                                    default:
                                        return "deploymentState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.errors != null && message.hasOwnProperty("errors")) {
                                    if (!Array.isArray(message.errors))
                                        return "errors: array expected";
                                    for (var i = 0; i < message.errors.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError.verify(message.errors[i]);
                                        if (error)
                                            return "errors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an OperatorState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.OperatorState} OperatorState
                             */
                            OperatorState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.OperatorState();
                                if (object.version != null)
                                    message.version = String(object.version);
                                switch (object.deploymentState) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.deploymentState = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.deploymentState = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.deploymentState = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.deploymentState = 3;
                                    break;
                                }
                                if (object.errors) {
                                    if (!Array.isArray(object.errors))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.OperatorState.errors: array expected");
                                    message.errors = [];
                                    for (var i = 0; i < object.errors.length; ++i) {
                                        if (typeof object.errors[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.OperatorState.errors: object expected");
                                        message.errors[i] = $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError.fromObject(object.errors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an OperatorState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.OperatorState} message OperatorState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            OperatorState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errors = [];
                                if (options.defaults) {
                                    object.version = "";
                                    object.deploymentState = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.deploymentState] : message.deploymentState;
                                if (message.errors && message.errors.length) {
                                    object.errors = [];
                                    for (var j = 0; j < message.errors.length; ++j)
                                        object.errors[j] = $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError.toObject(message.errors[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this OperatorState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.OperatorState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            OperatorState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return OperatorState;
                        })();
    
                        v1alpha.InstallError = (function() {
    
                            /**
                             * Properties of an InstallError.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IInstallError
                             * @property {string|null} [errorMessage] InstallError errorMessage
                             */
    
                            /**
                             * Constructs a new InstallError.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents an InstallError.
                             * @implements IInstallError
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IInstallError=} [properties] Properties to set
                             */
                            function InstallError(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InstallError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @instance
                             */
                            InstallError.prototype.errorMessage = "";
    
                            /**
                             * Creates a new InstallError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IInstallError=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.InstallError} InstallError instance
                             */
                            InstallError.create = function create(properties) {
                                return new InstallError(properties);
                            };
    
                            /**
                             * Encodes the specified InstallError message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.InstallError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IInstallError} message InstallError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InstallError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.errorMessage);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InstallError message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.InstallError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IInstallError} message InstallError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InstallError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InstallError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.InstallError} InstallError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InstallError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.errorMessage = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InstallError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.InstallError} InstallError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InstallError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InstallError message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InstallError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an InstallError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.InstallError} InstallError
                             */
                            InstallError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.InstallError();
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InstallError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.InstallError} message InstallError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InstallError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.errorMessage = "";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                return object;
                            };
    
                            /**
                             * Converts this InstallError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.InstallError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InstallError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return InstallError;
                        })();
    
                        v1alpha.ConfigSyncState = (function() {
    
                            /**
                             * Properties of a ConfigSyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IConfigSyncState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncVersion|null} [version] ConfigSyncState version
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncDeploymentState|null} [deploymentState] ConfigSyncState deploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.ISyncState|null} [syncState] ConfigSyncState syncState
                             */
    
                            /**
                             * Constructs a new ConfigSyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a ConfigSyncState.
                             * @implements IConfigSyncState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncState=} [properties] Properties to set
                             */
                            function ConfigSyncState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncState version.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.version = null;
    
                            /**
                             * ConfigSyncState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncDeploymentState|null|undefined} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.deploymentState = null;
    
                            /**
                             * ConfigSyncState syncState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.ISyncState|null|undefined} syncState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.syncState = null;
    
                            /**
                             * Creates a new ConfigSyncState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState} ConfigSyncState instance
                             */
                            ConfigSyncState.create = function create(properties) {
                                return new ConfigSyncState(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncState} message ConfigSyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.encode(message.deploymentState, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.syncState != null && Object.hasOwnProperty.call(message, "syncState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState.encode(message.syncState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncState} message ConfigSyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState} ConfigSyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.syncState = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState} ConfigSyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.verify(message.deploymentState);
                                    if (error)
                                        return "deploymentState." + error;
                                }
                                if (message.syncState != null && message.hasOwnProperty("syncState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState.verify(message.syncState);
                                    if (error)
                                        return "syncState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState} ConfigSyncState
                             */
                            ConfigSyncState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.fromObject(object.version);
                                }
                                if (object.deploymentState != null) {
                                    if (typeof object.deploymentState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.deploymentState: object expected");
                                    message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.fromObject(object.deploymentState);
                                }
                                if (object.syncState != null) {
                                    if (typeof object.syncState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState.syncState: object expected");
                                    message.syncState = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState.fromObject(object.syncState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState} message ConfigSyncState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.deploymentState = null;
                                    object.syncState = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.toObject(message.version, options);
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.toObject(message.deploymentState, options);
                                if (message.syncState != null && message.hasOwnProperty("syncState"))
                                    object.syncState = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState.toObject(message.syncState, options);
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncState;
                        })();
    
                        v1alpha.ConfigSyncVersion = (function() {
    
                            /**
                             * Properties of a ConfigSyncVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IConfigSyncVersion
                             * @property {string|null} [importer] ConfigSyncVersion importer
                             * @property {string|null} [syncer] ConfigSyncVersion syncer
                             * @property {string|null} [gitSync] ConfigSyncVersion gitSync
                             * @property {string|null} [monitor] ConfigSyncVersion monitor
                             * @property {string|null} [reconcilerManager] ConfigSyncVersion reconcilerManager
                             * @property {string|null} [rootReconciler] ConfigSyncVersion rootReconciler
                             */
    
                            /**
                             * Constructs a new ConfigSyncVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a ConfigSyncVersion.
                             * @implements IConfigSyncVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncVersion=} [properties] Properties to set
                             */
                            function ConfigSyncVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncVersion importer.
                             * @member {string} importer
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.importer = "";
    
                            /**
                             * ConfigSyncVersion syncer.
                             * @member {string} syncer
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.syncer = "";
    
                            /**
                             * ConfigSyncVersion gitSync.
                             * @member {string} gitSync
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.gitSync = "";
    
                            /**
                             * ConfigSyncVersion monitor.
                             * @member {string} monitor
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.monitor = "";
    
                            /**
                             * ConfigSyncVersion reconcilerManager.
                             * @member {string} reconcilerManager
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.reconcilerManager = "";
    
                            /**
                             * ConfigSyncVersion rootReconciler.
                             * @member {string} rootReconciler
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.rootReconciler = "";
    
                            /**
                             * Creates a new ConfigSyncVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion} ConfigSyncVersion instance
                             */
                            ConfigSyncVersion.create = function create(properties) {
                                return new ConfigSyncVersion(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncVersion} message ConfigSyncVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importer != null && Object.hasOwnProperty.call(message, "importer"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.importer);
                                if (message.syncer != null && Object.hasOwnProperty.call(message, "syncer"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.syncer);
                                if (message.gitSync != null && Object.hasOwnProperty.call(message, "gitSync"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.gitSync);
                                if (message.monitor != null && Object.hasOwnProperty.call(message, "monitor"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.monitor);
                                if (message.reconcilerManager != null && Object.hasOwnProperty.call(message, "reconcilerManager"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.reconcilerManager);
                                if (message.rootReconciler != null && Object.hasOwnProperty.call(message, "rootReconciler"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.rootReconciler);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncVersion} message ConfigSyncVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion} ConfigSyncVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importer = reader.string();
                                        break;
                                    case 2:
                                        message.syncer = reader.string();
                                        break;
                                    case 3:
                                        message.gitSync = reader.string();
                                        break;
                                    case 4:
                                        message.monitor = reader.string();
                                        break;
                                    case 5:
                                        message.reconcilerManager = reader.string();
                                        break;
                                    case 6:
                                        message.rootReconciler = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion} ConfigSyncVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    if (!$util.isString(message.importer))
                                        return "importer: string expected";
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    if (!$util.isString(message.syncer))
                                        return "syncer: string expected";
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    if (!$util.isString(message.gitSync))
                                        return "gitSync: string expected";
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    if (!$util.isString(message.monitor))
                                        return "monitor: string expected";
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    if (!$util.isString(message.reconcilerManager))
                                        return "reconcilerManager: string expected";
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    if (!$util.isString(message.rootReconciler))
                                        return "rootReconciler: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion} ConfigSyncVersion
                             */
                            ConfigSyncVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion();
                                if (object.importer != null)
                                    message.importer = String(object.importer);
                                if (object.syncer != null)
                                    message.syncer = String(object.syncer);
                                if (object.gitSync != null)
                                    message.gitSync = String(object.gitSync);
                                if (object.monitor != null)
                                    message.monitor = String(object.monitor);
                                if (object.reconcilerManager != null)
                                    message.reconcilerManager = String(object.reconcilerManager);
                                if (object.rootReconciler != null)
                                    message.rootReconciler = String(object.rootReconciler);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion} message ConfigSyncVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importer = "";
                                    object.syncer = "";
                                    object.gitSync = "";
                                    object.monitor = "";
                                    object.reconcilerManager = "";
                                    object.rootReconciler = "";
                                }
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    object.importer = message.importer;
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    object.syncer = message.syncer;
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    object.gitSync = message.gitSync;
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    object.monitor = message.monitor;
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    object.reconcilerManager = message.reconcilerManager;
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    object.rootReconciler = message.rootReconciler;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncVersion;
                        })();
    
                        v1alpha.ConfigSyncDeploymentState = (function() {
    
                            /**
                             * Properties of a ConfigSyncDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IConfigSyncDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [importer] ConfigSyncDeploymentState importer
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [syncer] ConfigSyncDeploymentState syncer
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [gitSync] ConfigSyncDeploymentState gitSync
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [monitor] ConfigSyncDeploymentState monitor
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [reconcilerManager] ConfigSyncDeploymentState reconcilerManager
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [rootReconciler] ConfigSyncDeploymentState rootReconciler
                             */
    
                            /**
                             * Constructs a new ConfigSyncDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a ConfigSyncDeploymentState.
                             * @implements IConfigSyncDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncDeploymentState=} [properties] Properties to set
                             */
                            function ConfigSyncDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncDeploymentState importer.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} importer
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.importer = 0;
    
                            /**
                             * ConfigSyncDeploymentState syncer.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} syncer
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.syncer = 0;
    
                            /**
                             * ConfigSyncDeploymentState gitSync.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} gitSync
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.gitSync = 0;
    
                            /**
                             * ConfigSyncDeploymentState monitor.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} monitor
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.monitor = 0;
    
                            /**
                             * ConfigSyncDeploymentState reconcilerManager.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} reconcilerManager
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.reconcilerManager = 0;
    
                            /**
                             * ConfigSyncDeploymentState rootReconciler.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} rootReconciler
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.rootReconciler = 0;
    
                            /**
                             * Creates a new ConfigSyncDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState} ConfigSyncDeploymentState instance
                             */
                            ConfigSyncDeploymentState.create = function create(properties) {
                                return new ConfigSyncDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncDeploymentState} message ConfigSyncDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importer != null && Object.hasOwnProperty.call(message, "importer"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.importer);
                                if (message.syncer != null && Object.hasOwnProperty.call(message, "syncer"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.syncer);
                                if (message.gitSync != null && Object.hasOwnProperty.call(message, "gitSync"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.gitSync);
                                if (message.monitor != null && Object.hasOwnProperty.call(message, "monitor"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.monitor);
                                if (message.reconcilerManager != null && Object.hasOwnProperty.call(message, "reconcilerManager"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.reconcilerManager);
                                if (message.rootReconciler != null && Object.hasOwnProperty.call(message, "rootReconciler"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.rootReconciler);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IConfigSyncDeploymentState} message ConfigSyncDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importer = reader.int32();
                                        break;
                                    case 2:
                                        message.syncer = reader.int32();
                                        break;
                                    case 3:
                                        message.gitSync = reader.int32();
                                        break;
                                    case 4:
                                        message.monitor = reader.int32();
                                        break;
                                    case 5:
                                        message.reconcilerManager = reader.int32();
                                        break;
                                    case 6:
                                        message.rootReconciler = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    switch (message.importer) {
                                    default:
                                        return "importer: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    switch (message.syncer) {
                                    default:
                                        return "syncer: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    switch (message.gitSync) {
                                    default:
                                        return "gitSync: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    switch (message.monitor) {
                                    default:
                                        return "monitor: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    switch (message.reconcilerManager) {
                                    default:
                                        return "reconcilerManager: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    switch (message.rootReconciler) {
                                    default:
                                        return "rootReconciler: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             */
                            ConfigSyncDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState();
                                switch (object.importer) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.importer = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.importer = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.importer = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.importer = 3;
                                    break;
                                }
                                switch (object.syncer) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.syncer = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.syncer = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.syncer = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.syncer = 3;
                                    break;
                                }
                                switch (object.gitSync) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gitSync = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gitSync = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gitSync = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gitSync = 3;
                                    break;
                                }
                                switch (object.monitor) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.monitor = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.monitor = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.monitor = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.monitor = 3;
                                    break;
                                }
                                switch (object.reconcilerManager) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.reconcilerManager = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.reconcilerManager = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.reconcilerManager = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.reconcilerManager = 3;
                                    break;
                                }
                                switch (object.rootReconciler) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.rootReconciler = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.rootReconciler = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.rootReconciler = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.rootReconciler = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState} message ConfigSyncDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importer = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.syncer = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gitSync = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.monitor = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.reconcilerManager = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.rootReconciler = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    object.importer = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.importer] : message.importer;
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    object.syncer = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.syncer] : message.syncer;
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    object.gitSync = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.gitSync] : message.gitSync;
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    object.monitor = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.monitor] : message.monitor;
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    object.reconcilerManager = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.reconcilerManager] : message.reconcilerManager;
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    object.rootReconciler = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.rootReconciler] : message.rootReconciler;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ConfigSyncDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncDeploymentState;
                        })();
    
                        v1alpha.SyncState = (function() {
    
                            /**
                             * Properties of a SyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface ISyncState
                             * @property {string|null} [sourceToken] SyncState sourceToken
                             * @property {string|null} [importToken] SyncState importToken
                             * @property {string|null} [syncToken] SyncState syncToken
                             * @property {string|null} [lastSync] SyncState lastSync
                             * @property {google.protobuf.ITimestamp|null} [lastSyncTime] SyncState lastSyncTime
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.SyncState.SyncCode|null} [code] SyncState code
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1alpha.ISyncError>|null} [errors] SyncState errors
                             */
    
                            /**
                             * Constructs a new SyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a SyncState.
                             * @implements ISyncState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncState=} [properties] Properties to set
                             */
                            function SyncState(properties) {
                                this.errors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SyncState sourceToken.
                             * @member {string} sourceToken
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.sourceToken = "";
    
                            /**
                             * SyncState importToken.
                             * @member {string} importToken
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.importToken = "";
    
                            /**
                             * SyncState syncToken.
                             * @member {string} syncToken
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.syncToken = "";
    
                            /**
                             * SyncState lastSync.
                             * @member {string} lastSync
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.lastSync = "";
    
                            /**
                             * SyncState lastSyncTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} lastSyncTime
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.lastSyncTime = null;
    
                            /**
                             * SyncState code.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.SyncState.SyncCode} code
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.code = 0;
    
                            /**
                             * SyncState errors.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1alpha.ISyncError>} errors
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             */
                            SyncState.prototype.errors = $util.emptyArray;
    
                            /**
                             * Creates a new SyncState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncState} SyncState instance
                             */
                            SyncState.create = function create(properties) {
                                return new SyncState(properties);
                            };
    
                            /**
                             * Encodes the specified SyncState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.SyncState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncState} message SyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sourceToken != null && Object.hasOwnProperty.call(message, "sourceToken"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourceToken);
                                if (message.importToken != null && Object.hasOwnProperty.call(message, "importToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.importToken);
                                if (message.syncToken != null && Object.hasOwnProperty.call(message, "syncToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.syncToken);
                                if (message.lastSync != null && Object.hasOwnProperty.call(message, "lastSync"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.lastSync);
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.code);
                                if (message.errors != null && message.errors.length)
                                    for (var i = 0; i < message.errors.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError.encode(message.errors[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.lastSyncTime != null && Object.hasOwnProperty.call(message, "lastSyncTime"))
                                    $root.google.protobuf.Timestamp.encode(message.lastSyncTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SyncState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.SyncState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncState} message SyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SyncState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncState} SyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sourceToken = reader.string();
                                        break;
                                    case 2:
                                        message.importToken = reader.string();
                                        break;
                                    case 3:
                                        message.syncToken = reader.string();
                                        break;
                                    case 4:
                                        message.lastSync = reader.string();
                                        break;
                                    case 7:
                                        message.lastSyncTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.code = reader.int32();
                                        break;
                                    case 6:
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.gkehub.configmanagement.v1alpha.SyncError.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SyncState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncState} SyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SyncState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SyncState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                    if (!$util.isString(message.sourceToken))
                                        return "sourceToken: string expected";
                                if (message.importToken != null && message.hasOwnProperty("importToken"))
                                    if (!$util.isString(message.importToken))
                                        return "importToken: string expected";
                                if (message.syncToken != null && message.hasOwnProperty("syncToken"))
                                    if (!$util.isString(message.syncToken))
                                        return "syncToken: string expected";
                                if (message.lastSync != null && message.hasOwnProperty("lastSync"))
                                    if (!$util.isString(message.lastSync))
                                        return "lastSync: string expected";
                                if (message.lastSyncTime != null && message.hasOwnProperty("lastSyncTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.lastSyncTime);
                                    if (error)
                                        return "lastSyncTime." + error;
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    switch (message.code) {
                                    default:
                                        return "code: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.errors != null && message.hasOwnProperty("errors")) {
                                    if (!Array.isArray(message.errors))
                                        return "errors: array expected";
                                    for (var i = 0; i < message.errors.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError.verify(message.errors[i]);
                                        if (error)
                                            return "errors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SyncState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncState} SyncState
                             */
                            SyncState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState();
                                if (object.sourceToken != null)
                                    message.sourceToken = String(object.sourceToken);
                                if (object.importToken != null)
                                    message.importToken = String(object.importToken);
                                if (object.syncToken != null)
                                    message.syncToken = String(object.syncToken);
                                if (object.lastSync != null)
                                    message.lastSync = String(object.lastSync);
                                if (object.lastSyncTime != null) {
                                    if (typeof object.lastSyncTime !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.SyncState.lastSyncTime: object expected");
                                    message.lastSyncTime = $root.google.protobuf.Timestamp.fromObject(object.lastSyncTime);
                                }
                                switch (object.code) {
                                case "SYNC_CODE_UNSPECIFIED":
                                case 0:
                                    message.code = 0;
                                    break;
                                case "SYNCED":
                                case 1:
                                    message.code = 1;
                                    break;
                                case "PENDING":
                                case 2:
                                    message.code = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.code = 3;
                                    break;
                                case "NOT_CONFIGURED":
                                case 4:
                                    message.code = 4;
                                    break;
                                case "NOT_INSTALLED":
                                case 5:
                                    message.code = 5;
                                    break;
                                case "UNAUTHORIZED":
                                case 6:
                                    message.code = 6;
                                    break;
                                case "UNREACHABLE":
                                case 7:
                                    message.code = 7;
                                    break;
                                }
                                if (object.errors) {
                                    if (!Array.isArray(object.errors))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.SyncState.errors: array expected");
                                    message.errors = [];
                                    for (var i = 0; i < object.errors.length; ++i) {
                                        if (typeof object.errors[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.SyncState.errors: object expected");
                                        message.errors[i] = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError.fromObject(object.errors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SyncState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.SyncState} message SyncState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SyncState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errors = [];
                                if (options.defaults) {
                                    object.sourceToken = "";
                                    object.importToken = "";
                                    object.syncToken = "";
                                    object.lastSync = "";
                                    object.code = options.enums === String ? "SYNC_CODE_UNSPECIFIED" : 0;
                                    object.lastSyncTime = null;
                                }
                                if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                    object.sourceToken = message.sourceToken;
                                if (message.importToken != null && message.hasOwnProperty("importToken"))
                                    object.importToken = message.importToken;
                                if (message.syncToken != null && message.hasOwnProperty("syncToken"))
                                    object.syncToken = message.syncToken;
                                if (message.lastSync != null && message.hasOwnProperty("lastSync"))
                                    object.lastSync = message.lastSync;
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.SyncState.SyncCode[message.code] : message.code;
                                if (message.errors && message.errors.length) {
                                    object.errors = [];
                                    for (var j = 0; j < message.errors.length; ++j)
                                        object.errors[j] = $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError.toObject(message.errors[j], options);
                                }
                                if (message.lastSyncTime != null && message.hasOwnProperty("lastSyncTime"))
                                    object.lastSyncTime = $root.google.protobuf.Timestamp.toObject(message.lastSyncTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this SyncState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SyncState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * SyncCode enum.
                             * @name google.cloud.gkehub.configmanagement.v1alpha.SyncState.SyncCode
                             * @enum {number}
                             * @property {number} SYNC_CODE_UNSPECIFIED=0 SYNC_CODE_UNSPECIFIED value
                             * @property {number} SYNCED=1 SYNCED value
                             * @property {number} PENDING=2 PENDING value
                             * @property {number} ERROR=3 ERROR value
                             * @property {number} NOT_CONFIGURED=4 NOT_CONFIGURED value
                             * @property {number} NOT_INSTALLED=5 NOT_INSTALLED value
                             * @property {number} UNAUTHORIZED=6 UNAUTHORIZED value
                             * @property {number} UNREACHABLE=7 UNREACHABLE value
                             */
                            SyncState.SyncCode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "SYNC_CODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SYNCED"] = 1;
                                values[valuesById[2] = "PENDING"] = 2;
                                values[valuesById[3] = "ERROR"] = 3;
                                values[valuesById[4] = "NOT_CONFIGURED"] = 4;
                                values[valuesById[5] = "NOT_INSTALLED"] = 5;
                                values[valuesById[6] = "UNAUTHORIZED"] = 6;
                                values[valuesById[7] = "UNREACHABLE"] = 7;
                                return values;
                            })();
    
                            return SyncState;
                        })();
    
                        v1alpha.SyncError = (function() {
    
                            /**
                             * Properties of a SyncError.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface ISyncError
                             * @property {string|null} [code] SyncError code
                             * @property {string|null} [errorMessage] SyncError errorMessage
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1alpha.IErrorResource>|null} [errorResources] SyncError errorResources
                             */
    
                            /**
                             * Constructs a new SyncError.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a SyncError.
                             * @implements ISyncError
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncError=} [properties] Properties to set
                             */
                            function SyncError(properties) {
                                this.errorResources = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SyncError code.
                             * @member {string} code
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @instance
                             */
                            SyncError.prototype.code = "";
    
                            /**
                             * SyncError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @instance
                             */
                            SyncError.prototype.errorMessage = "";
    
                            /**
                             * SyncError errorResources.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1alpha.IErrorResource>} errorResources
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @instance
                             */
                            SyncError.prototype.errorResources = $util.emptyArray;
    
                            /**
                             * Creates a new SyncError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncError=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncError} SyncError instance
                             */
                            SyncError.create = function create(properties) {
                                return new SyncError(properties);
                            };
    
                            /**
                             * Encodes the specified SyncError message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.SyncError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncError} message SyncError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorMessage);
                                if (message.errorResources != null && message.errorResources.length)
                                    for (var i = 0; i < message.errorResources.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.encode(message.errorResources[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SyncError message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.SyncError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ISyncError} message SyncError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SyncError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncError} SyncError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.code = reader.string();
                                        break;
                                    case 2:
                                        message.errorMessage = reader.string();
                                        break;
                                    case 3:
                                        if (!(message.errorResources && message.errorResources.length))
                                            message.errorResources = [];
                                        message.errorResources.push($root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SyncError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncError} SyncError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SyncError message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SyncError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.code != null && message.hasOwnProperty("code"))
                                    if (!$util.isString(message.code))
                                        return "code: string expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                if (message.errorResources != null && message.hasOwnProperty("errorResources")) {
                                    if (!Array.isArray(message.errorResources))
                                        return "errorResources: array expected";
                                    for (var i = 0; i < message.errorResources.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.verify(message.errorResources[i]);
                                        if (error)
                                            return "errorResources." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SyncError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.SyncError} SyncError
                             */
                            SyncError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.SyncError();
                                if (object.code != null)
                                    message.code = String(object.code);
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                if (object.errorResources) {
                                    if (!Array.isArray(object.errorResources))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.SyncError.errorResources: array expected");
                                    message.errorResources = [];
                                    for (var i = 0; i < object.errorResources.length; ++i) {
                                        if (typeof object.errorResources[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.SyncError.errorResources: object expected");
                                        message.errorResources[i] = $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.fromObject(object.errorResources[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SyncError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.SyncError} message SyncError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SyncError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errorResources = [];
                                if (options.defaults) {
                                    object.code = "";
                                    object.errorMessage = "";
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = message.code;
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                if (message.errorResources && message.errorResources.length) {
                                    object.errorResources = [];
                                    for (var j = 0; j < message.errorResources.length; ++j)
                                        object.errorResources[j] = $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.toObject(message.errorResources[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SyncError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.SyncError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SyncError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SyncError;
                        })();
    
                        v1alpha.ErrorResource = (function() {
    
                            /**
                             * Properties of an ErrorResource.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IErrorResource
                             * @property {string|null} [sourcePath] ErrorResource sourcePath
                             * @property {string|null} [resourceName] ErrorResource resourceName
                             * @property {string|null} [resourceNamespace] ErrorResource resourceNamespace
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IGroupVersionKind|null} [resourceGvk] ErrorResource resourceGvk
                             */
    
                            /**
                             * Constructs a new ErrorResource.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents an ErrorResource.
                             * @implements IErrorResource
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IErrorResource=} [properties] Properties to set
                             */
                            function ErrorResource(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ErrorResource sourcePath.
                             * @member {string} sourcePath
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.sourcePath = "";
    
                            /**
                             * ErrorResource resourceName.
                             * @member {string} resourceName
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceName = "";
    
                            /**
                             * ErrorResource resourceNamespace.
                             * @member {string} resourceNamespace
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceNamespace = "";
    
                            /**
                             * ErrorResource resourceGvk.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IGroupVersionKind|null|undefined} resourceGvk
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceGvk = null;
    
                            /**
                             * Creates a new ErrorResource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IErrorResource=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ErrorResource} ErrorResource instance
                             */
                            ErrorResource.create = function create(properties) {
                                return new ErrorResource(properties);
                            };
    
                            /**
                             * Encodes the specified ErrorResource message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IErrorResource} message ErrorResource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ErrorResource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sourcePath != null && Object.hasOwnProperty.call(message, "sourcePath"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourcePath);
                                if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceName);
                                if (message.resourceNamespace != null && Object.hasOwnProperty.call(message, "resourceNamespace"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.resourceNamespace);
                                if (message.resourceGvk != null && Object.hasOwnProperty.call(message, "resourceGvk"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.encode(message.resourceGvk, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ErrorResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IErrorResource} message ErrorResource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ErrorResource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ErrorResource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ErrorResource} ErrorResource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ErrorResource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sourcePath = reader.string();
                                        break;
                                    case 2:
                                        message.resourceName = reader.string();
                                        break;
                                    case 3:
                                        message.resourceNamespace = reader.string();
                                        break;
                                    case 4:
                                        message.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ErrorResource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ErrorResource} ErrorResource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ErrorResource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ErrorResource message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ErrorResource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    if (!$util.isString(message.sourcePath))
                                        return "sourcePath: string expected";
                                if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                    if (!$util.isString(message.resourceName))
                                        return "resourceName: string expected";
                                if (message.resourceNamespace != null && message.hasOwnProperty("resourceNamespace"))
                                    if (!$util.isString(message.resourceNamespace))
                                        return "resourceNamespace: string expected";
                                if (message.resourceGvk != null && message.hasOwnProperty("resourceGvk")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.verify(message.resourceGvk);
                                    if (error)
                                        return "resourceGvk." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ErrorResource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.ErrorResource} ErrorResource
                             */
                            ErrorResource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.ErrorResource();
                                if (object.sourcePath != null)
                                    message.sourcePath = String(object.sourcePath);
                                if (object.resourceName != null)
                                    message.resourceName = String(object.resourceName);
                                if (object.resourceNamespace != null)
                                    message.resourceNamespace = String(object.resourceNamespace);
                                if (object.resourceGvk != null) {
                                    if (typeof object.resourceGvk !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.ErrorResource.resourceGvk: object expected");
                                    message.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.fromObject(object.resourceGvk);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ErrorResource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.ErrorResource} message ErrorResource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ErrorResource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.sourcePath = "";
                                    object.resourceName = "";
                                    object.resourceNamespace = "";
                                    object.resourceGvk = null;
                                }
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    object.sourcePath = message.sourcePath;
                                if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                    object.resourceName = message.resourceName;
                                if (message.resourceNamespace != null && message.hasOwnProperty("resourceNamespace"))
                                    object.resourceNamespace = message.resourceNamespace;
                                if (message.resourceGvk != null && message.hasOwnProperty("resourceGvk"))
                                    object.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.toObject(message.resourceGvk, options);
                                return object;
                            };
    
                            /**
                             * Converts this ErrorResource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.ErrorResource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ErrorResource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ErrorResource;
                        })();
    
                        v1alpha.GroupVersionKind = (function() {
    
                            /**
                             * Properties of a GroupVersionKind.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IGroupVersionKind
                             * @property {string|null} [group] GroupVersionKind group
                             * @property {string|null} [version] GroupVersionKind version
                             * @property {string|null} [kind] GroupVersionKind kind
                             */
    
                            /**
                             * Constructs a new GroupVersionKind.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a GroupVersionKind.
                             * @implements IGroupVersionKind
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGroupVersionKind=} [properties] Properties to set
                             */
                            function GroupVersionKind(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GroupVersionKind group.
                             * @member {string} group
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.group = "";
    
                            /**
                             * GroupVersionKind version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.version = "";
    
                            /**
                             * GroupVersionKind kind.
                             * @member {string} kind
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.kind = "";
    
                            /**
                             * Creates a new GroupVersionKind instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGroupVersionKind=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind} GroupVersionKind instance
                             */
                            GroupVersionKind.create = function create(properties) {
                                return new GroupVersionKind(properties);
                            };
    
                            /**
                             * Encodes the specified GroupVersionKind message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGroupVersionKind} message GroupVersionKind message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GroupVersionKind.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.group != null && Object.hasOwnProperty.call(message, "group"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.group);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                                if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GroupVersionKind message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGroupVersionKind} message GroupVersionKind message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GroupVersionKind.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GroupVersionKind message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind} GroupVersionKind
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GroupVersionKind.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.group = reader.string();
                                        break;
                                    case 2:
                                        message.version = reader.string();
                                        break;
                                    case 3:
                                        message.kind = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GroupVersionKind message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind} GroupVersionKind
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GroupVersionKind.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GroupVersionKind message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GroupVersionKind.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.group != null && message.hasOwnProperty("group"))
                                    if (!$util.isString(message.group))
                                        return "group: string expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    if (!$util.isString(message.kind))
                                        return "kind: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GroupVersionKind message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind} GroupVersionKind
                             */
                            GroupVersionKind.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind();
                                if (object.group != null)
                                    message.group = String(object.group);
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.kind != null)
                                    message.kind = String(object.kind);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GroupVersionKind message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind} message GroupVersionKind
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GroupVersionKind.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.group = "";
                                    object.version = "";
                                    object.kind = "";
                                }
                                if (message.group != null && message.hasOwnProperty("group"))
                                    object.group = message.group;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    object.kind = message.kind;
                                return object;
                            };
    
                            /**
                             * Converts this GroupVersionKind to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GroupVersionKind
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GroupVersionKind.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GroupVersionKind;
                        })();
    
                        v1alpha.PolicyControllerState = (function() {
    
                            /**
                             * Properties of a PolicyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IPolicyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerVersion|null} [version] PolicyControllerState version
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IGatekeeperDeploymentState|null} [deploymentState] PolicyControllerState deploymentState
                             */
    
                            /**
                             * Constructs a new PolicyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a PolicyControllerState.
                             * @implements IPolicyControllerState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerState=} [properties] Properties to set
                             */
                            function PolicyControllerState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyControllerState version.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @instance
                             */
                            PolicyControllerState.prototype.version = null;
    
                            /**
                             * PolicyControllerState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IGatekeeperDeploymentState|null|undefined} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @instance
                             */
                            PolicyControllerState.prototype.deploymentState = null;
    
                            /**
                             * Creates a new PolicyControllerState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState} PolicyControllerState instance
                             */
                            PolicyControllerState.create = function create(properties) {
                                return new PolicyControllerState(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyControllerState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerState} message PolicyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.encode(message.deploymentState, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyControllerState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerState} message PolicyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyControllerState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState} PolicyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyControllerState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState} PolicyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyControllerState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyControllerState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.verify(message.deploymentState);
                                    if (error)
                                        return "deploymentState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PolicyControllerState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState} PolicyControllerState
                             */
                            PolicyControllerState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.fromObject(object.version);
                                }
                                if (object.deploymentState != null) {
                                    if (typeof object.deploymentState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState.deploymentState: object expected");
                                    message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.fromObject(object.deploymentState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyControllerState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState} message PolicyControllerState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyControllerState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.deploymentState = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.toObject(message.version, options);
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.toObject(message.deploymentState, options);
                                return object;
                            };
    
                            /**
                             * Converts this PolicyControllerState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyControllerState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyControllerState;
                        })();
    
                        v1alpha.PolicyControllerVersion = (function() {
    
                            /**
                             * Properties of a PolicyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IPolicyControllerVersion
                             * @property {string|null} [version] PolicyControllerVersion version
                             */
    
                            /**
                             * Constructs a new PolicyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a PolicyControllerVersion.
                             * @implements IPolicyControllerVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerVersion=} [properties] Properties to set
                             */
                            function PolicyControllerVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyControllerVersion version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @instance
                             */
                            PolicyControllerVersion.prototype.version = "";
    
                            /**
                             * Creates a new PolicyControllerVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion} PolicyControllerVersion instance
                             */
                            PolicyControllerVersion.create = function create(properties) {
                                return new PolicyControllerVersion(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyControllerVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerVersion} message PolicyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyControllerVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IPolicyControllerVersion} message PolicyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyControllerVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion} PolicyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyControllerVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion} PolicyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyControllerVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyControllerVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a PolicyControllerVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion} PolicyControllerVersion
                             */
                            PolicyControllerVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyControllerVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion} message PolicyControllerVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyControllerVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.version = "";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this PolicyControllerVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.PolicyControllerVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyControllerVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyControllerVersion;
                        })();
    
                        v1alpha.BinauthzState = (function() {
    
                            /**
                             * Properties of a BinauthzState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IBinauthzState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [webhook] BinauthzState webhook
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzVersion|null} [version] BinauthzState version
                             */
    
                            /**
                             * Constructs a new BinauthzState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a BinauthzState.
                             * @implements IBinauthzState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzState=} [properties] Properties to set
                             */
                            function BinauthzState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BinauthzState webhook.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} webhook
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @instance
                             */
                            BinauthzState.prototype.webhook = 0;
    
                            /**
                             * BinauthzState version.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @instance
                             */
                            BinauthzState.prototype.version = null;
    
                            /**
                             * Creates a new BinauthzState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzState} BinauthzState instance
                             */
                            BinauthzState.create = function create(properties) {
                                return new BinauthzState(properties);
                            };
    
                            /**
                             * Encodes the specified BinauthzState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzState} message BinauthzState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.webhook != null && Object.hasOwnProperty.call(message, "webhook"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.webhook);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.encode(message.version, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BinauthzState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzState} message BinauthzState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BinauthzState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzState} BinauthzState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.webhook = reader.int32();
                                        break;
                                    case 2:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BinauthzState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzState} BinauthzState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BinauthzState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BinauthzState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.webhook != null && message.hasOwnProperty("webhook"))
                                    switch (message.webhook) {
                                    default:
                                        return "webhook: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BinauthzState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzState} BinauthzState
                             */
                            BinauthzState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzState();
                                switch (object.webhook) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.webhook = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.webhook = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.webhook = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.webhook = 3;
                                    break;
                                }
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1alpha.BinauthzState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.fromObject(object.version);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BinauthzState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.BinauthzState} message BinauthzState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BinauthzState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.webhook = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.version = null;
                                }
                                if (message.webhook != null && message.hasOwnProperty("webhook"))
                                    object.webhook = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.webhook] : message.webhook;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.toObject(message.version, options);
                                return object;
                            };
    
                            /**
                             * Converts this BinauthzState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BinauthzState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return BinauthzState;
                        })();
    
                        v1alpha.BinauthzVersion = (function() {
    
                            /**
                             * Properties of a BinauthzVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IBinauthzVersion
                             * @property {string|null} [webhookVersion] BinauthzVersion webhookVersion
                             */
    
                            /**
                             * Constructs a new BinauthzVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a BinauthzVersion.
                             * @implements IBinauthzVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzVersion=} [properties] Properties to set
                             */
                            function BinauthzVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BinauthzVersion webhookVersion.
                             * @member {string} webhookVersion
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @instance
                             */
                            BinauthzVersion.prototype.webhookVersion = "";
    
                            /**
                             * Creates a new BinauthzVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion} BinauthzVersion instance
                             */
                            BinauthzVersion.create = function create(properties) {
                                return new BinauthzVersion(properties);
                            };
    
                            /**
                             * Encodes the specified BinauthzVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzVersion} message BinauthzVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.webhookVersion != null && Object.hasOwnProperty.call(message, "webhookVersion"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.webhookVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BinauthzVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IBinauthzVersion} message BinauthzVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BinauthzVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion} BinauthzVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.webhookVersion = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BinauthzVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion} BinauthzVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BinauthzVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BinauthzVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.webhookVersion != null && message.hasOwnProperty("webhookVersion"))
                                    if (!$util.isString(message.webhookVersion))
                                        return "webhookVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a BinauthzVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion} BinauthzVersion
                             */
                            BinauthzVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion();
                                if (object.webhookVersion != null)
                                    message.webhookVersion = String(object.webhookVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BinauthzVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion} message BinauthzVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BinauthzVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.webhookVersion = "";
                                if (message.webhookVersion != null && message.hasOwnProperty("webhookVersion"))
                                    object.webhookVersion = message.webhookVersion;
                                return object;
                            };
    
                            /**
                             * Converts this BinauthzVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.BinauthzVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BinauthzVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return BinauthzVersion;
                        })();
    
                        v1alpha.GatekeeperDeploymentState = (function() {
    
                            /**
                             * Properties of a GatekeeperDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @interface IGatekeeperDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [gatekeeperControllerManagerState] GatekeeperDeploymentState gatekeeperControllerManagerState
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [gatekeeperAudit] GatekeeperDeploymentState gatekeeperAudit
                             * @property {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState|null} [gatekeeperMutation] GatekeeperDeploymentState gatekeeperMutation
                             */
    
                            /**
                             * Constructs a new GatekeeperDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha
                             * @classdesc Represents a GatekeeperDeploymentState.
                             * @implements IGatekeeperDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGatekeeperDeploymentState=} [properties] Properties to set
                             */
                            function GatekeeperDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GatekeeperDeploymentState gatekeeperControllerManagerState.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} gatekeeperControllerManagerState
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperControllerManagerState = 0;
    
                            /**
                             * GatekeeperDeploymentState gatekeeperAudit.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} gatekeeperAudit
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperAudit = 0;
    
                            /**
                             * GatekeeperDeploymentState gatekeeperMutation.
                             * @member {google.cloud.gkehub.configmanagement.v1alpha.DeploymentState} gatekeeperMutation
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperMutation = 0;
    
                            /**
                             * Creates a new GatekeeperDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGatekeeperDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState} GatekeeperDeploymentState instance
                             */
                            GatekeeperDeploymentState.create = function create(properties) {
                                return new GatekeeperDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified GatekeeperDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGatekeeperDeploymentState} message GatekeeperDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatekeeperDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.gatekeeperControllerManagerState != null && Object.hasOwnProperty.call(message, "gatekeeperControllerManagerState"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.gatekeeperControllerManagerState);
                                if (message.gatekeeperAudit != null && Object.hasOwnProperty.call(message, "gatekeeperAudit"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.gatekeeperAudit);
                                if (message.gatekeeperMutation != null && Object.hasOwnProperty.call(message, "gatekeeperMutation"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.gatekeeperMutation);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GatekeeperDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.IGatekeeperDeploymentState} message GatekeeperDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatekeeperDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GatekeeperDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState} GatekeeperDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatekeeperDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.gatekeeperControllerManagerState = reader.int32();
                                        break;
                                    case 2:
                                        message.gatekeeperAudit = reader.int32();
                                        break;
                                    case 3:
                                        message.gatekeeperMutation = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GatekeeperDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState} GatekeeperDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatekeeperDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GatekeeperDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GatekeeperDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.gatekeeperControllerManagerState != null && message.hasOwnProperty("gatekeeperControllerManagerState"))
                                    switch (message.gatekeeperControllerManagerState) {
                                    default:
                                        return "gatekeeperControllerManagerState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gatekeeperAudit != null && message.hasOwnProperty("gatekeeperAudit"))
                                    switch (message.gatekeeperAudit) {
                                    default:
                                        return "gatekeeperAudit: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gatekeeperMutation != null && message.hasOwnProperty("gatekeeperMutation"))
                                    switch (message.gatekeeperMutation) {
                                    default:
                                        return "gatekeeperMutation: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a GatekeeperDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState} GatekeeperDeploymentState
                             */
                            GatekeeperDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState();
                                switch (object.gatekeeperControllerManagerState) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperControllerManagerState = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperControllerManagerState = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperControllerManagerState = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperControllerManagerState = 3;
                                    break;
                                }
                                switch (object.gatekeeperAudit) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperAudit = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperAudit = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperAudit = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperAudit = 3;
                                    break;
                                }
                                switch (object.gatekeeperMutation) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperMutation = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperMutation = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperMutation = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperMutation = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GatekeeperDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState} message GatekeeperDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GatekeeperDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.gatekeeperControllerManagerState = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gatekeeperAudit = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gatekeeperMutation = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.gatekeeperControllerManagerState != null && message.hasOwnProperty("gatekeeperControllerManagerState"))
                                    object.gatekeeperControllerManagerState = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.gatekeeperControllerManagerState] : message.gatekeeperControllerManagerState;
                                if (message.gatekeeperAudit != null && message.hasOwnProperty("gatekeeperAudit"))
                                    object.gatekeeperAudit = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.gatekeeperAudit] : message.gatekeeperAudit;
                                if (message.gatekeeperMutation != null && message.hasOwnProperty("gatekeeperMutation"))
                                    object.gatekeeperMutation = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1alpha.DeploymentState[message.gatekeeperMutation] : message.gatekeeperMutation;
                                return object;
                            };
    
                            /**
                             * Converts this GatekeeperDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1alpha.GatekeeperDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GatekeeperDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GatekeeperDeploymentState;
                        })();
    
                        return v1alpha;
                    })();
    
                    configmanagement.v1beta = (function() {
    
                        /**
                         * Namespace v1beta.
                         * @memberof google.cloud.gkehub.configmanagement
                         * @namespace
                         */
                        var v1beta = {};
    
                        /**
                         * DeploymentState enum.
                         * @name google.cloud.gkehub.configmanagement.v1beta.DeploymentState
                         * @enum {number}
                         * @property {number} DEPLOYMENT_STATE_UNSPECIFIED=0 DEPLOYMENT_STATE_UNSPECIFIED value
                         * @property {number} NOT_INSTALLED=1 NOT_INSTALLED value
                         * @property {number} INSTALLED=2 INSTALLED value
                         * @property {number} ERROR=3 ERROR value
                         */
                        v1beta.DeploymentState = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "DEPLOYMENT_STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "NOT_INSTALLED"] = 1;
                            values[valuesById[2] = "INSTALLED"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            return values;
                        })();
    
                        v1beta.MembershipState = (function() {
    
                            /**
                             * Properties of a MembershipState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IMembershipState
                             * @property {string|null} [clusterName] MembershipState clusterName
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec|null} [membershipSpec] MembershipState membershipSpec
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IOperatorState|null} [operatorState] MembershipState operatorState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncState|null} [configSyncState] MembershipState configSyncState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerState|null} [policyControllerState] MembershipState policyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IBinauthzState|null} [binauthzState] MembershipState binauthzState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerState|null} [hierarchyControllerState] MembershipState hierarchyControllerState
                             */
    
                            /**
                             * Constructs a new MembershipState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a MembershipState.
                             * @implements IMembershipState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipState=} [properties] Properties to set
                             */
                            function MembershipState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipState clusterName.
                             * @member {string} clusterName
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.clusterName = "";
    
                            /**
                             * MembershipState membershipSpec.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec|null|undefined} membershipSpec
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.membershipSpec = null;
    
                            /**
                             * MembershipState operatorState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IOperatorState|null|undefined} operatorState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.operatorState = null;
    
                            /**
                             * MembershipState configSyncState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncState|null|undefined} configSyncState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.configSyncState = null;
    
                            /**
                             * MembershipState policyControllerState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerState|null|undefined} policyControllerState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.policyControllerState = null;
    
                            /**
                             * MembershipState binauthzState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IBinauthzState|null|undefined} binauthzState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.binauthzState = null;
    
                            /**
                             * MembershipState hierarchyControllerState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerState|null|undefined} hierarchyControllerState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.hierarchyControllerState = null;
    
                            /**
                             * Creates a new MembershipState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipState} MembershipState instance
                             */
                            MembershipState.create = function create(properties) {
                                return new MembershipState(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.MembershipState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.clusterName != null && Object.hasOwnProperty.call(message, "clusterName"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.clusterName);
                                if (message.membershipSpec != null && Object.hasOwnProperty.call(message, "membershipSpec"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.encode(message.membershipSpec, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.operatorState != null && Object.hasOwnProperty.call(message, "operatorState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState.encode(message.operatorState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.configSyncState != null && Object.hasOwnProperty.call(message, "configSyncState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.encode(message.configSyncState, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.policyControllerState != null && Object.hasOwnProperty.call(message, "policyControllerState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.encode(message.policyControllerState, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                                if (message.binauthzState != null && Object.hasOwnProperty.call(message, "binauthzState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.encode(message.binauthzState, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.hierarchyControllerState != null && Object.hasOwnProperty.call(message, "hierarchyControllerState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.encode(message.hierarchyControllerState, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.MembershipState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.clusterName = reader.string();
                                        break;
                                    case 2:
                                        message.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.operatorState = $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.configSyncState = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.decode(reader, reader.uint32());
                                        break;
                                    case 6:
                                        message.binauthzState = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.decode(reader, reader.uint32());
                                        break;
                                    case 7:
                                        message.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                    if (!$util.isString(message.clusterName))
                                        return "clusterName: string expected";
                                if (message.membershipSpec != null && message.hasOwnProperty("membershipSpec")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.verify(message.membershipSpec);
                                    if (error)
                                        return "membershipSpec." + error;
                                }
                                if (message.operatorState != null && message.hasOwnProperty("operatorState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState.verify(message.operatorState);
                                    if (error)
                                        return "operatorState." + error;
                                }
                                if (message.configSyncState != null && message.hasOwnProperty("configSyncState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.verify(message.configSyncState);
                                    if (error)
                                        return "configSyncState." + error;
                                }
                                if (message.policyControllerState != null && message.hasOwnProperty("policyControllerState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.verify(message.policyControllerState);
                                    if (error)
                                        return "policyControllerState." + error;
                                }
                                if (message.binauthzState != null && message.hasOwnProperty("binauthzState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.verify(message.binauthzState);
                                    if (error)
                                        return "binauthzState." + error;
                                }
                                if (message.hierarchyControllerState != null && message.hasOwnProperty("hierarchyControllerState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.verify(message.hierarchyControllerState);
                                    if (error)
                                        return "hierarchyControllerState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipState} MembershipState
                             */
                            MembershipState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState();
                                if (object.clusterName != null)
                                    message.clusterName = String(object.clusterName);
                                if (object.membershipSpec != null) {
                                    if (typeof object.membershipSpec !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipState.membershipSpec: object expected");
                                    message.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.fromObject(object.membershipSpec);
                                }
                                if (object.operatorState != null) {
                                    if (typeof object.operatorState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipState.operatorState: object expected");
                                    message.operatorState = $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState.fromObject(object.operatorState);
                                }
                                if (object.configSyncState != null) {
                                    if (typeof object.configSyncState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipState.configSyncState: object expected");
                                    message.configSyncState = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.fromObject(object.configSyncState);
                                }
                                if (object.policyControllerState != null) {
                                    if (typeof object.policyControllerState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipState.policyControllerState: object expected");
                                    message.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.fromObject(object.policyControllerState);
                                }
                                if (object.binauthzState != null) {
                                    if (typeof object.binauthzState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipState.binauthzState: object expected");
                                    message.binauthzState = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.fromObject(object.binauthzState);
                                }
                                if (object.hierarchyControllerState != null) {
                                    if (typeof object.hierarchyControllerState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipState.hierarchyControllerState: object expected");
                                    message.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.fromObject(object.hierarchyControllerState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.MembershipState} message MembershipState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.clusterName = "";
                                    object.membershipSpec = null;
                                    object.operatorState = null;
                                    object.configSyncState = null;
                                    object.policyControllerState = null;
                                    object.binauthzState = null;
                                    object.hierarchyControllerState = null;
                                }
                                if (message.clusterName != null && message.hasOwnProperty("clusterName"))
                                    object.clusterName = message.clusterName;
                                if (message.membershipSpec != null && message.hasOwnProperty("membershipSpec"))
                                    object.membershipSpec = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.toObject(message.membershipSpec, options);
                                if (message.operatorState != null && message.hasOwnProperty("operatorState"))
                                    object.operatorState = $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState.toObject(message.operatorState, options);
                                if (message.configSyncState != null && message.hasOwnProperty("configSyncState"))
                                    object.configSyncState = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.toObject(message.configSyncState, options);
                                if (message.policyControllerState != null && message.hasOwnProperty("policyControllerState"))
                                    object.policyControllerState = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.toObject(message.policyControllerState, options);
                                if (message.binauthzState != null && message.hasOwnProperty("binauthzState"))
                                    object.binauthzState = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState.toObject(message.binauthzState, options);
                                if (message.hierarchyControllerState != null && message.hasOwnProperty("hierarchyControllerState"))
                                    object.hierarchyControllerState = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.toObject(message.hierarchyControllerState, options);
                                return object;
                            };
    
                            /**
                             * Converts this MembershipState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipState;
                        })();
    
                        v1beta.MembershipSpec = (function() {
    
                            /**
                             * Properties of a MembershipSpec.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IMembershipSpec
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IConfigSync|null} [configSync] MembershipSpec configSync
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IPolicyController|null} [policyController] MembershipSpec policyController
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IBinauthzConfig|null} [binauthz] MembershipSpec binauthz
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerConfig|null} [hierarchyController] MembershipSpec hierarchyController
                             * @property {string|null} [version] MembershipSpec version
                             */
    
                            /**
                             * Constructs a new MembershipSpec.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a MembershipSpec.
                             * @implements IMembershipSpec
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec=} [properties] Properties to set
                             */
                            function MembershipSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipSpec configSync.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IConfigSync|null|undefined} configSync
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.configSync = null;
    
                            /**
                             * MembershipSpec policyController.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IPolicyController|null|undefined} policyController
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.policyController = null;
    
                            /**
                             * MembershipSpec binauthz.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IBinauthzConfig|null|undefined} binauthz
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.binauthz = null;
    
                            /**
                             * MembershipSpec hierarchyController.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerConfig|null|undefined} hierarchyController
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.hierarchyController = null;
    
                            /**
                             * MembershipSpec version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @instance
                             */
                            MembershipSpec.prototype.version = "";
    
                            /**
                             * Creates a new MembershipSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipSpec} MembershipSpec instance
                             */
                            MembershipSpec.create = function create(properties) {
                                return new MembershipSpec(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipSpec message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec} message MembershipSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.configSync != null && Object.hasOwnProperty.call(message, "configSync"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync.encode(message.configSync, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.policyController != null && Object.hasOwnProperty.call(message, "policyController"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController.encode(message.policyController, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.binauthz != null && Object.hasOwnProperty.call(message, "binauthz"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.encode(message.binauthz, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                if (message.hierarchyController != null && Object.hasOwnProperty.call(message, "hierarchyController"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.encode(message.hierarchyController, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 10, wireType 2 =*/82).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec} message MembershipSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipSpec} MembershipSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.configSync = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.policyController = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.binauthz = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.decode(reader, reader.uint32());
                                        break;
                                    case 4:
                                        message.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.decode(reader, reader.uint32());
                                        break;
                                    case 10:
                                        message.version = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipSpec} MembershipSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.configSync != null && message.hasOwnProperty("configSync")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync.verify(message.configSync);
                                    if (error)
                                        return "configSync." + error;
                                }
                                if (message.policyController != null && message.hasOwnProperty("policyController")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController.verify(message.policyController);
                                    if (error)
                                        return "policyController." + error;
                                }
                                if (message.binauthz != null && message.hasOwnProperty("binauthz")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.verify(message.binauthz);
                                    if (error)
                                        return "binauthz." + error;
                                }
                                if (message.hierarchyController != null && message.hasOwnProperty("hierarchyController")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.verify(message.hierarchyController);
                                    if (error)
                                        return "hierarchyController." + error;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a MembershipSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.MembershipSpec} MembershipSpec
                             */
                            MembershipSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec();
                                if (object.configSync != null) {
                                    if (typeof object.configSync !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.configSync: object expected");
                                    message.configSync = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync.fromObject(object.configSync);
                                }
                                if (object.policyController != null) {
                                    if (typeof object.policyController !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.policyController: object expected");
                                    message.policyController = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController.fromObject(object.policyController);
                                }
                                if (object.binauthz != null) {
                                    if (typeof object.binauthz !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.binauthz: object expected");
                                    message.binauthz = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.fromObject(object.binauthz);
                                }
                                if (object.hierarchyController != null) {
                                    if (typeof object.hierarchyController !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.hierarchyController: object expected");
                                    message.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.fromObject(object.hierarchyController);
                                }
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.MembershipSpec} message MembershipSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.configSync = null;
                                    object.policyController = null;
                                    object.binauthz = null;
                                    object.hierarchyController = null;
                                    object.version = "";
                                }
                                if (message.configSync != null && message.hasOwnProperty("configSync"))
                                    object.configSync = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync.toObject(message.configSync, options);
                                if (message.policyController != null && message.hasOwnProperty("policyController"))
                                    object.policyController = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController.toObject(message.policyController, options);
                                if (message.binauthz != null && message.hasOwnProperty("binauthz"))
                                    object.binauthz = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.toObject(message.binauthz, options);
                                if (message.hierarchyController != null && message.hasOwnProperty("hierarchyController"))
                                    object.hierarchyController = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.toObject(message.hierarchyController, options);
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this MembershipSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.MembershipSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipSpec;
                        })();
    
                        v1beta.ConfigSync = (function() {
    
                            /**
                             * Properties of a ConfigSync.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IConfigSync
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IGitConfig|null} [git] ConfigSync git
                             * @property {string|null} [sourceFormat] ConfigSync sourceFormat
                             */
    
                            /**
                             * Constructs a new ConfigSync.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a ConfigSync.
                             * @implements IConfigSync
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSync=} [properties] Properties to set
                             */
                            function ConfigSync(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSync git.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IGitConfig|null|undefined} git
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @instance
                             */
                            ConfigSync.prototype.git = null;
    
                            /**
                             * ConfigSync sourceFormat.
                             * @member {string} sourceFormat
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @instance
                             */
                            ConfigSync.prototype.sourceFormat = "";
    
                            /**
                             * Creates a new ConfigSync instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSync=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSync} ConfigSync instance
                             */
                            ConfigSync.create = function create(properties) {
                                return new ConfigSync(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSync message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSync.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSync} message ConfigSync message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSync.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.git != null && Object.hasOwnProperty.call(message, "git"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig.encode(message.git, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                if (message.sourceFormat != null && Object.hasOwnProperty.call(message, "sourceFormat"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.sourceFormat);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSync message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSync.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSync} message ConfigSync message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSync.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSync message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSync} ConfigSync
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSync.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 7:
                                        message.git = $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig.decode(reader, reader.uint32());
                                        break;
                                    case 8:
                                        message.sourceFormat = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSync message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSync} ConfigSync
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSync.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSync message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSync.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.git != null && message.hasOwnProperty("git")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig.verify(message.git);
                                    if (error)
                                        return "git." + error;
                                }
                                if (message.sourceFormat != null && message.hasOwnProperty("sourceFormat"))
                                    if (!$util.isString(message.sourceFormat))
                                        return "sourceFormat: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSync message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSync} ConfigSync
                             */
                            ConfigSync.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSync();
                                if (object.git != null) {
                                    if (typeof object.git !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.ConfigSync.git: object expected");
                                    message.git = $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig.fromObject(object.git);
                                }
                                if (object.sourceFormat != null)
                                    message.sourceFormat = String(object.sourceFormat);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSync message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ConfigSync} message ConfigSync
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSync.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.git = null;
                                    object.sourceFormat = "";
                                }
                                if (message.git != null && message.hasOwnProperty("git"))
                                    object.git = $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig.toObject(message.git, options);
                                if (message.sourceFormat != null && message.hasOwnProperty("sourceFormat"))
                                    object.sourceFormat = message.sourceFormat;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSync to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSync
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSync.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSync;
                        })();
    
                        v1beta.GitConfig = (function() {
    
                            /**
                             * Properties of a GitConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IGitConfig
                             * @property {string|null} [syncRepo] GitConfig syncRepo
                             * @property {string|null} [syncBranch] GitConfig syncBranch
                             * @property {string|null} [policyDir] GitConfig policyDir
                             * @property {number|Long|null} [syncWaitSecs] GitConfig syncWaitSecs
                             * @property {string|null} [syncRev] GitConfig syncRev
                             * @property {string|null} [secretType] GitConfig secretType
                             * @property {string|null} [httpsProxy] GitConfig httpsProxy
                             * @property {string|null} [gcpServiceAccountEmail] GitConfig gcpServiceAccountEmail
                             */
    
                            /**
                             * Constructs a new GitConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a GitConfig.
                             * @implements IGitConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGitConfig=} [properties] Properties to set
                             */
                            function GitConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GitConfig syncRepo.
                             * @member {string} syncRepo
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncRepo = "";
    
                            /**
                             * GitConfig syncBranch.
                             * @member {string} syncBranch
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncBranch = "";
    
                            /**
                             * GitConfig policyDir.
                             * @member {string} policyDir
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.policyDir = "";
    
                            /**
                             * GitConfig syncWaitSecs.
                             * @member {number|Long} syncWaitSecs
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncWaitSecs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;
    
                            /**
                             * GitConfig syncRev.
                             * @member {string} syncRev
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.syncRev = "";
    
                            /**
                             * GitConfig secretType.
                             * @member {string} secretType
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.secretType = "";
    
                            /**
                             * GitConfig httpsProxy.
                             * @member {string} httpsProxy
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.httpsProxy = "";
    
                            /**
                             * GitConfig gcpServiceAccountEmail.
                             * @member {string} gcpServiceAccountEmail
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             */
                            GitConfig.prototype.gcpServiceAccountEmail = "";
    
                            /**
                             * Creates a new GitConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGitConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GitConfig} GitConfig instance
                             */
                            GitConfig.create = function create(properties) {
                                return new GitConfig(properties);
                            };
    
                            /**
                             * Encodes the specified GitConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.GitConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGitConfig} message GitConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.syncRepo != null && Object.hasOwnProperty.call(message, "syncRepo"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.syncRepo);
                                if (message.syncBranch != null && Object.hasOwnProperty.call(message, "syncBranch"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.syncBranch);
                                if (message.policyDir != null && Object.hasOwnProperty.call(message, "policyDir"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.policyDir);
                                if (message.syncWaitSecs != null && Object.hasOwnProperty.call(message, "syncWaitSecs"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int64(message.syncWaitSecs);
                                if (message.syncRev != null && Object.hasOwnProperty.call(message, "syncRev"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.syncRev);
                                if (message.secretType != null && Object.hasOwnProperty.call(message, "secretType"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.secretType);
                                if (message.httpsProxy != null && Object.hasOwnProperty.call(message, "httpsProxy"))
                                    writer.uint32(/* id 7, wireType 2 =*/58).string(message.httpsProxy);
                                if (message.gcpServiceAccountEmail != null && Object.hasOwnProperty.call(message, "gcpServiceAccountEmail"))
                                    writer.uint32(/* id 8, wireType 2 =*/66).string(message.gcpServiceAccountEmail);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GitConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.GitConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGitConfig} message GitConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GitConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GitConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GitConfig} GitConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.syncRepo = reader.string();
                                        break;
                                    case 2:
                                        message.syncBranch = reader.string();
                                        break;
                                    case 3:
                                        message.policyDir = reader.string();
                                        break;
                                    case 4:
                                        message.syncWaitSecs = reader.int64();
                                        break;
                                    case 5:
                                        message.syncRev = reader.string();
                                        break;
                                    case 6:
                                        message.secretType = reader.string();
                                        break;
                                    case 7:
                                        message.httpsProxy = reader.string();
                                        break;
                                    case 8:
                                        message.gcpServiceAccountEmail = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GitConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GitConfig} GitConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GitConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GitConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GitConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.syncRepo != null && message.hasOwnProperty("syncRepo"))
                                    if (!$util.isString(message.syncRepo))
                                        return "syncRepo: string expected";
                                if (message.syncBranch != null && message.hasOwnProperty("syncBranch"))
                                    if (!$util.isString(message.syncBranch))
                                        return "syncBranch: string expected";
                                if (message.policyDir != null && message.hasOwnProperty("policyDir"))
                                    if (!$util.isString(message.policyDir))
                                        return "policyDir: string expected";
                                if (message.syncWaitSecs != null && message.hasOwnProperty("syncWaitSecs"))
                                    if (!$util.isInteger(message.syncWaitSecs) && !(message.syncWaitSecs && $util.isInteger(message.syncWaitSecs.low) && $util.isInteger(message.syncWaitSecs.high)))
                                        return "syncWaitSecs: integer|Long expected";
                                if (message.syncRev != null && message.hasOwnProperty("syncRev"))
                                    if (!$util.isString(message.syncRev))
                                        return "syncRev: string expected";
                                if (message.secretType != null && message.hasOwnProperty("secretType"))
                                    if (!$util.isString(message.secretType))
                                        return "secretType: string expected";
                                if (message.httpsProxy != null && message.hasOwnProperty("httpsProxy"))
                                    if (!$util.isString(message.httpsProxy))
                                        return "httpsProxy: string expected";
                                if (message.gcpServiceAccountEmail != null && message.hasOwnProperty("gcpServiceAccountEmail"))
                                    if (!$util.isString(message.gcpServiceAccountEmail))
                                        return "gcpServiceAccountEmail: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GitConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GitConfig} GitConfig
                             */
                            GitConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.GitConfig();
                                if (object.syncRepo != null)
                                    message.syncRepo = String(object.syncRepo);
                                if (object.syncBranch != null)
                                    message.syncBranch = String(object.syncBranch);
                                if (object.policyDir != null)
                                    message.policyDir = String(object.policyDir);
                                if (object.syncWaitSecs != null)
                                    if ($util.Long)
                                        (message.syncWaitSecs = $util.Long.fromValue(object.syncWaitSecs)).unsigned = false;
                                    else if (typeof object.syncWaitSecs === "string")
                                        message.syncWaitSecs = parseInt(object.syncWaitSecs, 10);
                                    else if (typeof object.syncWaitSecs === "number")
                                        message.syncWaitSecs = object.syncWaitSecs;
                                    else if (typeof object.syncWaitSecs === "object")
                                        message.syncWaitSecs = new $util.LongBits(object.syncWaitSecs.low >>> 0, object.syncWaitSecs.high >>> 0).toNumber();
                                if (object.syncRev != null)
                                    message.syncRev = String(object.syncRev);
                                if (object.secretType != null)
                                    message.secretType = String(object.secretType);
                                if (object.httpsProxy != null)
                                    message.httpsProxy = String(object.httpsProxy);
                                if (object.gcpServiceAccountEmail != null)
                                    message.gcpServiceAccountEmail = String(object.gcpServiceAccountEmail);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GitConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.GitConfig} message GitConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GitConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.syncRepo = "";
                                    object.syncBranch = "";
                                    object.policyDir = "";
                                    if ($util.Long) {
                                        var long = new $util.Long(0, 0, false);
                                        object.syncWaitSecs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                    } else
                                        object.syncWaitSecs = options.longs === String ? "0" : 0;
                                    object.syncRev = "";
                                    object.secretType = "";
                                    object.httpsProxy = "";
                                    object.gcpServiceAccountEmail = "";
                                }
                                if (message.syncRepo != null && message.hasOwnProperty("syncRepo"))
                                    object.syncRepo = message.syncRepo;
                                if (message.syncBranch != null && message.hasOwnProperty("syncBranch"))
                                    object.syncBranch = message.syncBranch;
                                if (message.policyDir != null && message.hasOwnProperty("policyDir"))
                                    object.policyDir = message.policyDir;
                                if (message.syncWaitSecs != null && message.hasOwnProperty("syncWaitSecs"))
                                    if (typeof message.syncWaitSecs === "number")
                                        object.syncWaitSecs = options.longs === String ? String(message.syncWaitSecs) : message.syncWaitSecs;
                                    else
                                        object.syncWaitSecs = options.longs === String ? $util.Long.prototype.toString.call(message.syncWaitSecs) : options.longs === Number ? new $util.LongBits(message.syncWaitSecs.low >>> 0, message.syncWaitSecs.high >>> 0).toNumber() : message.syncWaitSecs;
                                if (message.syncRev != null && message.hasOwnProperty("syncRev"))
                                    object.syncRev = message.syncRev;
                                if (message.secretType != null && message.hasOwnProperty("secretType"))
                                    object.secretType = message.secretType;
                                if (message.httpsProxy != null && message.hasOwnProperty("httpsProxy"))
                                    object.httpsProxy = message.httpsProxy;
                                if (message.gcpServiceAccountEmail != null && message.hasOwnProperty("gcpServiceAccountEmail"))
                                    object.gcpServiceAccountEmail = message.gcpServiceAccountEmail;
                                return object;
                            };
    
                            /**
                             * Converts this GitConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GitConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GitConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GitConfig;
                        })();
    
                        v1beta.PolicyController = (function() {
    
                            /**
                             * Properties of a PolicyController.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IPolicyController
                             * @property {boolean|null} [enabled] PolicyController enabled
                             * @property {boolean|null} [templateLibraryInstalled] PolicyController templateLibraryInstalled
                             * @property {number|Long|null} [auditIntervalSeconds] PolicyController auditIntervalSeconds
                             * @property {Array.<string>|null} [exemptableNamespaces] PolicyController exemptableNamespaces
                             * @property {boolean|null} [referentialRulesEnabled] PolicyController referentialRulesEnabled
                             * @property {boolean|null} [logDeniesEnabled] PolicyController logDeniesEnabled
                             */
    
                            /**
                             * Constructs a new PolicyController.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a PolicyController.
                             * @implements IPolicyController
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyController=} [properties] Properties to set
                             */
                            function PolicyController(properties) {
                                this.exemptableNamespaces = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyController enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.enabled = false;
    
                            /**
                             * PolicyController templateLibraryInstalled.
                             * @member {boolean|null|undefined} templateLibraryInstalled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.templateLibraryInstalled = null;
    
                            /**
                             * PolicyController auditIntervalSeconds.
                             * @member {number|Long|null|undefined} auditIntervalSeconds
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.auditIntervalSeconds = null;
    
                            /**
                             * PolicyController exemptableNamespaces.
                             * @member {Array.<string>} exemptableNamespaces
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.exemptableNamespaces = $util.emptyArray;
    
                            /**
                             * PolicyController referentialRulesEnabled.
                             * @member {boolean} referentialRulesEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.referentialRulesEnabled = false;
    
                            /**
                             * PolicyController logDeniesEnabled.
                             * @member {boolean} logDeniesEnabled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            PolicyController.prototype.logDeniesEnabled = false;
    
                            // OneOf field names bound to virtual getters and setters
                            var $oneOfFields;
    
                            /**
                             * PolicyController _templateLibraryInstalled.
                             * @member {"templateLibraryInstalled"|undefined} _templateLibraryInstalled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            Object.defineProperty(PolicyController.prototype, "_templateLibraryInstalled", {
                                get: $util.oneOfGetter($oneOfFields = ["templateLibraryInstalled"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * PolicyController _auditIntervalSeconds.
                             * @member {"auditIntervalSeconds"|undefined} _auditIntervalSeconds
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             */
                            Object.defineProperty(PolicyController.prototype, "_auditIntervalSeconds", {
                                get: $util.oneOfGetter($oneOfFields = ["auditIntervalSeconds"]),
                                set: $util.oneOfSetter($oneOfFields)
                            });
    
                            /**
                             * Creates a new PolicyController instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyController=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyController} PolicyController instance
                             */
                            PolicyController.create = function create(properties) {
                                return new PolicyController(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyController message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.PolicyController.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyController} message PolicyController message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyController.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.templateLibraryInstalled != null && Object.hasOwnProperty.call(message, "templateLibraryInstalled"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.templateLibraryInstalled);
                                if (message.auditIntervalSeconds != null && Object.hasOwnProperty.call(message, "auditIntervalSeconds"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int64(message.auditIntervalSeconds);
                                if (message.exemptableNamespaces != null && message.exemptableNamespaces.length)
                                    for (var i = 0; i < message.exemptableNamespaces.length; ++i)
                                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.exemptableNamespaces[i]);
                                if (message.referentialRulesEnabled != null && Object.hasOwnProperty.call(message, "referentialRulesEnabled"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).bool(message.referentialRulesEnabled);
                                if (message.logDeniesEnabled != null && Object.hasOwnProperty.call(message, "logDeniesEnabled"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).bool(message.logDeniesEnabled);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyController message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.PolicyController.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyController} message PolicyController message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyController.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyController message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyController} PolicyController
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyController.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    case 2:
                                        message.templateLibraryInstalled = reader.bool();
                                        break;
                                    case 3:
                                        message.auditIntervalSeconds = reader.int64();
                                        break;
                                    case 4:
                                        if (!(message.exemptableNamespaces && message.exemptableNamespaces.length))
                                            message.exemptableNamespaces = [];
                                        message.exemptableNamespaces.push(reader.string());
                                        break;
                                    case 5:
                                        message.referentialRulesEnabled = reader.bool();
                                        break;
                                    case 6:
                                        message.logDeniesEnabled = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyController message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyController} PolicyController
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyController.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyController message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyController.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                var properties = {};
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.templateLibraryInstalled != null && message.hasOwnProperty("templateLibraryInstalled")) {
                                    properties._templateLibraryInstalled = 1;
                                    if (typeof message.templateLibraryInstalled !== "boolean")
                                        return "templateLibraryInstalled: boolean expected";
                                }
                                if (message.auditIntervalSeconds != null && message.hasOwnProperty("auditIntervalSeconds")) {
                                    properties._auditIntervalSeconds = 1;
                                    if (!$util.isInteger(message.auditIntervalSeconds) && !(message.auditIntervalSeconds && $util.isInteger(message.auditIntervalSeconds.low) && $util.isInteger(message.auditIntervalSeconds.high)))
                                        return "auditIntervalSeconds: integer|Long expected";
                                }
                                if (message.exemptableNamespaces != null && message.hasOwnProperty("exemptableNamespaces")) {
                                    if (!Array.isArray(message.exemptableNamespaces))
                                        return "exemptableNamespaces: array expected";
                                    for (var i = 0; i < message.exemptableNamespaces.length; ++i)
                                        if (!$util.isString(message.exemptableNamespaces[i]))
                                            return "exemptableNamespaces: string[] expected";
                                }
                                if (message.referentialRulesEnabled != null && message.hasOwnProperty("referentialRulesEnabled"))
                                    if (typeof message.referentialRulesEnabled !== "boolean")
                                        return "referentialRulesEnabled: boolean expected";
                                if (message.logDeniesEnabled != null && message.hasOwnProperty("logDeniesEnabled"))
                                    if (typeof message.logDeniesEnabled !== "boolean")
                                        return "logDeniesEnabled: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a PolicyController message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyController} PolicyController
                             */
                            PolicyController.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.PolicyController();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                if (object.templateLibraryInstalled != null)
                                    message.templateLibraryInstalled = Boolean(object.templateLibraryInstalled);
                                if (object.auditIntervalSeconds != null)
                                    if ($util.Long)
                                        (message.auditIntervalSeconds = $util.Long.fromValue(object.auditIntervalSeconds)).unsigned = false;
                                    else if (typeof object.auditIntervalSeconds === "string")
                                        message.auditIntervalSeconds = parseInt(object.auditIntervalSeconds, 10);
                                    else if (typeof object.auditIntervalSeconds === "number")
                                        message.auditIntervalSeconds = object.auditIntervalSeconds;
                                    else if (typeof object.auditIntervalSeconds === "object")
                                        message.auditIntervalSeconds = new $util.LongBits(object.auditIntervalSeconds.low >>> 0, object.auditIntervalSeconds.high >>> 0).toNumber();
                                if (object.exemptableNamespaces) {
                                    if (!Array.isArray(object.exemptableNamespaces))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.PolicyController.exemptableNamespaces: array expected");
                                    message.exemptableNamespaces = [];
                                    for (var i = 0; i < object.exemptableNamespaces.length; ++i)
                                        message.exemptableNamespaces[i] = String(object.exemptableNamespaces[i]);
                                }
                                if (object.referentialRulesEnabled != null)
                                    message.referentialRulesEnabled = Boolean(object.referentialRulesEnabled);
                                if (object.logDeniesEnabled != null)
                                    message.logDeniesEnabled = Boolean(object.logDeniesEnabled);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyController message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.PolicyController} message PolicyController
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyController.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.exemptableNamespaces = [];
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.referentialRulesEnabled = false;
                                    object.logDeniesEnabled = false;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.templateLibraryInstalled != null && message.hasOwnProperty("templateLibraryInstalled")) {
                                    object.templateLibraryInstalled = message.templateLibraryInstalled;
                                    if (options.oneofs)
                                        object._templateLibraryInstalled = "templateLibraryInstalled";
                                }
                                if (message.auditIntervalSeconds != null && message.hasOwnProperty("auditIntervalSeconds")) {
                                    if (typeof message.auditIntervalSeconds === "number")
                                        object.auditIntervalSeconds = options.longs === String ? String(message.auditIntervalSeconds) : message.auditIntervalSeconds;
                                    else
                                        object.auditIntervalSeconds = options.longs === String ? $util.Long.prototype.toString.call(message.auditIntervalSeconds) : options.longs === Number ? new $util.LongBits(message.auditIntervalSeconds.low >>> 0, message.auditIntervalSeconds.high >>> 0).toNumber() : message.auditIntervalSeconds;
                                    if (options.oneofs)
                                        object._auditIntervalSeconds = "auditIntervalSeconds";
                                }
                                if (message.exemptableNamespaces && message.exemptableNamespaces.length) {
                                    object.exemptableNamespaces = [];
                                    for (var j = 0; j < message.exemptableNamespaces.length; ++j)
                                        object.exemptableNamespaces[j] = message.exemptableNamespaces[j];
                                }
                                if (message.referentialRulesEnabled != null && message.hasOwnProperty("referentialRulesEnabled"))
                                    object.referentialRulesEnabled = message.referentialRulesEnabled;
                                if (message.logDeniesEnabled != null && message.hasOwnProperty("logDeniesEnabled"))
                                    object.logDeniesEnabled = message.logDeniesEnabled;
                                return object;
                            };
    
                            /**
                             * Converts this PolicyController to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyController
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyController.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyController;
                        })();
    
                        v1beta.BinauthzConfig = (function() {
    
                            /**
                             * Properties of a BinauthzConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IBinauthzConfig
                             * @property {boolean|null} [enabled] BinauthzConfig enabled
                             */
    
                            /**
                             * Constructs a new BinauthzConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a BinauthzConfig.
                             * @implements IBinauthzConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzConfig=} [properties] Properties to set
                             */
                            function BinauthzConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BinauthzConfig enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @instance
                             */
                            BinauthzConfig.prototype.enabled = false;
    
                            /**
                             * Creates a new BinauthzConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig} BinauthzConfig instance
                             */
                            BinauthzConfig.create = function create(properties) {
                                return new BinauthzConfig(properties);
                            };
    
                            /**
                             * Encodes the specified BinauthzConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzConfig} message BinauthzConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BinauthzConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzConfig} message BinauthzConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BinauthzConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig} BinauthzConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BinauthzConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig} BinauthzConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BinauthzConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BinauthzConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a BinauthzConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig} BinauthzConfig
                             */
                            BinauthzConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BinauthzConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig} message BinauthzConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BinauthzConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.enabled = false;
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                return object;
                            };
    
                            /**
                             * Converts this BinauthzConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BinauthzConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return BinauthzConfig;
                        })();
    
                        v1beta.HierarchyControllerConfig = (function() {
    
                            /**
                             * Properties of a HierarchyControllerConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IHierarchyControllerConfig
                             * @property {boolean|null} [enabled] HierarchyControllerConfig enabled
                             * @property {boolean|null} [enablePodTreeLabels] HierarchyControllerConfig enablePodTreeLabels
                             * @property {boolean|null} [enableHierarchicalResourceQuota] HierarchyControllerConfig enableHierarchicalResourceQuota
                             */
    
                            /**
                             * Constructs a new HierarchyControllerConfig.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a HierarchyControllerConfig.
                             * @implements IHierarchyControllerConfig
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerConfig=} [properties] Properties to set
                             */
                            function HierarchyControllerConfig(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerConfig enabled.
                             * @member {boolean} enabled
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enabled = false;
    
                            /**
                             * HierarchyControllerConfig enablePodTreeLabels.
                             * @member {boolean} enablePodTreeLabels
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enablePodTreeLabels = false;
    
                            /**
                             * HierarchyControllerConfig enableHierarchicalResourceQuota.
                             * @member {boolean} enableHierarchicalResourceQuota
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @instance
                             */
                            HierarchyControllerConfig.prototype.enableHierarchicalResourceQuota = false;
    
                            /**
                             * Creates a new HierarchyControllerConfig instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerConfig=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig} HierarchyControllerConfig instance
                             */
                            HierarchyControllerConfig.create = function create(properties) {
                                return new HierarchyControllerConfig(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerConfig message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerConfig} message HierarchyControllerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerConfig.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.enabled != null && Object.hasOwnProperty.call(message, "enabled"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.enabled);
                                if (message.enablePodTreeLabels != null && Object.hasOwnProperty.call(message, "enablePodTreeLabels"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).bool(message.enablePodTreeLabels);
                                if (message.enableHierarchicalResourceQuota != null && Object.hasOwnProperty.call(message, "enableHierarchicalResourceQuota"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).bool(message.enableHierarchicalResourceQuota);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerConfig message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerConfig} message HierarchyControllerConfig message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerConfig.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerConfig message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig} HierarchyControllerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerConfig.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.enabled = reader.bool();
                                        break;
                                    case 2:
                                        message.enablePodTreeLabels = reader.bool();
                                        break;
                                    case 3:
                                        message.enableHierarchicalResourceQuota = reader.bool();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerConfig message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig} HierarchyControllerConfig
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerConfig.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerConfig message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerConfig.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    if (typeof message.enabled !== "boolean")
                                        return "enabled: boolean expected";
                                if (message.enablePodTreeLabels != null && message.hasOwnProperty("enablePodTreeLabels"))
                                    if (typeof message.enablePodTreeLabels !== "boolean")
                                        return "enablePodTreeLabels: boolean expected";
                                if (message.enableHierarchicalResourceQuota != null && message.hasOwnProperty("enableHierarchicalResourceQuota"))
                                    if (typeof message.enableHierarchicalResourceQuota !== "boolean")
                                        return "enableHierarchicalResourceQuota: boolean expected";
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerConfig message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig} HierarchyControllerConfig
                             */
                            HierarchyControllerConfig.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig();
                                if (object.enabled != null)
                                    message.enabled = Boolean(object.enabled);
                                if (object.enablePodTreeLabels != null)
                                    message.enablePodTreeLabels = Boolean(object.enablePodTreeLabels);
                                if (object.enableHierarchicalResourceQuota != null)
                                    message.enableHierarchicalResourceQuota = Boolean(object.enableHierarchicalResourceQuota);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerConfig message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig} message HierarchyControllerConfig
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerConfig.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.enabled = false;
                                    object.enablePodTreeLabels = false;
                                    object.enableHierarchicalResourceQuota = false;
                                }
                                if (message.enabled != null && message.hasOwnProperty("enabled"))
                                    object.enabled = message.enabled;
                                if (message.enablePodTreeLabels != null && message.hasOwnProperty("enablePodTreeLabels"))
                                    object.enablePodTreeLabels = message.enablePodTreeLabels;
                                if (message.enableHierarchicalResourceQuota != null && message.hasOwnProperty("enableHierarchicalResourceQuota"))
                                    object.enableHierarchicalResourceQuota = message.enableHierarchicalResourceQuota;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerConfig to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerConfig
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerConfig.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerConfig;
                        })();
    
                        v1beta.HierarchyControllerDeploymentState = (function() {
    
                            /**
                             * Properties of a HierarchyControllerDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IHierarchyControllerDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [hnc] HierarchyControllerDeploymentState hnc
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [extension] HierarchyControllerDeploymentState extension
                             */
    
                            /**
                             * Constructs a new HierarchyControllerDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a HierarchyControllerDeploymentState.
                             * @implements IHierarchyControllerDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerDeploymentState=} [properties] Properties to set
                             */
                            function HierarchyControllerDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerDeploymentState hnc.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} hnc
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @instance
                             */
                            HierarchyControllerDeploymentState.prototype.hnc = 0;
    
                            /**
                             * HierarchyControllerDeploymentState extension.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} extension
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @instance
                             */
                            HierarchyControllerDeploymentState.prototype.extension = 0;
    
                            /**
                             * Creates a new HierarchyControllerDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState instance
                             */
                            HierarchyControllerDeploymentState.create = function create(properties) {
                                return new HierarchyControllerDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerDeploymentState} message HierarchyControllerDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hnc != null && Object.hasOwnProperty.call(message, "hnc"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.hnc);
                                if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.extension);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerDeploymentState} message HierarchyControllerDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.hnc = reader.int32();
                                        break;
                                    case 2:
                                        message.extension = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    switch (message.hnc) {
                                    default:
                                        return "hnc: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    switch (message.extension) {
                                    default:
                                        return "extension: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState} HierarchyControllerDeploymentState
                             */
                            HierarchyControllerDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState();
                                switch (object.hnc) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.hnc = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.hnc = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.hnc = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.hnc = 3;
                                    break;
                                }
                                switch (object.extension) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.extension = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.extension = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.extension = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.extension = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState} message HierarchyControllerDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.hnc = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.extension = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    object.hnc = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.hnc] : message.hnc;
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    object.extension = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.extension] : message.extension;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerDeploymentState;
                        })();
    
                        v1beta.HierarchyControllerVersion = (function() {
    
                            /**
                             * Properties of a HierarchyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IHierarchyControllerVersion
                             * @property {string|null} [hnc] HierarchyControllerVersion hnc
                             * @property {string|null} [extension] HierarchyControllerVersion extension
                             */
    
                            /**
                             * Constructs a new HierarchyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a HierarchyControllerVersion.
                             * @implements IHierarchyControllerVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerVersion=} [properties] Properties to set
                             */
                            function HierarchyControllerVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerVersion hnc.
                             * @member {string} hnc
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @instance
                             */
                            HierarchyControllerVersion.prototype.hnc = "";
    
                            /**
                             * HierarchyControllerVersion extension.
                             * @member {string} extension
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @instance
                             */
                            HierarchyControllerVersion.prototype.extension = "";
    
                            /**
                             * Creates a new HierarchyControllerVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion} HierarchyControllerVersion instance
                             */
                            HierarchyControllerVersion.create = function create(properties) {
                                return new HierarchyControllerVersion(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerVersion} message HierarchyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.hnc != null && Object.hasOwnProperty.call(message, "hnc"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.hnc);
                                if (message.extension != null && Object.hasOwnProperty.call(message, "extension"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.extension);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerVersion} message HierarchyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion} HierarchyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.hnc = reader.string();
                                        break;
                                    case 2:
                                        message.extension = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion} HierarchyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    if (!$util.isString(message.hnc))
                                        return "hnc: string expected";
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    if (!$util.isString(message.extension))
                                        return "extension: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion} HierarchyControllerVersion
                             */
                            HierarchyControllerVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion();
                                if (object.hnc != null)
                                    message.hnc = String(object.hnc);
                                if (object.extension != null)
                                    message.extension = String(object.extension);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion} message HierarchyControllerVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.hnc = "";
                                    object.extension = "";
                                }
                                if (message.hnc != null && message.hasOwnProperty("hnc"))
                                    object.hnc = message.hnc;
                                if (message.extension != null && message.hasOwnProperty("extension"))
                                    object.extension = message.extension;
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerVersion;
                        })();
    
                        v1beta.HierarchyControllerState = (function() {
    
                            /**
                             * Properties of a HierarchyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IHierarchyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerVersion|null} [version] HierarchyControllerState version
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerDeploymentState|null} [state] HierarchyControllerState state
                             */
    
                            /**
                             * Constructs a new HierarchyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a HierarchyControllerState.
                             * @implements IHierarchyControllerState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerState=} [properties] Properties to set
                             */
                            function HierarchyControllerState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * HierarchyControllerState version.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @instance
                             */
                            HierarchyControllerState.prototype.version = null;
    
                            /**
                             * HierarchyControllerState state.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerDeploymentState|null|undefined} state
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @instance
                             */
                            HierarchyControllerState.prototype.state = null;
    
                            /**
                             * Creates a new HierarchyControllerState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState} HierarchyControllerState instance
                             */
                            HierarchyControllerState.create = function create(properties) {
                                return new HierarchyControllerState(properties);
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerState} message HierarchyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.encode(message.state, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified HierarchyControllerState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IHierarchyControllerState} message HierarchyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            HierarchyControllerState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a HierarchyControllerState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState} HierarchyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.state = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a HierarchyControllerState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState} HierarchyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            HierarchyControllerState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a HierarchyControllerState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            HierarchyControllerState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.state != null && message.hasOwnProperty("state")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.verify(message.state);
                                    if (error)
                                        return "state." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a HierarchyControllerState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState} HierarchyControllerState
                             */
                            HierarchyControllerState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.fromObject(object.version);
                                }
                                if (object.state != null) {
                                    if (typeof object.state !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState.state: object expected");
                                    message.state = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.fromObject(object.state);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a HierarchyControllerState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState} message HierarchyControllerState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            HierarchyControllerState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.state = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerVersion.toObject(message.version, options);
                                if (message.state != null && message.hasOwnProperty("state"))
                                    object.state = $root.google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerDeploymentState.toObject(message.state, options);
                                return object;
                            };
    
                            /**
                             * Converts this HierarchyControllerState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.HierarchyControllerState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            HierarchyControllerState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return HierarchyControllerState;
                        })();
    
                        v1beta.OperatorState = (function() {
    
                            /**
                             * Properties of an OperatorState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IOperatorState
                             * @property {string|null} [version] OperatorState version
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [deploymentState] OperatorState deploymentState
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1beta.IInstallError>|null} [errors] OperatorState errors
                             */
    
                            /**
                             * Constructs a new OperatorState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents an OperatorState.
                             * @implements IOperatorState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IOperatorState=} [properties] Properties to set
                             */
                            function OperatorState(properties) {
                                this.errors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * OperatorState version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.version = "";
    
                            /**
                             * OperatorState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.deploymentState = 0;
    
                            /**
                             * OperatorState errors.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1beta.IInstallError>} errors
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @instance
                             */
                            OperatorState.prototype.errors = $util.emptyArray;
    
                            /**
                             * Creates a new OperatorState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IOperatorState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.OperatorState} OperatorState instance
                             */
                            OperatorState.create = function create(properties) {
                                return new OperatorState(properties);
                            };
    
                            /**
                             * Encodes the specified OperatorState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.OperatorState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IOperatorState} message OperatorState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperatorState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.deploymentState);
                                if (message.errors != null && message.errors.length)
                                    for (var i = 0; i < message.errors.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1beta.InstallError.encode(message.errors[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified OperatorState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.OperatorState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IOperatorState} message OperatorState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            OperatorState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an OperatorState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.OperatorState} OperatorState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperatorState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = reader.string();
                                        break;
                                    case 2:
                                        message.deploymentState = reader.int32();
                                        break;
                                    case 3:
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.gkehub.configmanagement.v1beta.InstallError.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an OperatorState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.OperatorState} OperatorState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            OperatorState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an OperatorState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            OperatorState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    switch (message.deploymentState) {
                                    default:
                                        return "deploymentState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.errors != null && message.hasOwnProperty("errors")) {
                                    if (!Array.isArray(message.errors))
                                        return "errors: array expected";
                                    for (var i = 0; i < message.errors.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1beta.InstallError.verify(message.errors[i]);
                                        if (error)
                                            return "errors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates an OperatorState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.OperatorState} OperatorState
                             */
                            OperatorState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.OperatorState();
                                if (object.version != null)
                                    message.version = String(object.version);
                                switch (object.deploymentState) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.deploymentState = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.deploymentState = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.deploymentState = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.deploymentState = 3;
                                    break;
                                }
                                if (object.errors) {
                                    if (!Array.isArray(object.errors))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.OperatorState.errors: array expected");
                                    message.errors = [];
                                    for (var i = 0; i < object.errors.length; ++i) {
                                        if (typeof object.errors[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.OperatorState.errors: object expected");
                                        message.errors[i] = $root.google.cloud.gkehub.configmanagement.v1beta.InstallError.fromObject(object.errors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an OperatorState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.OperatorState} message OperatorState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            OperatorState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errors = [];
                                if (options.defaults) {
                                    object.version = "";
                                    object.deploymentState = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.deploymentState] : message.deploymentState;
                                if (message.errors && message.errors.length) {
                                    object.errors = [];
                                    for (var j = 0; j < message.errors.length; ++j)
                                        object.errors[j] = $root.google.cloud.gkehub.configmanagement.v1beta.InstallError.toObject(message.errors[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this OperatorState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.OperatorState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            OperatorState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return OperatorState;
                        })();
    
                        v1beta.InstallError = (function() {
    
                            /**
                             * Properties of an InstallError.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IInstallError
                             * @property {string|null} [errorMessage] InstallError errorMessage
                             */
    
                            /**
                             * Constructs a new InstallError.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents an InstallError.
                             * @implements IInstallError
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IInstallError=} [properties] Properties to set
                             */
                            function InstallError(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * InstallError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @instance
                             */
                            InstallError.prototype.errorMessage = "";
    
                            /**
                             * Creates a new InstallError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IInstallError=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.InstallError} InstallError instance
                             */
                            InstallError.create = function create(properties) {
                                return new InstallError(properties);
                            };
    
                            /**
                             * Encodes the specified InstallError message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.InstallError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IInstallError} message InstallError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InstallError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.errorMessage);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified InstallError message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.InstallError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IInstallError} message InstallError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            InstallError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an InstallError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.InstallError} InstallError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InstallError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.InstallError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.errorMessage = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an InstallError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.InstallError} InstallError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            InstallError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an InstallError message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            InstallError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an InstallError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.InstallError} InstallError
                             */
                            InstallError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.InstallError)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.InstallError();
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an InstallError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.InstallError} message InstallError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            InstallError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.errorMessage = "";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                return object;
                            };
    
                            /**
                             * Converts this InstallError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.InstallError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            InstallError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return InstallError;
                        })();
    
                        v1beta.ConfigSyncState = (function() {
    
                            /**
                             * Properties of a ConfigSyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IConfigSyncState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncVersion|null} [version] ConfigSyncState version
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncDeploymentState|null} [deploymentState] ConfigSyncState deploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.ISyncState|null} [syncState] ConfigSyncState syncState
                             */
    
                            /**
                             * Constructs a new ConfigSyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a ConfigSyncState.
                             * @implements IConfigSyncState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncState=} [properties] Properties to set
                             */
                            function ConfigSyncState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncState version.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.version = null;
    
                            /**
                             * ConfigSyncState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncDeploymentState|null|undefined} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.deploymentState = null;
    
                            /**
                             * ConfigSyncState syncState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.ISyncState|null|undefined} syncState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @instance
                             */
                            ConfigSyncState.prototype.syncState = null;
    
                            /**
                             * Creates a new ConfigSyncState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState} ConfigSyncState instance
                             */
                            ConfigSyncState.create = function create(properties) {
                                return new ConfigSyncState(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncState} message ConfigSyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.encode(message.deploymentState, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                if (message.syncState != null && Object.hasOwnProperty.call(message, "syncState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.SyncState.encode(message.syncState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncState} message ConfigSyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState} ConfigSyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.syncState = $root.google.cloud.gkehub.configmanagement.v1beta.SyncState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState} ConfigSyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.verify(message.deploymentState);
                                    if (error)
                                        return "deploymentState." + error;
                                }
                                if (message.syncState != null && message.hasOwnProperty("syncState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.SyncState.verify(message.syncState);
                                    if (error)
                                        return "syncState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState} ConfigSyncState
                             */
                            ConfigSyncState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.fromObject(object.version);
                                }
                                if (object.deploymentState != null) {
                                    if (typeof object.deploymentState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.deploymentState: object expected");
                                    message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.fromObject(object.deploymentState);
                                }
                                if (object.syncState != null) {
                                    if (typeof object.syncState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState.syncState: object expected");
                                    message.syncState = $root.google.cloud.gkehub.configmanagement.v1beta.SyncState.fromObject(object.syncState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState} message ConfigSyncState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.deploymentState = null;
                                    object.syncState = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.toObject(message.version, options);
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.toObject(message.deploymentState, options);
                                if (message.syncState != null && message.hasOwnProperty("syncState"))
                                    object.syncState = $root.google.cloud.gkehub.configmanagement.v1beta.SyncState.toObject(message.syncState, options);
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncState;
                        })();
    
                        v1beta.ConfigSyncVersion = (function() {
    
                            /**
                             * Properties of a ConfigSyncVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IConfigSyncVersion
                             * @property {string|null} [importer] ConfigSyncVersion importer
                             * @property {string|null} [syncer] ConfigSyncVersion syncer
                             * @property {string|null} [gitSync] ConfigSyncVersion gitSync
                             * @property {string|null} [monitor] ConfigSyncVersion monitor
                             * @property {string|null} [reconcilerManager] ConfigSyncVersion reconcilerManager
                             * @property {string|null} [rootReconciler] ConfigSyncVersion rootReconciler
                             */
    
                            /**
                             * Constructs a new ConfigSyncVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a ConfigSyncVersion.
                             * @implements IConfigSyncVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncVersion=} [properties] Properties to set
                             */
                            function ConfigSyncVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncVersion importer.
                             * @member {string} importer
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.importer = "";
    
                            /**
                             * ConfigSyncVersion syncer.
                             * @member {string} syncer
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.syncer = "";
    
                            /**
                             * ConfigSyncVersion gitSync.
                             * @member {string} gitSync
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.gitSync = "";
    
                            /**
                             * ConfigSyncVersion monitor.
                             * @member {string} monitor
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.monitor = "";
    
                            /**
                             * ConfigSyncVersion reconcilerManager.
                             * @member {string} reconcilerManager
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.reconcilerManager = "";
    
                            /**
                             * ConfigSyncVersion rootReconciler.
                             * @member {string} rootReconciler
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             */
                            ConfigSyncVersion.prototype.rootReconciler = "";
    
                            /**
                             * Creates a new ConfigSyncVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion} ConfigSyncVersion instance
                             */
                            ConfigSyncVersion.create = function create(properties) {
                                return new ConfigSyncVersion(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncVersion} message ConfigSyncVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importer != null && Object.hasOwnProperty.call(message, "importer"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.importer);
                                if (message.syncer != null && Object.hasOwnProperty.call(message, "syncer"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.syncer);
                                if (message.gitSync != null && Object.hasOwnProperty.call(message, "gitSync"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.gitSync);
                                if (message.monitor != null && Object.hasOwnProperty.call(message, "monitor"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.monitor);
                                if (message.reconcilerManager != null && Object.hasOwnProperty.call(message, "reconcilerManager"))
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.reconcilerManager);
                                if (message.rootReconciler != null && Object.hasOwnProperty.call(message, "rootReconciler"))
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.rootReconciler);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncVersion} message ConfigSyncVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion} ConfigSyncVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importer = reader.string();
                                        break;
                                    case 2:
                                        message.syncer = reader.string();
                                        break;
                                    case 3:
                                        message.gitSync = reader.string();
                                        break;
                                    case 4:
                                        message.monitor = reader.string();
                                        break;
                                    case 5:
                                        message.reconcilerManager = reader.string();
                                        break;
                                    case 6:
                                        message.rootReconciler = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion} ConfigSyncVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    if (!$util.isString(message.importer))
                                        return "importer: string expected";
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    if (!$util.isString(message.syncer))
                                        return "syncer: string expected";
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    if (!$util.isString(message.gitSync))
                                        return "gitSync: string expected";
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    if (!$util.isString(message.monitor))
                                        return "monitor: string expected";
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    if (!$util.isString(message.reconcilerManager))
                                        return "reconcilerManager: string expected";
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    if (!$util.isString(message.rootReconciler))
                                        return "rootReconciler: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion} ConfigSyncVersion
                             */
                            ConfigSyncVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion();
                                if (object.importer != null)
                                    message.importer = String(object.importer);
                                if (object.syncer != null)
                                    message.syncer = String(object.syncer);
                                if (object.gitSync != null)
                                    message.gitSync = String(object.gitSync);
                                if (object.monitor != null)
                                    message.monitor = String(object.monitor);
                                if (object.reconcilerManager != null)
                                    message.reconcilerManager = String(object.reconcilerManager);
                                if (object.rootReconciler != null)
                                    message.rootReconciler = String(object.rootReconciler);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion} message ConfigSyncVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importer = "";
                                    object.syncer = "";
                                    object.gitSync = "";
                                    object.monitor = "";
                                    object.reconcilerManager = "";
                                    object.rootReconciler = "";
                                }
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    object.importer = message.importer;
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    object.syncer = message.syncer;
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    object.gitSync = message.gitSync;
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    object.monitor = message.monitor;
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    object.reconcilerManager = message.reconcilerManager;
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    object.rootReconciler = message.rootReconciler;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncVersion;
                        })();
    
                        v1beta.ConfigSyncDeploymentState = (function() {
    
                            /**
                             * Properties of a ConfigSyncDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IConfigSyncDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [importer] ConfigSyncDeploymentState importer
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [syncer] ConfigSyncDeploymentState syncer
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [gitSync] ConfigSyncDeploymentState gitSync
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [monitor] ConfigSyncDeploymentState monitor
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [reconcilerManager] ConfigSyncDeploymentState reconcilerManager
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [rootReconciler] ConfigSyncDeploymentState rootReconciler
                             */
    
                            /**
                             * Constructs a new ConfigSyncDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a ConfigSyncDeploymentState.
                             * @implements IConfigSyncDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncDeploymentState=} [properties] Properties to set
                             */
                            function ConfigSyncDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ConfigSyncDeploymentState importer.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} importer
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.importer = 0;
    
                            /**
                             * ConfigSyncDeploymentState syncer.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} syncer
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.syncer = 0;
    
                            /**
                             * ConfigSyncDeploymentState gitSync.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} gitSync
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.gitSync = 0;
    
                            /**
                             * ConfigSyncDeploymentState monitor.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} monitor
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.monitor = 0;
    
                            /**
                             * ConfigSyncDeploymentState reconcilerManager.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} reconcilerManager
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.reconcilerManager = 0;
    
                            /**
                             * ConfigSyncDeploymentState rootReconciler.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} rootReconciler
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             */
                            ConfigSyncDeploymentState.prototype.rootReconciler = 0;
    
                            /**
                             * Creates a new ConfigSyncDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState} ConfigSyncDeploymentState instance
                             */
                            ConfigSyncDeploymentState.create = function create(properties) {
                                return new ConfigSyncDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified ConfigSyncDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncDeploymentState} message ConfigSyncDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.importer != null && Object.hasOwnProperty.call(message, "importer"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.importer);
                                if (message.syncer != null && Object.hasOwnProperty.call(message, "syncer"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.syncer);
                                if (message.gitSync != null && Object.hasOwnProperty.call(message, "gitSync"))
                                    writer.uint32(/* id 3, wireType 0 =*/24).int32(message.gitSync);
                                if (message.monitor != null && Object.hasOwnProperty.call(message, "monitor"))
                                    writer.uint32(/* id 4, wireType 0 =*/32).int32(message.monitor);
                                if (message.reconcilerManager != null && Object.hasOwnProperty.call(message, "reconcilerManager"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.reconcilerManager);
                                if (message.rootReconciler != null && Object.hasOwnProperty.call(message, "rootReconciler"))
                                    writer.uint32(/* id 6, wireType 0 =*/48).int32(message.rootReconciler);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ConfigSyncDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IConfigSyncDeploymentState} message ConfigSyncDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ConfigSyncDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a ConfigSyncDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.importer = reader.int32();
                                        break;
                                    case 2:
                                        message.syncer = reader.int32();
                                        break;
                                    case 3:
                                        message.gitSync = reader.int32();
                                        break;
                                    case 4:
                                        message.monitor = reader.int32();
                                        break;
                                    case 5:
                                        message.reconcilerManager = reader.int32();
                                        break;
                                    case 6:
                                        message.rootReconciler = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a ConfigSyncDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ConfigSyncDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a ConfigSyncDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ConfigSyncDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    switch (message.importer) {
                                    default:
                                        return "importer: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    switch (message.syncer) {
                                    default:
                                        return "syncer: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    switch (message.gitSync) {
                                    default:
                                        return "gitSync: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    switch (message.monitor) {
                                    default:
                                        return "monitor: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    switch (message.reconcilerManager) {
                                    default:
                                        return "reconcilerManager: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    switch (message.rootReconciler) {
                                    default:
                                        return "rootReconciler: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a ConfigSyncDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState} ConfigSyncDeploymentState
                             */
                            ConfigSyncDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState();
                                switch (object.importer) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.importer = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.importer = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.importer = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.importer = 3;
                                    break;
                                }
                                switch (object.syncer) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.syncer = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.syncer = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.syncer = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.syncer = 3;
                                    break;
                                }
                                switch (object.gitSync) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gitSync = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gitSync = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gitSync = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gitSync = 3;
                                    break;
                                }
                                switch (object.monitor) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.monitor = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.monitor = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.monitor = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.monitor = 3;
                                    break;
                                }
                                switch (object.reconcilerManager) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.reconcilerManager = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.reconcilerManager = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.reconcilerManager = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.reconcilerManager = 3;
                                    break;
                                }
                                switch (object.rootReconciler) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.rootReconciler = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.rootReconciler = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.rootReconciler = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.rootReconciler = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a ConfigSyncDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState} message ConfigSyncDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ConfigSyncDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.importer = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.syncer = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gitSync = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.monitor = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.reconcilerManager = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.rootReconciler = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.importer != null && message.hasOwnProperty("importer"))
                                    object.importer = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.importer] : message.importer;
                                if (message.syncer != null && message.hasOwnProperty("syncer"))
                                    object.syncer = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.syncer] : message.syncer;
                                if (message.gitSync != null && message.hasOwnProperty("gitSync"))
                                    object.gitSync = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.gitSync] : message.gitSync;
                                if (message.monitor != null && message.hasOwnProperty("monitor"))
                                    object.monitor = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.monitor] : message.monitor;
                                if (message.reconcilerManager != null && message.hasOwnProperty("reconcilerManager"))
                                    object.reconcilerManager = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.reconcilerManager] : message.reconcilerManager;
                                if (message.rootReconciler != null && message.hasOwnProperty("rootReconciler"))
                                    object.rootReconciler = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.rootReconciler] : message.rootReconciler;
                                return object;
                            };
    
                            /**
                             * Converts this ConfigSyncDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ConfigSyncDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ConfigSyncDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ConfigSyncDeploymentState;
                        })();
    
                        v1beta.SyncState = (function() {
    
                            /**
                             * Properties of a SyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface ISyncState
                             * @property {string|null} [sourceToken] SyncState sourceToken
                             * @property {string|null} [importToken] SyncState importToken
                             * @property {string|null} [syncToken] SyncState syncToken
                             * @property {string|null} [lastSync] SyncState lastSync
                             * @property {google.protobuf.ITimestamp|null} [lastSyncTime] SyncState lastSyncTime
                             * @property {google.cloud.gkehub.configmanagement.v1beta.SyncState.SyncCode|null} [code] SyncState code
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1beta.ISyncError>|null} [errors] SyncState errors
                             */
    
                            /**
                             * Constructs a new SyncState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a SyncState.
                             * @implements ISyncState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncState=} [properties] Properties to set
                             */
                            function SyncState(properties) {
                                this.errors = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SyncState sourceToken.
                             * @member {string} sourceToken
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.sourceToken = "";
    
                            /**
                             * SyncState importToken.
                             * @member {string} importToken
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.importToken = "";
    
                            /**
                             * SyncState syncToken.
                             * @member {string} syncToken
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.syncToken = "";
    
                            /**
                             * SyncState lastSync.
                             * @member {string} lastSync
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.lastSync = "";
    
                            /**
                             * SyncState lastSyncTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} lastSyncTime
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.lastSyncTime = null;
    
                            /**
                             * SyncState code.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.SyncState.SyncCode} code
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.code = 0;
    
                            /**
                             * SyncState errors.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1beta.ISyncError>} errors
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             */
                            SyncState.prototype.errors = $util.emptyArray;
    
                            /**
                             * Creates a new SyncState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncState} SyncState instance
                             */
                            SyncState.create = function create(properties) {
                                return new SyncState(properties);
                            };
    
                            /**
                             * Encodes the specified SyncState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.SyncState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncState} message SyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sourceToken != null && Object.hasOwnProperty.call(message, "sourceToken"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourceToken);
                                if (message.importToken != null && Object.hasOwnProperty.call(message, "importToken"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.importToken);
                                if (message.syncToken != null && Object.hasOwnProperty.call(message, "syncToken"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.syncToken);
                                if (message.lastSync != null && Object.hasOwnProperty.call(message, "lastSync"))
                                    writer.uint32(/* id 4, wireType 2 =*/34).string(message.lastSync);
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 5, wireType 0 =*/40).int32(message.code);
                                if (message.errors != null && message.errors.length)
                                    for (var i = 0; i < message.errors.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1beta.SyncError.encode(message.errors[i], writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                                if (message.lastSyncTime != null && Object.hasOwnProperty.call(message, "lastSyncTime"))
                                    $root.google.protobuf.Timestamp.encode(message.lastSyncTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SyncState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.SyncState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncState} message SyncState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SyncState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncState} SyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.SyncState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sourceToken = reader.string();
                                        break;
                                    case 2:
                                        message.importToken = reader.string();
                                        break;
                                    case 3:
                                        message.syncToken = reader.string();
                                        break;
                                    case 4:
                                        message.lastSync = reader.string();
                                        break;
                                    case 7:
                                        message.lastSyncTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    case 5:
                                        message.code = reader.int32();
                                        break;
                                    case 6:
                                        if (!(message.errors && message.errors.length))
                                            message.errors = [];
                                        message.errors.push($root.google.cloud.gkehub.configmanagement.v1beta.SyncError.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SyncState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncState} SyncState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SyncState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SyncState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                    if (!$util.isString(message.sourceToken))
                                        return "sourceToken: string expected";
                                if (message.importToken != null && message.hasOwnProperty("importToken"))
                                    if (!$util.isString(message.importToken))
                                        return "importToken: string expected";
                                if (message.syncToken != null && message.hasOwnProperty("syncToken"))
                                    if (!$util.isString(message.syncToken))
                                        return "syncToken: string expected";
                                if (message.lastSync != null && message.hasOwnProperty("lastSync"))
                                    if (!$util.isString(message.lastSync))
                                        return "lastSync: string expected";
                                if (message.lastSyncTime != null && message.hasOwnProperty("lastSyncTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.lastSyncTime);
                                    if (error)
                                        return "lastSyncTime." + error;
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    switch (message.code) {
                                    default:
                                        return "code: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                    case 4:
                                    case 5:
                                    case 6:
                                    case 7:
                                        break;
                                    }
                                if (message.errors != null && message.hasOwnProperty("errors")) {
                                    if (!Array.isArray(message.errors))
                                        return "errors: array expected";
                                    for (var i = 0; i < message.errors.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1beta.SyncError.verify(message.errors[i]);
                                        if (error)
                                            return "errors." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SyncState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncState} SyncState
                             */
                            SyncState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.SyncState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.SyncState();
                                if (object.sourceToken != null)
                                    message.sourceToken = String(object.sourceToken);
                                if (object.importToken != null)
                                    message.importToken = String(object.importToken);
                                if (object.syncToken != null)
                                    message.syncToken = String(object.syncToken);
                                if (object.lastSync != null)
                                    message.lastSync = String(object.lastSync);
                                if (object.lastSyncTime != null) {
                                    if (typeof object.lastSyncTime !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.SyncState.lastSyncTime: object expected");
                                    message.lastSyncTime = $root.google.protobuf.Timestamp.fromObject(object.lastSyncTime);
                                }
                                switch (object.code) {
                                case "SYNC_CODE_UNSPECIFIED":
                                case 0:
                                    message.code = 0;
                                    break;
                                case "SYNCED":
                                case 1:
                                    message.code = 1;
                                    break;
                                case "PENDING":
                                case 2:
                                    message.code = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.code = 3;
                                    break;
                                case "NOT_CONFIGURED":
                                case 4:
                                    message.code = 4;
                                    break;
                                case "NOT_INSTALLED":
                                case 5:
                                    message.code = 5;
                                    break;
                                case "UNAUTHORIZED":
                                case 6:
                                    message.code = 6;
                                    break;
                                case "UNREACHABLE":
                                case 7:
                                    message.code = 7;
                                    break;
                                }
                                if (object.errors) {
                                    if (!Array.isArray(object.errors))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.SyncState.errors: array expected");
                                    message.errors = [];
                                    for (var i = 0; i < object.errors.length; ++i) {
                                        if (typeof object.errors[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.SyncState.errors: object expected");
                                        message.errors[i] = $root.google.cloud.gkehub.configmanagement.v1beta.SyncError.fromObject(object.errors[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SyncState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.SyncState} message SyncState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SyncState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errors = [];
                                if (options.defaults) {
                                    object.sourceToken = "";
                                    object.importToken = "";
                                    object.syncToken = "";
                                    object.lastSync = "";
                                    object.code = options.enums === String ? "SYNC_CODE_UNSPECIFIED" : 0;
                                    object.lastSyncTime = null;
                                }
                                if (message.sourceToken != null && message.hasOwnProperty("sourceToken"))
                                    object.sourceToken = message.sourceToken;
                                if (message.importToken != null && message.hasOwnProperty("importToken"))
                                    object.importToken = message.importToken;
                                if (message.syncToken != null && message.hasOwnProperty("syncToken"))
                                    object.syncToken = message.syncToken;
                                if (message.lastSync != null && message.hasOwnProperty("lastSync"))
                                    object.lastSync = message.lastSync;
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.SyncState.SyncCode[message.code] : message.code;
                                if (message.errors && message.errors.length) {
                                    object.errors = [];
                                    for (var j = 0; j < message.errors.length; ++j)
                                        object.errors[j] = $root.google.cloud.gkehub.configmanagement.v1beta.SyncError.toObject(message.errors[j], options);
                                }
                                if (message.lastSyncTime != null && message.hasOwnProperty("lastSyncTime"))
                                    object.lastSyncTime = $root.google.protobuf.Timestamp.toObject(message.lastSyncTime, options);
                                return object;
                            };
    
                            /**
                             * Converts this SyncState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SyncState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            /**
                             * SyncCode enum.
                             * @name google.cloud.gkehub.configmanagement.v1beta.SyncState.SyncCode
                             * @enum {number}
                             * @property {number} SYNC_CODE_UNSPECIFIED=0 SYNC_CODE_UNSPECIFIED value
                             * @property {number} SYNCED=1 SYNCED value
                             * @property {number} PENDING=2 PENDING value
                             * @property {number} ERROR=3 ERROR value
                             * @property {number} NOT_CONFIGURED=4 NOT_CONFIGURED value
                             * @property {number} NOT_INSTALLED=5 NOT_INSTALLED value
                             * @property {number} UNAUTHORIZED=6 UNAUTHORIZED value
                             * @property {number} UNREACHABLE=7 UNREACHABLE value
                             */
                            SyncState.SyncCode = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "SYNC_CODE_UNSPECIFIED"] = 0;
                                values[valuesById[1] = "SYNCED"] = 1;
                                values[valuesById[2] = "PENDING"] = 2;
                                values[valuesById[3] = "ERROR"] = 3;
                                values[valuesById[4] = "NOT_CONFIGURED"] = 4;
                                values[valuesById[5] = "NOT_INSTALLED"] = 5;
                                values[valuesById[6] = "UNAUTHORIZED"] = 6;
                                values[valuesById[7] = "UNREACHABLE"] = 7;
                                return values;
                            })();
    
                            return SyncState;
                        })();
    
                        v1beta.SyncError = (function() {
    
                            /**
                             * Properties of a SyncError.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface ISyncError
                             * @property {string|null} [code] SyncError code
                             * @property {string|null} [errorMessage] SyncError errorMessage
                             * @property {Array.<google.cloud.gkehub.configmanagement.v1beta.IErrorResource>|null} [errorResources] SyncError errorResources
                             */
    
                            /**
                             * Constructs a new SyncError.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a SyncError.
                             * @implements ISyncError
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncError=} [properties] Properties to set
                             */
                            function SyncError(properties) {
                                this.errorResources = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * SyncError code.
                             * @member {string} code
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @instance
                             */
                            SyncError.prototype.code = "";
    
                            /**
                             * SyncError errorMessage.
                             * @member {string} errorMessage
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @instance
                             */
                            SyncError.prototype.errorMessage = "";
    
                            /**
                             * SyncError errorResources.
                             * @member {Array.<google.cloud.gkehub.configmanagement.v1beta.IErrorResource>} errorResources
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @instance
                             */
                            SyncError.prototype.errorResources = $util.emptyArray;
    
                            /**
                             * Creates a new SyncError instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncError=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncError} SyncError instance
                             */
                            SyncError.create = function create(properties) {
                                return new SyncError(properties);
                            };
    
                            /**
                             * Encodes the specified SyncError message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.SyncError.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncError} message SyncError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncError.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.code);
                                if (message.errorMessage != null && Object.hasOwnProperty.call(message, "errorMessage"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.errorMessage);
                                if (message.errorResources != null && message.errorResources.length)
                                    for (var i = 0; i < message.errorResources.length; ++i)
                                        $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource.encode(message.errorResources[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified SyncError message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.SyncError.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ISyncError} message SyncError message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            SyncError.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a SyncError message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncError} SyncError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncError.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.SyncError();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.code = reader.string();
                                        break;
                                    case 2:
                                        message.errorMessage = reader.string();
                                        break;
                                    case 3:
                                        if (!(message.errorResources && message.errorResources.length))
                                            message.errorResources = [];
                                        message.errorResources.push($root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a SyncError message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncError} SyncError
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            SyncError.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a SyncError message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            SyncError.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.code != null && message.hasOwnProperty("code"))
                                    if (!$util.isString(message.code))
                                        return "code: string expected";
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    if (!$util.isString(message.errorMessage))
                                        return "errorMessage: string expected";
                                if (message.errorResources != null && message.hasOwnProperty("errorResources")) {
                                    if (!Array.isArray(message.errorResources))
                                        return "errorResources: array expected";
                                    for (var i = 0; i < message.errorResources.length; ++i) {
                                        var error = $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource.verify(message.errorResources[i]);
                                        if (error)
                                            return "errorResources." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a SyncError message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.SyncError} SyncError
                             */
                            SyncError.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.SyncError)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.SyncError();
                                if (object.code != null)
                                    message.code = String(object.code);
                                if (object.errorMessage != null)
                                    message.errorMessage = String(object.errorMessage);
                                if (object.errorResources) {
                                    if (!Array.isArray(object.errorResources))
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.SyncError.errorResources: array expected");
                                    message.errorResources = [];
                                    for (var i = 0; i < object.errorResources.length; ++i) {
                                        if (typeof object.errorResources[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.SyncError.errorResources: object expected");
                                        message.errorResources[i] = $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource.fromObject(object.errorResources[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a SyncError message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.SyncError} message SyncError
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            SyncError.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.errorResources = [];
                                if (options.defaults) {
                                    object.code = "";
                                    object.errorMessage = "";
                                }
                                if (message.code != null && message.hasOwnProperty("code"))
                                    object.code = message.code;
                                if (message.errorMessage != null && message.hasOwnProperty("errorMessage"))
                                    object.errorMessage = message.errorMessage;
                                if (message.errorResources && message.errorResources.length) {
                                    object.errorResources = [];
                                    for (var j = 0; j < message.errorResources.length; ++j)
                                        object.errorResources[j] = $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource.toObject(message.errorResources[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this SyncError to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.SyncError
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            SyncError.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return SyncError;
                        })();
    
                        v1beta.ErrorResource = (function() {
    
                            /**
                             * Properties of an ErrorResource.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IErrorResource
                             * @property {string|null} [sourcePath] ErrorResource sourcePath
                             * @property {string|null} [resourceName] ErrorResource resourceName
                             * @property {string|null} [resourceNamespace] ErrorResource resourceNamespace
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IGroupVersionKind|null} [resourceGvk] ErrorResource resourceGvk
                             */
    
                            /**
                             * Constructs a new ErrorResource.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents an ErrorResource.
                             * @implements IErrorResource
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IErrorResource=} [properties] Properties to set
                             */
                            function ErrorResource(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * ErrorResource sourcePath.
                             * @member {string} sourcePath
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.sourcePath = "";
    
                            /**
                             * ErrorResource resourceName.
                             * @member {string} resourceName
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceName = "";
    
                            /**
                             * ErrorResource resourceNamespace.
                             * @member {string} resourceNamespace
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceNamespace = "";
    
                            /**
                             * ErrorResource resourceGvk.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IGroupVersionKind|null|undefined} resourceGvk
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @instance
                             */
                            ErrorResource.prototype.resourceGvk = null;
    
                            /**
                             * Creates a new ErrorResource instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IErrorResource=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ErrorResource} ErrorResource instance
                             */
                            ErrorResource.create = function create(properties) {
                                return new ErrorResource(properties);
                            };
    
                            /**
                             * Encodes the specified ErrorResource message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ErrorResource.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IErrorResource} message ErrorResource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ErrorResource.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.sourcePath != null && Object.hasOwnProperty.call(message, "sourcePath"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.sourcePath);
                                if (message.resourceName != null && Object.hasOwnProperty.call(message, "resourceName"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.resourceName);
                                if (message.resourceNamespace != null && Object.hasOwnProperty.call(message, "resourceNamespace"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.resourceNamespace);
                                if (message.resourceGvk != null && Object.hasOwnProperty.call(message, "resourceGvk"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.encode(message.resourceGvk, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified ErrorResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.ErrorResource.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IErrorResource} message ErrorResource message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            ErrorResource.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an ErrorResource message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ErrorResource} ErrorResource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ErrorResource.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.sourcePath = reader.string();
                                        break;
                                    case 2:
                                        message.resourceName = reader.string();
                                        break;
                                    case 3:
                                        message.resourceNamespace = reader.string();
                                        break;
                                    case 4:
                                        message.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an ErrorResource message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ErrorResource} ErrorResource
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            ErrorResource.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an ErrorResource message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            ErrorResource.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    if (!$util.isString(message.sourcePath))
                                        return "sourcePath: string expected";
                                if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                    if (!$util.isString(message.resourceName))
                                        return "resourceName: string expected";
                                if (message.resourceNamespace != null && message.hasOwnProperty("resourceNamespace"))
                                    if (!$util.isString(message.resourceNamespace))
                                        return "resourceNamespace: string expected";
                                if (message.resourceGvk != null && message.hasOwnProperty("resourceGvk")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.verify(message.resourceGvk);
                                    if (error)
                                        return "resourceGvk." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an ErrorResource message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.ErrorResource} ErrorResource
                             */
                            ErrorResource.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.ErrorResource();
                                if (object.sourcePath != null)
                                    message.sourcePath = String(object.sourcePath);
                                if (object.resourceName != null)
                                    message.resourceName = String(object.resourceName);
                                if (object.resourceNamespace != null)
                                    message.resourceNamespace = String(object.resourceNamespace);
                                if (object.resourceGvk != null) {
                                    if (typeof object.resourceGvk !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.ErrorResource.resourceGvk: object expected");
                                    message.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.fromObject(object.resourceGvk);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an ErrorResource message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.ErrorResource} message ErrorResource
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            ErrorResource.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.sourcePath = "";
                                    object.resourceName = "";
                                    object.resourceNamespace = "";
                                    object.resourceGvk = null;
                                }
                                if (message.sourcePath != null && message.hasOwnProperty("sourcePath"))
                                    object.sourcePath = message.sourcePath;
                                if (message.resourceName != null && message.hasOwnProperty("resourceName"))
                                    object.resourceName = message.resourceName;
                                if (message.resourceNamespace != null && message.hasOwnProperty("resourceNamespace"))
                                    object.resourceNamespace = message.resourceNamespace;
                                if (message.resourceGvk != null && message.hasOwnProperty("resourceGvk"))
                                    object.resourceGvk = $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.toObject(message.resourceGvk, options);
                                return object;
                            };
    
                            /**
                             * Converts this ErrorResource to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.ErrorResource
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            ErrorResource.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return ErrorResource;
                        })();
    
                        v1beta.GroupVersionKind = (function() {
    
                            /**
                             * Properties of a GroupVersionKind.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IGroupVersionKind
                             * @property {string|null} [group] GroupVersionKind group
                             * @property {string|null} [version] GroupVersionKind version
                             * @property {string|null} [kind] GroupVersionKind kind
                             */
    
                            /**
                             * Constructs a new GroupVersionKind.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a GroupVersionKind.
                             * @implements IGroupVersionKind
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGroupVersionKind=} [properties] Properties to set
                             */
                            function GroupVersionKind(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GroupVersionKind group.
                             * @member {string} group
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.group = "";
    
                            /**
                             * GroupVersionKind version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.version = "";
    
                            /**
                             * GroupVersionKind kind.
                             * @member {string} kind
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @instance
                             */
                            GroupVersionKind.prototype.kind = "";
    
                            /**
                             * Creates a new GroupVersionKind instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGroupVersionKind=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind} GroupVersionKind instance
                             */
                            GroupVersionKind.create = function create(properties) {
                                return new GroupVersionKind(properties);
                            };
    
                            /**
                             * Encodes the specified GroupVersionKind message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGroupVersionKind} message GroupVersionKind message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GroupVersionKind.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.group != null && Object.hasOwnProperty.call(message, "group"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.group);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.version);
                                if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.kind);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GroupVersionKind message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGroupVersionKind} message GroupVersionKind message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GroupVersionKind.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GroupVersionKind message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind} GroupVersionKind
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GroupVersionKind.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.group = reader.string();
                                        break;
                                    case 2:
                                        message.version = reader.string();
                                        break;
                                    case 3:
                                        message.kind = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GroupVersionKind message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind} GroupVersionKind
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GroupVersionKind.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GroupVersionKind message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GroupVersionKind.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.group != null && message.hasOwnProperty("group"))
                                    if (!$util.isString(message.group))
                                        return "group: string expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    if (!$util.isString(message.kind))
                                        return "kind: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a GroupVersionKind message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind} GroupVersionKind
                             */
                            GroupVersionKind.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind();
                                if (object.group != null)
                                    message.group = String(object.group);
                                if (object.version != null)
                                    message.version = String(object.version);
                                if (object.kind != null)
                                    message.kind = String(object.kind);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GroupVersionKind message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind} message GroupVersionKind
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GroupVersionKind.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.group = "";
                                    object.version = "";
                                    object.kind = "";
                                }
                                if (message.group != null && message.hasOwnProperty("group"))
                                    object.group = message.group;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                if (message.kind != null && message.hasOwnProperty("kind"))
                                    object.kind = message.kind;
                                return object;
                            };
    
                            /**
                             * Converts this GroupVersionKind to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GroupVersionKind
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GroupVersionKind.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GroupVersionKind;
                        })();
    
                        v1beta.PolicyControllerState = (function() {
    
                            /**
                             * Properties of a PolicyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IPolicyControllerState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerVersion|null} [version] PolicyControllerState version
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IGatekeeperDeploymentState|null} [deploymentState] PolicyControllerState deploymentState
                             */
    
                            /**
                             * Constructs a new PolicyControllerState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a PolicyControllerState.
                             * @implements IPolicyControllerState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerState=} [properties] Properties to set
                             */
                            function PolicyControllerState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyControllerState version.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @instance
                             */
                            PolicyControllerState.prototype.version = null;
    
                            /**
                             * PolicyControllerState deploymentState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IGatekeeperDeploymentState|null|undefined} deploymentState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @instance
                             */
                            PolicyControllerState.prototype.deploymentState = null;
    
                            /**
                             * Creates a new PolicyControllerState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState} PolicyControllerState instance
                             */
                            PolicyControllerState.create = function create(properties) {
                                return new PolicyControllerState(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyControllerState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerState} message PolicyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.encode(message.version, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.deploymentState != null && Object.hasOwnProperty.call(message, "deploymentState"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.encode(message.deploymentState, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyControllerState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerState} message PolicyControllerState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyControllerState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState} PolicyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyControllerState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState} PolicyControllerState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyControllerState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyControllerState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.verify(message.deploymentState);
                                    if (error)
                                        return "deploymentState." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a PolicyControllerState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState} PolicyControllerState
                             */
                            PolicyControllerState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState();
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.fromObject(object.version);
                                }
                                if (object.deploymentState != null) {
                                    if (typeof object.deploymentState !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState.deploymentState: object expected");
                                    message.deploymentState = $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.fromObject(object.deploymentState);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyControllerState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState} message PolicyControllerState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyControllerState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.version = null;
                                    object.deploymentState = null;
                                }
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.toObject(message.version, options);
                                if (message.deploymentState != null && message.hasOwnProperty("deploymentState"))
                                    object.deploymentState = $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.toObject(message.deploymentState, options);
                                return object;
                            };
    
                            /**
                             * Converts this PolicyControllerState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyControllerState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyControllerState;
                        })();
    
                        v1beta.PolicyControllerVersion = (function() {
    
                            /**
                             * Properties of a PolicyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IPolicyControllerVersion
                             * @property {string|null} [version] PolicyControllerVersion version
                             */
    
                            /**
                             * Constructs a new PolicyControllerVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a PolicyControllerVersion.
                             * @implements IPolicyControllerVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerVersion=} [properties] Properties to set
                             */
                            function PolicyControllerVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * PolicyControllerVersion version.
                             * @member {string} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @instance
                             */
                            PolicyControllerVersion.prototype.version = "";
    
                            /**
                             * Creates a new PolicyControllerVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion} PolicyControllerVersion instance
                             */
                            PolicyControllerVersion.create = function create(properties) {
                                return new PolicyControllerVersion(properties);
                            };
    
                            /**
                             * Encodes the specified PolicyControllerVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerVersion} message PolicyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.version);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified PolicyControllerVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IPolicyControllerVersion} message PolicyControllerVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            PolicyControllerVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a PolicyControllerVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion} PolicyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.version = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a PolicyControllerVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion} PolicyControllerVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            PolicyControllerVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a PolicyControllerVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            PolicyControllerVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    if (!$util.isString(message.version))
                                        return "version: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a PolicyControllerVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion} PolicyControllerVersion
                             */
                            PolicyControllerVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion();
                                if (object.version != null)
                                    message.version = String(object.version);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a PolicyControllerVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion} message PolicyControllerVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            PolicyControllerVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.version = "";
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = message.version;
                                return object;
                            };
    
                            /**
                             * Converts this PolicyControllerVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.PolicyControllerVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            PolicyControllerVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return PolicyControllerVersion;
                        })();
    
                        v1beta.BinauthzState = (function() {
    
                            /**
                             * Properties of a BinauthzState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IBinauthzState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [webhook] BinauthzState webhook
                             * @property {google.cloud.gkehub.configmanagement.v1beta.IBinauthzVersion|null} [version] BinauthzState version
                             */
    
                            /**
                             * Constructs a new BinauthzState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a BinauthzState.
                             * @implements IBinauthzState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzState=} [properties] Properties to set
                             */
                            function BinauthzState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BinauthzState webhook.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} webhook
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @instance
                             */
                            BinauthzState.prototype.webhook = 0;
    
                            /**
                             * BinauthzState version.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.IBinauthzVersion|null|undefined} version
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @instance
                             */
                            BinauthzState.prototype.version = null;
    
                            /**
                             * Creates a new BinauthzState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzState} BinauthzState instance
                             */
                            BinauthzState.create = function create(properties) {
                                return new BinauthzState(properties);
                            };
    
                            /**
                             * Encodes the specified BinauthzState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.BinauthzState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzState} message BinauthzState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.webhook != null && Object.hasOwnProperty.call(message, "webhook"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.webhook);
                                if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                    $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.encode(message.version, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BinauthzState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.BinauthzState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzState} message BinauthzState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BinauthzState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzState} BinauthzState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.webhook = reader.int32();
                                        break;
                                    case 2:
                                        message.version = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BinauthzState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzState} BinauthzState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BinauthzState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BinauthzState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.webhook != null && message.hasOwnProperty("webhook"))
                                    switch (message.webhook) {
                                    default:
                                        return "webhook: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.version != null && message.hasOwnProperty("version")) {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.verify(message.version);
                                    if (error)
                                        return "version." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates a BinauthzState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzState} BinauthzState
                             */
                            BinauthzState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzState();
                                switch (object.webhook) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.webhook = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.webhook = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.webhook = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.webhook = 3;
                                    break;
                                }
                                if (object.version != null) {
                                    if (typeof object.version !== "object")
                                        throw TypeError(".google.cloud.gkehub.configmanagement.v1beta.BinauthzState.version: object expected");
                                    message.version = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.fromObject(object.version);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BinauthzState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.BinauthzState} message BinauthzState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BinauthzState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.webhook = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.version = null;
                                }
                                if (message.webhook != null && message.hasOwnProperty("webhook"))
                                    object.webhook = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.webhook] : message.webhook;
                                if (message.version != null && message.hasOwnProperty("version"))
                                    object.version = $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.toObject(message.version, options);
                                return object;
                            };
    
                            /**
                             * Converts this BinauthzState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BinauthzState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return BinauthzState;
                        })();
    
                        v1beta.BinauthzVersion = (function() {
    
                            /**
                             * Properties of a BinauthzVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IBinauthzVersion
                             * @property {string|null} [webhookVersion] BinauthzVersion webhookVersion
                             */
    
                            /**
                             * Constructs a new BinauthzVersion.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a BinauthzVersion.
                             * @implements IBinauthzVersion
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzVersion=} [properties] Properties to set
                             */
                            function BinauthzVersion(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * BinauthzVersion webhookVersion.
                             * @member {string} webhookVersion
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @instance
                             */
                            BinauthzVersion.prototype.webhookVersion = "";
    
                            /**
                             * Creates a new BinauthzVersion instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzVersion=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion} BinauthzVersion instance
                             */
                            BinauthzVersion.create = function create(properties) {
                                return new BinauthzVersion(properties);
                            };
    
                            /**
                             * Encodes the specified BinauthzVersion message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzVersion} message BinauthzVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzVersion.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.webhookVersion != null && Object.hasOwnProperty.call(message, "webhookVersion"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.webhookVersion);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified BinauthzVersion message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IBinauthzVersion} message BinauthzVersion message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            BinauthzVersion.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a BinauthzVersion message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion} BinauthzVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzVersion.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.webhookVersion = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a BinauthzVersion message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion} BinauthzVersion
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            BinauthzVersion.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a BinauthzVersion message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            BinauthzVersion.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.webhookVersion != null && message.hasOwnProperty("webhookVersion"))
                                    if (!$util.isString(message.webhookVersion))
                                        return "webhookVersion: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a BinauthzVersion message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion} BinauthzVersion
                             */
                            BinauthzVersion.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion();
                                if (object.webhookVersion != null)
                                    message.webhookVersion = String(object.webhookVersion);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a BinauthzVersion message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion} message BinauthzVersion
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            BinauthzVersion.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.webhookVersion = "";
                                if (message.webhookVersion != null && message.hasOwnProperty("webhookVersion"))
                                    object.webhookVersion = message.webhookVersion;
                                return object;
                            };
    
                            /**
                             * Converts this BinauthzVersion to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.BinauthzVersion
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            BinauthzVersion.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return BinauthzVersion;
                        })();
    
                        v1beta.GatekeeperDeploymentState = (function() {
    
                            /**
                             * Properties of a GatekeeperDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @interface IGatekeeperDeploymentState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [gatekeeperControllerManagerState] GatekeeperDeploymentState gatekeeperControllerManagerState
                             * @property {google.cloud.gkehub.configmanagement.v1beta.DeploymentState|null} [gatekeeperAudit] GatekeeperDeploymentState gatekeeperAudit
                             */
    
                            /**
                             * Constructs a new GatekeeperDeploymentState.
                             * @memberof google.cloud.gkehub.configmanagement.v1beta
                             * @classdesc Represents a GatekeeperDeploymentState.
                             * @implements IGatekeeperDeploymentState
                             * @constructor
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGatekeeperDeploymentState=} [properties] Properties to set
                             */
                            function GatekeeperDeploymentState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * GatekeeperDeploymentState gatekeeperControllerManagerState.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} gatekeeperControllerManagerState
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperControllerManagerState = 0;
    
                            /**
                             * GatekeeperDeploymentState gatekeeperAudit.
                             * @member {google.cloud.gkehub.configmanagement.v1beta.DeploymentState} gatekeeperAudit
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @instance
                             */
                            GatekeeperDeploymentState.prototype.gatekeeperAudit = 0;
    
                            /**
                             * Creates a new GatekeeperDeploymentState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGatekeeperDeploymentState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState} GatekeeperDeploymentState instance
                             */
                            GatekeeperDeploymentState.create = function create(properties) {
                                return new GatekeeperDeploymentState(properties);
                            };
    
                            /**
                             * Encodes the specified GatekeeperDeploymentState message. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGatekeeperDeploymentState} message GatekeeperDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatekeeperDeploymentState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.gatekeeperControllerManagerState != null && Object.hasOwnProperty.call(message, "gatekeeperControllerManagerState"))
                                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.gatekeeperControllerManagerState);
                                if (message.gatekeeperAudit != null && Object.hasOwnProperty.call(message, "gatekeeperAudit"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.gatekeeperAudit);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified GatekeeperDeploymentState message, length delimited. Does not implicitly {@link google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.IGatekeeperDeploymentState} message GatekeeperDeploymentState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            GatekeeperDeploymentState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a GatekeeperDeploymentState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState} GatekeeperDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatekeeperDeploymentState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.gatekeeperControllerManagerState = reader.int32();
                                        break;
                                    case 2:
                                        message.gatekeeperAudit = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a GatekeeperDeploymentState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState} GatekeeperDeploymentState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            GatekeeperDeploymentState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a GatekeeperDeploymentState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            GatekeeperDeploymentState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.gatekeeperControllerManagerState != null && message.hasOwnProperty("gatekeeperControllerManagerState"))
                                    switch (message.gatekeeperControllerManagerState) {
                                    default:
                                        return "gatekeeperControllerManagerState: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                if (message.gatekeeperAudit != null && message.hasOwnProperty("gatekeeperAudit"))
                                    switch (message.gatekeeperAudit) {
                                    default:
                                        return "gatekeeperAudit: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                    case 3:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a GatekeeperDeploymentState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState} GatekeeperDeploymentState
                             */
                            GatekeeperDeploymentState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState();
                                switch (object.gatekeeperControllerManagerState) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperControllerManagerState = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperControllerManagerState = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperControllerManagerState = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperControllerManagerState = 3;
                                    break;
                                }
                                switch (object.gatekeeperAudit) {
                                case "DEPLOYMENT_STATE_UNSPECIFIED":
                                case 0:
                                    message.gatekeeperAudit = 0;
                                    break;
                                case "NOT_INSTALLED":
                                case 1:
                                    message.gatekeeperAudit = 1;
                                    break;
                                case "INSTALLED":
                                case 2:
                                    message.gatekeeperAudit = 2;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.gatekeeperAudit = 3;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a GatekeeperDeploymentState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @static
                             * @param {google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState} message GatekeeperDeploymentState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            GatekeeperDeploymentState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.gatekeeperControllerManagerState = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                    object.gatekeeperAudit = options.enums === String ? "DEPLOYMENT_STATE_UNSPECIFIED" : 0;
                                }
                                if (message.gatekeeperControllerManagerState != null && message.hasOwnProperty("gatekeeperControllerManagerState"))
                                    object.gatekeeperControllerManagerState = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.gatekeeperControllerManagerState] : message.gatekeeperControllerManagerState;
                                if (message.gatekeeperAudit != null && message.hasOwnProperty("gatekeeperAudit"))
                                    object.gatekeeperAudit = options.enums === String ? $root.google.cloud.gkehub.configmanagement.v1beta.DeploymentState[message.gatekeeperAudit] : message.gatekeeperAudit;
                                return object;
                            };
    
                            /**
                             * Converts this GatekeeperDeploymentState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.configmanagement.v1beta.GatekeeperDeploymentState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            GatekeeperDeploymentState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return GatekeeperDeploymentState;
                        })();
    
                        return v1beta;
                    })();
    
                    return configmanagement;
                })();
    
                gkehub.v1 = (function() {
    
                    /**
                     * Namespace v1.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var v1 = {};
    
                    v1.Feature = (function() {
    
                        /**
                         * Properties of a Feature.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IFeature
                         * @property {string|null} [name] Feature name
                         * @property {Object.<string,string>|null} [labels] Feature labels
                         * @property {google.cloud.gkehub.v1.IFeatureResourceState|null} [resourceState] Feature resourceState
                         * @property {google.cloud.gkehub.v1.ICommonFeatureSpec|null} [spec] Feature spec
                         * @property {Object.<string,google.cloud.gkehub.v1.IMembershipFeatureSpec>|null} [membershipSpecs] Feature membershipSpecs
                         * @property {google.cloud.gkehub.v1.ICommonFeatureState|null} [state] Feature state
                         * @property {Object.<string,google.cloud.gkehub.v1.IMembershipFeatureState>|null} [membershipStates] Feature membershipStates
                         * @property {google.protobuf.ITimestamp|null} [createTime] Feature createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Feature updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Feature deleteTime
                         */
    
                        /**
                         * Constructs a new Feature.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a Feature.
                         * @implements IFeature
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IFeature=} [properties] Properties to set
                         */
                        function Feature(properties) {
                            this.labels = {};
                            this.membershipSpecs = {};
                            this.membershipStates = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Feature name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.name = "";
    
                        /**
                         * Feature labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.labels = $util.emptyObject;
    
                        /**
                         * Feature resourceState.
                         * @member {google.cloud.gkehub.v1.IFeatureResourceState|null|undefined} resourceState
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.resourceState = null;
    
                        /**
                         * Feature spec.
                         * @member {google.cloud.gkehub.v1.ICommonFeatureSpec|null|undefined} spec
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.spec = null;
    
                        /**
                         * Feature membershipSpecs.
                         * @member {Object.<string,google.cloud.gkehub.v1.IMembershipFeatureSpec>} membershipSpecs
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.membershipSpecs = $util.emptyObject;
    
                        /**
                         * Feature state.
                         * @member {google.cloud.gkehub.v1.ICommonFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.state = null;
    
                        /**
                         * Feature membershipStates.
                         * @member {Object.<string,google.cloud.gkehub.v1.IMembershipFeatureState>} membershipStates
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.membershipStates = $util.emptyObject;
    
                        /**
                         * Feature createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.createTime = null;
    
                        /**
                         * Feature updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.updateTime = null;
    
                        /**
                         * Feature deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         */
                        Feature.prototype.deleteTime = null;
    
                        /**
                         * Creates a new Feature instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeature=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.Feature} Feature instance
                         */
                        Feature.create = function create(properties) {
                            return new Feature(properties);
                        };
    
                        /**
                         * Encodes the specified Feature message. Does not implicitly {@link google.cloud.gkehub.v1.Feature.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeature} message Feature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Feature.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.resourceState != null && Object.hasOwnProperty.call(message, "resourceState"))
                                $root.google.cloud.gkehub.v1.FeatureResourceState.encode(message.resourceState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.spec != null && Object.hasOwnProperty.call(message, "spec"))
                                $root.google.cloud.gkehub.v1.CommonFeatureSpec.encode(message.spec, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.membershipSpecs != null && Object.hasOwnProperty.call(message, "membershipSpecs"))
                                for (var keys = Object.keys(message.membershipSpecs), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.gkehub.v1.MembershipFeatureSpec.encode(message.membershipSpecs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1.CommonFeatureState.encode(message.state, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.membershipStates != null && Object.hasOwnProperty.call(message, "membershipStates"))
                                for (var keys = Object.keys(message.membershipStates), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.gkehub.v1.MembershipFeatureState.encode(message.membershipStates[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Feature message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.Feature.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeature} message Feature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Feature.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Feature message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.Feature} Feature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Feature.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.Feature(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                case 3:
                                    message.resourceState = $root.google.cloud.gkehub.v1.FeatureResourceState.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.spec = $root.google.cloud.gkehub.v1.CommonFeatureSpec.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    if (message.membershipSpecs === $util.emptyObject)
                                        message.membershipSpecs = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.cloud.gkehub.v1.MembershipFeatureSpec.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.membershipSpecs[key] = value;
                                    break;
                                case 6:
                                    message.state = $root.google.cloud.gkehub.v1.CommonFeatureState.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    if (message.membershipStates === $util.emptyObject)
                                        message.membershipStates = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.cloud.gkehub.v1.MembershipFeatureState.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.membershipStates[key] = value;
                                    break;
                                case 8:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Feature message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.Feature} Feature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Feature.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Feature message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Feature.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.resourceState != null && message.hasOwnProperty("resourceState")) {
                                var error = $root.google.cloud.gkehub.v1.FeatureResourceState.verify(message.resourceState);
                                if (error)
                                    return "resourceState." + error;
                            }
                            if (message.spec != null && message.hasOwnProperty("spec")) {
                                var error = $root.google.cloud.gkehub.v1.CommonFeatureSpec.verify(message.spec);
                                if (error)
                                    return "spec." + error;
                            }
                            if (message.membershipSpecs != null && message.hasOwnProperty("membershipSpecs")) {
                                if (!$util.isObject(message.membershipSpecs))
                                    return "membershipSpecs: object expected";
                                var key = Object.keys(message.membershipSpecs);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.MembershipFeatureSpec.verify(message.membershipSpecs[key[i]]);
                                    if (error)
                                        return "membershipSpecs." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1.CommonFeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            if (message.membershipStates != null && message.hasOwnProperty("membershipStates")) {
                                if (!$util.isObject(message.membershipStates))
                                    return "membershipStates: object expected";
                                var key = Object.keys(message.membershipStates);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.MembershipFeatureState.verify(message.membershipStates[key[i]]);
                                    if (error)
                                        return "membershipStates." + error;
                                }
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Feature message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.Feature} Feature
                         */
                        Feature.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.Feature)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.Feature();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.resourceState != null) {
                                if (typeof object.resourceState !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.resourceState: object expected");
                                message.resourceState = $root.google.cloud.gkehub.v1.FeatureResourceState.fromObject(object.resourceState);
                            }
                            if (object.spec != null) {
                                if (typeof object.spec !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.spec: object expected");
                                message.spec = $root.google.cloud.gkehub.v1.CommonFeatureSpec.fromObject(object.spec);
                            }
                            if (object.membershipSpecs) {
                                if (typeof object.membershipSpecs !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.membershipSpecs: object expected");
                                message.membershipSpecs = {};
                                for (var keys = Object.keys(object.membershipSpecs), i = 0; i < keys.length; ++i) {
                                    if (typeof object.membershipSpecs[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.Feature.membershipSpecs: object expected");
                                    message.membershipSpecs[keys[i]] = $root.google.cloud.gkehub.v1.MembershipFeatureSpec.fromObject(object.membershipSpecs[keys[i]]);
                                }
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1.CommonFeatureState.fromObject(object.state);
                            }
                            if (object.membershipStates) {
                                if (typeof object.membershipStates !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.membershipStates: object expected");
                                message.membershipStates = {};
                                for (var keys = Object.keys(object.membershipStates), i = 0; i < keys.length; ++i) {
                                    if (typeof object.membershipStates[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.Feature.membershipStates: object expected");
                                    message.membershipStates[keys[i]] = $root.google.cloud.gkehub.v1.MembershipFeatureState.fromObject(object.membershipStates[keys[i]]);
                                }
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Feature.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Feature message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1.Feature} message Feature
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Feature.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.membershipSpecs = {};
                                object.membershipStates = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.resourceState = null;
                                object.spec = null;
                                object.state = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.resourceState != null && message.hasOwnProperty("resourceState"))
                                object.resourceState = $root.google.cloud.gkehub.v1.FeatureResourceState.toObject(message.resourceState, options);
                            if (message.spec != null && message.hasOwnProperty("spec"))
                                object.spec = $root.google.cloud.gkehub.v1.CommonFeatureSpec.toObject(message.spec, options);
                            if (message.membershipSpecs && (keys2 = Object.keys(message.membershipSpecs)).length) {
                                object.membershipSpecs = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.membershipSpecs[keys2[j]] = $root.google.cloud.gkehub.v1.MembershipFeatureSpec.toObject(message.membershipSpecs[keys2[j]], options);
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1.CommonFeatureState.toObject(message.state, options);
                            if (message.membershipStates && (keys2 = Object.keys(message.membershipStates)).length) {
                                object.membershipStates = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.membershipStates[keys2[j]] = $root.google.cloud.gkehub.v1.MembershipFeatureState.toObject(message.membershipStates[keys2[j]], options);
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Feature to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.Feature
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Feature.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Feature;
                    })();
    
                    v1.FeatureResourceState = (function() {
    
                        /**
                         * Properties of a FeatureResourceState.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IFeatureResourceState
                         * @property {google.cloud.gkehub.v1.FeatureResourceState.State|null} [state] FeatureResourceState state
                         */
    
                        /**
                         * Constructs a new FeatureResourceState.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a FeatureResourceState.
                         * @implements IFeatureResourceState
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IFeatureResourceState=} [properties] Properties to set
                         */
                        function FeatureResourceState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FeatureResourceState state.
                         * @member {google.cloud.gkehub.v1.FeatureResourceState.State} state
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @instance
                         */
                        FeatureResourceState.prototype.state = 0;
    
                        /**
                         * Creates a new FeatureResourceState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeatureResourceState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.FeatureResourceState} FeatureResourceState instance
                         */
                        FeatureResourceState.create = function create(properties) {
                            return new FeatureResourceState(properties);
                        };
    
                        /**
                         * Encodes the specified FeatureResourceState message. Does not implicitly {@link google.cloud.gkehub.v1.FeatureResourceState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeatureResourceState} message FeatureResourceState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureResourceState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FeatureResourceState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.FeatureResourceState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeatureResourceState} message FeatureResourceState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureResourceState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FeatureResourceState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.FeatureResourceState} FeatureResourceState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureResourceState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.FeatureResourceState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.state = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FeatureResourceState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.FeatureResourceState} FeatureResourceState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureResourceState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FeatureResourceState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FeatureResourceState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a FeatureResourceState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.FeatureResourceState} FeatureResourceState
                         */
                        FeatureResourceState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.FeatureResourceState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.FeatureResourceState();
                            switch (object.state) {
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ENABLING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLING":
                            case 3:
                                message.state = 3;
                                break;
                            case "UPDATING":
                            case 4:
                                message.state = 4;
                                break;
                            case "SERVICE_UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FeatureResourceState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1.FeatureResourceState} message FeatureResourceState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FeatureResourceState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.gkehub.v1.FeatureResourceState.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this FeatureResourceState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.FeatureResourceState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FeatureResourceState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.gkehub.v1.FeatureResourceState.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ENABLING=1 ENABLING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} DISABLING=3 DISABLING value
                         * @property {number} UPDATING=4 UPDATING value
                         * @property {number} SERVICE_UPDATING=5 SERVICE_UPDATING value
                         */
                        FeatureResourceState.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "DISABLING"] = 3;
                            values[valuesById[4] = "UPDATING"] = 4;
                            values[valuesById[5] = "SERVICE_UPDATING"] = 5;
                            return values;
                        })();
    
                        return FeatureResourceState;
                    })();
    
                    v1.FeatureState = (function() {
    
                        /**
                         * Properties of a FeatureState.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IFeatureState
                         * @property {google.cloud.gkehub.v1.FeatureState.Code|null} [code] FeatureState code
                         * @property {string|null} [description] FeatureState description
                         * @property {google.protobuf.ITimestamp|null} [updateTime] FeatureState updateTime
                         */
    
                        /**
                         * Constructs a new FeatureState.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a FeatureState.
                         * @implements IFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IFeatureState=} [properties] Properties to set
                         */
                        function FeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FeatureState code.
                         * @member {google.cloud.gkehub.v1.FeatureState.Code} code
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.code = 0;
    
                        /**
                         * FeatureState description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.description = "";
    
                        /**
                         * FeatureState updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.updateTime = null;
    
                        /**
                         * Creates a new FeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.FeatureState} FeatureState instance
                         */
                        FeatureState.create = function create(properties) {
                            return new FeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified FeatureState message. Does not implicitly {@link google.cloud.gkehub.v1.FeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeatureState} message FeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.FeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.IFeatureState} message FeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.FeatureState} FeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.FeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                case 2:
                                    message.description = reader.string();
                                    break;
                                case 3:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.FeatureState} FeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.FeatureState} FeatureState
                         */
                        FeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.FeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.FeatureState();
                            switch (object.code) {
                            case "CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "OK":
                            case 1:
                                message.code = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.code = 2;
                                break;
                            case "ERROR":
                            case 3:
                                message.code = 3;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.FeatureState.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.FeatureState} message FeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.code = options.enums === String ? "CODE_UNSPECIFIED" : 0;
                                object.description = "";
                                object.updateTime = null;
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.gkehub.v1.FeatureState.Code[message.code] : message.code;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this FeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.FeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Code enum.
                         * @name google.cloud.gkehub.v1.FeatureState.Code
                         * @enum {number}
                         * @property {number} CODE_UNSPECIFIED=0 CODE_UNSPECIFIED value
                         * @property {number} OK=1 OK value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} ERROR=3 ERROR value
                         */
                        FeatureState.Code = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "OK"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            return values;
                        })();
    
                        return FeatureState;
                    })();
    
                    v1.CommonFeatureSpec = (function() {
    
                        /**
                         * Properties of a CommonFeatureSpec.
                         * @memberof google.cloud.gkehub.v1
                         * @interface ICommonFeatureSpec
                         * @property {google.cloud.gkehub.multiclusteringress.v1.IFeatureSpec|null} [multiclusteringress] CommonFeatureSpec multiclusteringress
                         */
    
                        /**
                         * Constructs a new CommonFeatureSpec.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a CommonFeatureSpec.
                         * @implements ICommonFeatureSpec
                         * @constructor
                         * @param {google.cloud.gkehub.v1.ICommonFeatureSpec=} [properties] Properties to set
                         */
                        function CommonFeatureSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonFeatureSpec multiclusteringress.
                         * @member {google.cloud.gkehub.multiclusteringress.v1.IFeatureSpec|null|undefined} multiclusteringress
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @instance
                         */
                        CommonFeatureSpec.prototype.multiclusteringress = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CommonFeatureSpec featureSpec.
                         * @member {"multiclusteringress"|undefined} featureSpec
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @instance
                         */
                        Object.defineProperty(CommonFeatureSpec.prototype, "featureSpec", {
                            get: $util.oneOfGetter($oneOfFields = ["multiclusteringress"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CommonFeatureSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.ICommonFeatureSpec=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.CommonFeatureSpec} CommonFeatureSpec instance
                         */
                        CommonFeatureSpec.create = function create(properties) {
                            return new CommonFeatureSpec(properties);
                        };
    
                        /**
                         * Encodes the specified CommonFeatureSpec message. Does not implicitly {@link google.cloud.gkehub.v1.CommonFeatureSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.ICommonFeatureSpec} message CommonFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.multiclusteringress != null && Object.hasOwnProperty.call(message, "multiclusteringress"))
                                $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.encode(message.multiclusteringress, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonFeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.CommonFeatureSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.ICommonFeatureSpec} message CommonFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonFeatureSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.CommonFeatureSpec} CommonFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.CommonFeatureSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 102:
                                    message.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonFeatureSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.CommonFeatureSpec} CommonFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonFeatureSpec message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonFeatureSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.multiclusteringress != null && message.hasOwnProperty("multiclusteringress")) {
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.verify(message.multiclusteringress);
                                    if (error)
                                        return "multiclusteringress." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonFeatureSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.CommonFeatureSpec} CommonFeatureSpec
                         */
                        CommonFeatureSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.CommonFeatureSpec)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.CommonFeatureSpec();
                            if (object.multiclusteringress != null) {
                                if (typeof object.multiclusteringress !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.CommonFeatureSpec.multiclusteringress: object expected");
                                message.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.fromObject(object.multiclusteringress);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonFeatureSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.CommonFeatureSpec} message CommonFeatureSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonFeatureSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.multiclusteringress != null && message.hasOwnProperty("multiclusteringress")) {
                                object.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.toObject(message.multiclusteringress, options);
                                if (options.oneofs)
                                    object.featureSpec = "multiclusteringress";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CommonFeatureSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.CommonFeatureSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonFeatureSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CommonFeatureSpec;
                    })();
    
                    v1.CommonFeatureState = (function() {
    
                        /**
                         * Properties of a CommonFeatureState.
                         * @memberof google.cloud.gkehub.v1
                         * @interface ICommonFeatureState
                         * @property {google.cloud.gkehub.v1.IFeatureState|null} [state] CommonFeatureState state
                         */
    
                        /**
                         * Constructs a new CommonFeatureState.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a CommonFeatureState.
                         * @implements ICommonFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1.ICommonFeatureState=} [properties] Properties to set
                         */
                        function CommonFeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonFeatureState state.
                         * @member {google.cloud.gkehub.v1.IFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @instance
                         */
                        CommonFeatureState.prototype.state = null;
    
                        /**
                         * Creates a new CommonFeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.ICommonFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.CommonFeatureState} CommonFeatureState instance
                         */
                        CommonFeatureState.create = function create(properties) {
                            return new CommonFeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified CommonFeatureState message. Does not implicitly {@link google.cloud.gkehub.v1.CommonFeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.ICommonFeatureState} message CommonFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1.FeatureState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonFeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.CommonFeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.ICommonFeatureState} message CommonFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonFeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.CommonFeatureState} CommonFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.CommonFeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.state = $root.google.cloud.gkehub.v1.FeatureState.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonFeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.CommonFeatureState} CommonFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonFeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonFeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1.FeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonFeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.CommonFeatureState} CommonFeatureState
                         */
                        CommonFeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.CommonFeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.CommonFeatureState();
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.CommonFeatureState.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1.FeatureState.fromObject(object.state);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonFeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.CommonFeatureState} message CommonFeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonFeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = null;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1.FeatureState.toObject(message.state, options);
                            return object;
                        };
    
                        /**
                         * Converts this CommonFeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.CommonFeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonFeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CommonFeatureState;
                    })();
    
                    v1.MembershipFeatureSpec = (function() {
    
                        /**
                         * Properties of a MembershipFeatureSpec.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IMembershipFeatureSpec
                         * @property {google.cloud.gkehub.configmanagement.v1.IMembershipSpec|null} [configmanagement] MembershipFeatureSpec configmanagement
                         */
    
                        /**
                         * Constructs a new MembershipFeatureSpec.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a MembershipFeatureSpec.
                         * @implements IMembershipFeatureSpec
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureSpec=} [properties] Properties to set
                         */
                        function MembershipFeatureSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipFeatureSpec configmanagement.
                         * @member {google.cloud.gkehub.configmanagement.v1.IMembershipSpec|null|undefined} configmanagement
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @instance
                         */
                        MembershipFeatureSpec.prototype.configmanagement = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipFeatureSpec featureSpec.
                         * @member {"configmanagement"|undefined} featureSpec
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @instance
                         */
                        Object.defineProperty(MembershipFeatureSpec.prototype, "featureSpec", {
                            get: $util.oneOfGetter($oneOfFields = ["configmanagement"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipFeatureSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureSpec=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureSpec} MembershipFeatureSpec instance
                         */
                        MembershipFeatureSpec.create = function create(properties) {
                            return new MembershipFeatureSpec(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureSpec message. Does not implicitly {@link google.cloud.gkehub.v1.MembershipFeatureSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureSpec} message MembershipFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.configmanagement != null && Object.hasOwnProperty.call(message, "configmanagement"))
                                $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.encode(message.configmanagement, writer.uint32(/* id 106, wireType 2 =*/850).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.MembershipFeatureSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureSpec} message MembershipFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipFeatureSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureSpec} MembershipFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.MembershipFeatureSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 106:
                                    message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipFeatureSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureSpec} MembershipFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipFeatureSpec message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipFeatureSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.verify(message.configmanagement);
                                    if (error)
                                        return "configmanagement." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipFeatureSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureSpec} MembershipFeatureSpec
                         */
                        MembershipFeatureSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.MembershipFeatureSpec)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.MembershipFeatureSpec();
                            if (object.configmanagement != null) {
                                if (typeof object.configmanagement !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.MembershipFeatureSpec.configmanagement: object expected");
                                message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.fromObject(object.configmanagement);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipFeatureSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1.MembershipFeatureSpec} message MembershipFeatureSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipFeatureSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                object.configmanagement = $root.google.cloud.gkehub.configmanagement.v1.MembershipSpec.toObject(message.configmanagement, options);
                                if (options.oneofs)
                                    object.featureSpec = "configmanagement";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipFeatureSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipFeatureSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipFeatureSpec;
                    })();
    
                    v1.MembershipFeatureState = (function() {
    
                        /**
                         * Properties of a MembershipFeatureState.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IMembershipFeatureState
                         * @property {google.cloud.gkehub.configmanagement.v1.IMembershipState|null} [configmanagement] MembershipFeatureState configmanagement
                         * @property {google.cloud.gkehub.v1.IFeatureState|null} [state] MembershipFeatureState state
                         */
    
                        /**
                         * Constructs a new MembershipFeatureState.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a MembershipFeatureState.
                         * @implements IMembershipFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureState=} [properties] Properties to set
                         */
                        function MembershipFeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipFeatureState configmanagement.
                         * @member {google.cloud.gkehub.configmanagement.v1.IMembershipState|null|undefined} configmanagement
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.configmanagement = null;
    
                        /**
                         * MembershipFeatureState state.
                         * @member {google.cloud.gkehub.v1.IFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.state = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipFeatureState featureState.
                         * @member {"configmanagement"|undefined} featureState
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @instance
                         */
                        Object.defineProperty(MembershipFeatureState.prototype, "featureState", {
                            get: $util.oneOfGetter($oneOfFields = ["configmanagement"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipFeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureState} MembershipFeatureState instance
                         */
                        MembershipFeatureState.create = function create(properties) {
                            return new MembershipFeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureState message. Does not implicitly {@link google.cloud.gkehub.v1.MembershipFeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureState} message MembershipFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1.FeatureState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.configmanagement != null && Object.hasOwnProperty.call(message, "configmanagement"))
                                $root.google.cloud.gkehub.configmanagement.v1.MembershipState.encode(message.configmanagement, writer.uint32(/* id 106, wireType 2 =*/850).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.MembershipFeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipFeatureState} message MembershipFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipFeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureState} MembershipFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.MembershipFeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 106:
                                    message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 1:
                                    message.state = $root.google.cloud.gkehub.v1.FeatureState.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipFeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureState} MembershipFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipFeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipFeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1.MembershipState.verify(message.configmanagement);
                                    if (error)
                                        return "configmanagement." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1.FeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipFeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.MembershipFeatureState} MembershipFeatureState
                         */
                        MembershipFeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.MembershipFeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.MembershipFeatureState();
                            if (object.configmanagement != null) {
                                if (typeof object.configmanagement !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.MembershipFeatureState.configmanagement: object expected");
                                message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1.MembershipState.fromObject(object.configmanagement);
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.MembershipFeatureState.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1.FeatureState.fromObject(object.state);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipFeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1.MembershipFeatureState} message MembershipFeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipFeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = null;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1.FeatureState.toObject(message.state, options);
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                object.configmanagement = $root.google.cloud.gkehub.configmanagement.v1.MembershipState.toObject(message.configmanagement, options);
                                if (options.oneofs)
                                    object.featureState = "configmanagement";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipFeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.MembershipFeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipFeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipFeatureState;
                    })();
    
                    v1.Membership = (function() {
    
                        /**
                         * Properties of a Membership.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IMembership
                         * @property {google.cloud.gkehub.v1.IMembershipEndpoint|null} [endpoint] Membership endpoint
                         * @property {string|null} [name] Membership name
                         * @property {Object.<string,string>|null} [labels] Membership labels
                         * @property {string|null} [description] Membership description
                         * @property {google.cloud.gkehub.v1.IMembershipState|null} [state] Membership state
                         * @property {google.protobuf.ITimestamp|null} [createTime] Membership createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Membership updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Membership deleteTime
                         * @property {string|null} [externalId] Membership externalId
                         * @property {google.protobuf.ITimestamp|null} [lastConnectionTime] Membership lastConnectionTime
                         * @property {string|null} [uniqueId] Membership uniqueId
                         * @property {google.cloud.gkehub.v1.IAuthority|null} [authority] Membership authority
                         */
    
                        /**
                         * Constructs a new Membership.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a Membership.
                         * @implements IMembership
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IMembership=} [properties] Properties to set
                         */
                        function Membership(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Membership endpoint.
                         * @member {google.cloud.gkehub.v1.IMembershipEndpoint|null|undefined} endpoint
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.endpoint = null;
    
                        /**
                         * Membership name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.name = "";
    
                        /**
                         * Membership labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.labels = $util.emptyObject;
    
                        /**
                         * Membership description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.description = "";
    
                        /**
                         * Membership state.
                         * @member {google.cloud.gkehub.v1.IMembershipState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.state = null;
    
                        /**
                         * Membership createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.createTime = null;
    
                        /**
                         * Membership updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.updateTime = null;
    
                        /**
                         * Membership deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.deleteTime = null;
    
                        /**
                         * Membership externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.externalId = "";
    
                        /**
                         * Membership lastConnectionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastConnectionTime
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.lastConnectionTime = null;
    
                        /**
                         * Membership uniqueId.
                         * @member {string} uniqueId
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.uniqueId = "";
    
                        /**
                         * Membership authority.
                         * @member {google.cloud.gkehub.v1.IAuthority|null|undefined} authority
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Membership.prototype.authority = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Membership type.
                         * @member {"endpoint"|undefined} type
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         */
                        Object.defineProperty(Membership.prototype, "type", {
                            get: $util.oneOfGetter($oneOfFields = ["endpoint"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Membership instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembership=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.Membership} Membership instance
                         */
                        Membership.create = function create(properties) {
                            return new Membership(properties);
                        };
    
                        /**
                         * Encodes the specified Membership message. Does not implicitly {@link google.cloud.gkehub.v1.Membership.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembership} message Membership message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Membership.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                                $root.google.cloud.gkehub.v1.MembershipEndpoint.encode(message.endpoint, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1.MembershipState.encode(message.state, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.externalId != null && Object.hasOwnProperty.call(message, "externalId"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.externalId);
                            if (message.lastConnectionTime != null && Object.hasOwnProperty.call(message, "lastConnectionTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastConnectionTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.uniqueId != null && Object.hasOwnProperty.call(message, "uniqueId"))
                                writer.uint32(/* id 11, wireType 2 =*/90).string(message.uniqueId);
                            if (message.authority != null && Object.hasOwnProperty.call(message, "authority"))
                                $root.google.cloud.gkehub.v1.Authority.encode(message.authority, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Membership message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.Membership.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembership} message Membership message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Membership.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Membership message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.Membership} Membership
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Membership.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.Membership(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4:
                                    message.endpoint = $root.google.cloud.gkehub.v1.MembershipEndpoint.decode(reader, reader.uint32());
                                    break;
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                case 3:
                                    message.description = reader.string();
                                    break;
                                case 5:
                                    message.state = $root.google.cloud.gkehub.v1.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.externalId = reader.string();
                                    break;
                                case 10:
                                    message.lastConnectionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.uniqueId = reader.string();
                                    break;
                                case 12:
                                    message.authority = $root.google.cloud.gkehub.v1.Authority.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Membership message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.Membership} Membership
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Membership.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Membership message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Membership.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.endpoint != null && message.hasOwnProperty("endpoint")) {
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1.MembershipEndpoint.verify(message.endpoint);
                                    if (error)
                                        return "endpoint." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1.MembershipState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.lastConnectionTime != null && message.hasOwnProperty("lastConnectionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastConnectionTime);
                                if (error)
                                    return "lastConnectionTime." + error;
                            }
                            if (message.uniqueId != null && message.hasOwnProperty("uniqueId"))
                                if (!$util.isString(message.uniqueId))
                                    return "uniqueId: string expected";
                            if (message.authority != null && message.hasOwnProperty("authority")) {
                                var error = $root.google.cloud.gkehub.v1.Authority.verify(message.authority);
                                if (error)
                                    return "authority." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Membership message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.Membership} Membership
                         */
                        Membership.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.Membership)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.Membership();
                            if (object.endpoint != null) {
                                if (typeof object.endpoint !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.endpoint: object expected");
                                message.endpoint = $root.google.cloud.gkehub.v1.MembershipEndpoint.fromObject(object.endpoint);
                            }
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1.MembershipState.fromObject(object.state);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            if (object.lastConnectionTime != null) {
                                if (typeof object.lastConnectionTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.lastConnectionTime: object expected");
                                message.lastConnectionTime = $root.google.protobuf.Timestamp.fromObject(object.lastConnectionTime);
                            }
                            if (object.uniqueId != null)
                                message.uniqueId = String(object.uniqueId);
                            if (object.authority != null) {
                                if (typeof object.authority !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.Membership.authority: object expected");
                                message.authority = $root.google.cloud.gkehub.v1.Authority.fromObject(object.authority);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Membership message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1.Membership} message Membership
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Membership.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.state = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.externalId = "";
                                object.lastConnectionTime = null;
                                object.uniqueId = "";
                                object.authority = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.endpoint != null && message.hasOwnProperty("endpoint")) {
                                object.endpoint = $root.google.cloud.gkehub.v1.MembershipEndpoint.toObject(message.endpoint, options);
                                if (options.oneofs)
                                    object.type = "endpoint";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1.MembershipState.toObject(message.state, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            if (message.lastConnectionTime != null && message.hasOwnProperty("lastConnectionTime"))
                                object.lastConnectionTime = $root.google.protobuf.Timestamp.toObject(message.lastConnectionTime, options);
                            if (message.uniqueId != null && message.hasOwnProperty("uniqueId"))
                                object.uniqueId = message.uniqueId;
                            if (message.authority != null && message.hasOwnProperty("authority"))
                                object.authority = $root.google.cloud.gkehub.v1.Authority.toObject(message.authority, options);
                            return object;
                        };
    
                        /**
                         * Converts this Membership to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.Membership
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Membership.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Membership;
                    })();
    
                    v1.MembershipEndpoint = (function() {
    
                        /**
                         * Properties of a MembershipEndpoint.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IMembershipEndpoint
                         * @property {google.cloud.gkehub.v1.IGkeCluster|null} [gkeCluster] MembershipEndpoint gkeCluster
                         * @property {google.cloud.gkehub.v1.IKubernetesMetadata|null} [kubernetesMetadata] MembershipEndpoint kubernetesMetadata
                         * @property {google.cloud.gkehub.v1.IKubernetesResource|null} [kubernetesResource] MembershipEndpoint kubernetesResource
                         */
    
                        /**
                         * Constructs a new MembershipEndpoint.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a MembershipEndpoint.
                         * @implements IMembershipEndpoint
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IMembershipEndpoint=} [properties] Properties to set
                         */
                        function MembershipEndpoint(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipEndpoint gkeCluster.
                         * @member {google.cloud.gkehub.v1.IGkeCluster|null|undefined} gkeCluster
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.gkeCluster = null;
    
                        /**
                         * MembershipEndpoint kubernetesMetadata.
                         * @member {google.cloud.gkehub.v1.IKubernetesMetadata|null|undefined} kubernetesMetadata
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.kubernetesMetadata = null;
    
                        /**
                         * MembershipEndpoint kubernetesResource.
                         * @member {google.cloud.gkehub.v1.IKubernetesResource|null|undefined} kubernetesResource
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.kubernetesResource = null;
    
                        /**
                         * Creates a new MembershipEndpoint instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipEndpoint=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.MembershipEndpoint} MembershipEndpoint instance
                         */
                        MembershipEndpoint.create = function create(properties) {
                            return new MembershipEndpoint(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipEndpoint message. Does not implicitly {@link google.cloud.gkehub.v1.MembershipEndpoint.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipEndpoint} message MembershipEndpoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipEndpoint.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gkeCluster != null && Object.hasOwnProperty.call(message, "gkeCluster"))
                                $root.google.cloud.gkehub.v1.GkeCluster.encode(message.gkeCluster, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.kubernetesMetadata != null && Object.hasOwnProperty.call(message, "kubernetesMetadata"))
                                $root.google.cloud.gkehub.v1.KubernetesMetadata.encode(message.kubernetesMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.kubernetesResource != null && Object.hasOwnProperty.call(message, "kubernetesResource"))
                                $root.google.cloud.gkehub.v1.KubernetesResource.encode(message.kubernetesResource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipEndpoint message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.MembershipEndpoint.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipEndpoint} message MembershipEndpoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipEndpoint.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipEndpoint message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.MembershipEndpoint} MembershipEndpoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipEndpoint.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.MembershipEndpoint();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.gkeCluster = $root.google.cloud.gkehub.v1.GkeCluster.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.kubernetesMetadata = $root.google.cloud.gkehub.v1.KubernetesMetadata.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.kubernetesResource = $root.google.cloud.gkehub.v1.KubernetesResource.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipEndpoint message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.MembershipEndpoint} MembershipEndpoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipEndpoint.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipEndpoint message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipEndpoint.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gkeCluster != null && message.hasOwnProperty("gkeCluster")) {
                                var error = $root.google.cloud.gkehub.v1.GkeCluster.verify(message.gkeCluster);
                                if (error)
                                    return "gkeCluster." + error;
                            }
                            if (message.kubernetesMetadata != null && message.hasOwnProperty("kubernetesMetadata")) {
                                var error = $root.google.cloud.gkehub.v1.KubernetesMetadata.verify(message.kubernetesMetadata);
                                if (error)
                                    return "kubernetesMetadata." + error;
                            }
                            if (message.kubernetesResource != null && message.hasOwnProperty("kubernetesResource")) {
                                var error = $root.google.cloud.gkehub.v1.KubernetesResource.verify(message.kubernetesResource);
                                if (error)
                                    return "kubernetesResource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipEndpoint message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.MembershipEndpoint} MembershipEndpoint
                         */
                        MembershipEndpoint.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.MembershipEndpoint)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.MembershipEndpoint();
                            if (object.gkeCluster != null) {
                                if (typeof object.gkeCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.MembershipEndpoint.gkeCluster: object expected");
                                message.gkeCluster = $root.google.cloud.gkehub.v1.GkeCluster.fromObject(object.gkeCluster);
                            }
                            if (object.kubernetesMetadata != null) {
                                if (typeof object.kubernetesMetadata !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.MembershipEndpoint.kubernetesMetadata: object expected");
                                message.kubernetesMetadata = $root.google.cloud.gkehub.v1.KubernetesMetadata.fromObject(object.kubernetesMetadata);
                            }
                            if (object.kubernetesResource != null) {
                                if (typeof object.kubernetesResource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.MembershipEndpoint.kubernetesResource: object expected");
                                message.kubernetesResource = $root.google.cloud.gkehub.v1.KubernetesResource.fromObject(object.kubernetesResource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipEndpoint message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1.MembershipEndpoint} message MembershipEndpoint
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipEndpoint.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.gkeCluster = null;
                                object.kubernetesMetadata = null;
                                object.kubernetesResource = null;
                            }
                            if (message.gkeCluster != null && message.hasOwnProperty("gkeCluster"))
                                object.gkeCluster = $root.google.cloud.gkehub.v1.GkeCluster.toObject(message.gkeCluster, options);
                            if (message.kubernetesMetadata != null && message.hasOwnProperty("kubernetesMetadata"))
                                object.kubernetesMetadata = $root.google.cloud.gkehub.v1.KubernetesMetadata.toObject(message.kubernetesMetadata, options);
                            if (message.kubernetesResource != null && message.hasOwnProperty("kubernetesResource"))
                                object.kubernetesResource = $root.google.cloud.gkehub.v1.KubernetesResource.toObject(message.kubernetesResource, options);
                            return object;
                        };
    
                        /**
                         * Converts this MembershipEndpoint to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.MembershipEndpoint
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipEndpoint.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipEndpoint;
                    })();
    
                    v1.KubernetesResource = (function() {
    
                        /**
                         * Properties of a KubernetesResource.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IKubernetesResource
                         * @property {string|null} [membershipCrManifest] KubernetesResource membershipCrManifest
                         * @property {Array.<google.cloud.gkehub.v1.IResourceManifest>|null} [membershipResources] KubernetesResource membershipResources
                         * @property {Array.<google.cloud.gkehub.v1.IResourceManifest>|null} [connectResources] KubernetesResource connectResources
                         * @property {google.cloud.gkehub.v1.IResourceOptions|null} [resourceOptions] KubernetesResource resourceOptions
                         */
    
                        /**
                         * Constructs a new KubernetesResource.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a KubernetesResource.
                         * @implements IKubernetesResource
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IKubernetesResource=} [properties] Properties to set
                         */
                        function KubernetesResource(properties) {
                            this.membershipResources = [];
                            this.connectResources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesResource membershipCrManifest.
                         * @member {string} membershipCrManifest
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.membershipCrManifest = "";
    
                        /**
                         * KubernetesResource membershipResources.
                         * @member {Array.<google.cloud.gkehub.v1.IResourceManifest>} membershipResources
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.membershipResources = $util.emptyArray;
    
                        /**
                         * KubernetesResource connectResources.
                         * @member {Array.<google.cloud.gkehub.v1.IResourceManifest>} connectResources
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.connectResources = $util.emptyArray;
    
                        /**
                         * KubernetesResource resourceOptions.
                         * @member {google.cloud.gkehub.v1.IResourceOptions|null|undefined} resourceOptions
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.resourceOptions = null;
    
                        /**
                         * Creates a new KubernetesResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1.IKubernetesResource=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.KubernetesResource} KubernetesResource instance
                         */
                        KubernetesResource.create = function create(properties) {
                            return new KubernetesResource(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesResource message. Does not implicitly {@link google.cloud.gkehub.v1.KubernetesResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1.IKubernetesResource} message KubernetesResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.membershipCrManifest != null && Object.hasOwnProperty.call(message, "membershipCrManifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.membershipCrManifest);
                            if (message.membershipResources != null && message.membershipResources.length)
                                for (var i = 0; i < message.membershipResources.length; ++i)
                                    $root.google.cloud.gkehub.v1.ResourceManifest.encode(message.membershipResources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.connectResources != null && message.connectResources.length)
                                for (var i = 0; i < message.connectResources.length; ++i)
                                    $root.google.cloud.gkehub.v1.ResourceManifest.encode(message.connectResources[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.resourceOptions != null && Object.hasOwnProperty.call(message, "resourceOptions"))
                                $root.google.cloud.gkehub.v1.ResourceOptions.encode(message.resourceOptions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.KubernetesResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1.IKubernetesResource} message KubernetesResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.KubernetesResource} KubernetesResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.KubernetesResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.membershipCrManifest = reader.string();
                                    break;
                                case 2:
                                    if (!(message.membershipResources && message.membershipResources.length))
                                        message.membershipResources = [];
                                    message.membershipResources.push($root.google.cloud.gkehub.v1.ResourceManifest.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    if (!(message.connectResources && message.connectResources.length))
                                        message.connectResources = [];
                                    message.connectResources.push($root.google.cloud.gkehub.v1.ResourceManifest.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    message.resourceOptions = $root.google.cloud.gkehub.v1.ResourceOptions.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.KubernetesResource} KubernetesResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesResource message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.membershipCrManifest != null && message.hasOwnProperty("membershipCrManifest"))
                                if (!$util.isString(message.membershipCrManifest))
                                    return "membershipCrManifest: string expected";
                            if (message.membershipResources != null && message.hasOwnProperty("membershipResources")) {
                                if (!Array.isArray(message.membershipResources))
                                    return "membershipResources: array expected";
                                for (var i = 0; i < message.membershipResources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.ResourceManifest.verify(message.membershipResources[i]);
                                    if (error)
                                        return "membershipResources." + error;
                                }
                            }
                            if (message.connectResources != null && message.hasOwnProperty("connectResources")) {
                                if (!Array.isArray(message.connectResources))
                                    return "connectResources: array expected";
                                for (var i = 0; i < message.connectResources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.ResourceManifest.verify(message.connectResources[i]);
                                    if (error)
                                        return "connectResources." + error;
                                }
                            }
                            if (message.resourceOptions != null && message.hasOwnProperty("resourceOptions")) {
                                var error = $root.google.cloud.gkehub.v1.ResourceOptions.verify(message.resourceOptions);
                                if (error)
                                    return "resourceOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.KubernetesResource} KubernetesResource
                         */
                        KubernetesResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.KubernetesResource)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.KubernetesResource();
                            if (object.membershipCrManifest != null)
                                message.membershipCrManifest = String(object.membershipCrManifest);
                            if (object.membershipResources) {
                                if (!Array.isArray(object.membershipResources))
                                    throw TypeError(".google.cloud.gkehub.v1.KubernetesResource.membershipResources: array expected");
                                message.membershipResources = [];
                                for (var i = 0; i < object.membershipResources.length; ++i) {
                                    if (typeof object.membershipResources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.KubernetesResource.membershipResources: object expected");
                                    message.membershipResources[i] = $root.google.cloud.gkehub.v1.ResourceManifest.fromObject(object.membershipResources[i]);
                                }
                            }
                            if (object.connectResources) {
                                if (!Array.isArray(object.connectResources))
                                    throw TypeError(".google.cloud.gkehub.v1.KubernetesResource.connectResources: array expected");
                                message.connectResources = [];
                                for (var i = 0; i < object.connectResources.length; ++i) {
                                    if (typeof object.connectResources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.KubernetesResource.connectResources: object expected");
                                    message.connectResources[i] = $root.google.cloud.gkehub.v1.ResourceManifest.fromObject(object.connectResources[i]);
                                }
                            }
                            if (object.resourceOptions != null) {
                                if (typeof object.resourceOptions !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.KubernetesResource.resourceOptions: object expected");
                                message.resourceOptions = $root.google.cloud.gkehub.v1.ResourceOptions.fromObject(object.resourceOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1.KubernetesResource} message KubernetesResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.membershipResources = [];
                                object.connectResources = [];
                            }
                            if (options.defaults) {
                                object.membershipCrManifest = "";
                                object.resourceOptions = null;
                            }
                            if (message.membershipCrManifest != null && message.hasOwnProperty("membershipCrManifest"))
                                object.membershipCrManifest = message.membershipCrManifest;
                            if (message.membershipResources && message.membershipResources.length) {
                                object.membershipResources = [];
                                for (var j = 0; j < message.membershipResources.length; ++j)
                                    object.membershipResources[j] = $root.google.cloud.gkehub.v1.ResourceManifest.toObject(message.membershipResources[j], options);
                            }
                            if (message.connectResources && message.connectResources.length) {
                                object.connectResources = [];
                                for (var j = 0; j < message.connectResources.length; ++j)
                                    object.connectResources[j] = $root.google.cloud.gkehub.v1.ResourceManifest.toObject(message.connectResources[j], options);
                            }
                            if (message.resourceOptions != null && message.hasOwnProperty("resourceOptions"))
                                object.resourceOptions = $root.google.cloud.gkehub.v1.ResourceOptions.toObject(message.resourceOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.KubernetesResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return KubernetesResource;
                    })();
    
                    v1.ResourceOptions = (function() {
    
                        /**
                         * Properties of a ResourceOptions.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IResourceOptions
                         * @property {string|null} [connectVersion] ResourceOptions connectVersion
                         * @property {boolean|null} [v1beta1Crd] ResourceOptions v1beta1Crd
                         * @property {string|null} [k8sVersion] ResourceOptions k8sVersion
                         */
    
                        /**
                         * Constructs a new ResourceOptions.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ResourceOptions.
                         * @implements IResourceOptions
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IResourceOptions=} [properties] Properties to set
                         */
                        function ResourceOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceOptions connectVersion.
                         * @member {string} connectVersion
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.connectVersion = "";
    
                        /**
                         * ResourceOptions v1beta1Crd.
                         * @member {boolean} v1beta1Crd
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.v1beta1Crd = false;
    
                        /**
                         * ResourceOptions k8sVersion.
                         * @member {string} k8sVersion
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.k8sVersion = "";
    
                        /**
                         * Creates a new ResourceOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1.IResourceOptions=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ResourceOptions} ResourceOptions instance
                         */
                        ResourceOptions.create = function create(properties) {
                            return new ResourceOptions(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceOptions message. Does not implicitly {@link google.cloud.gkehub.v1.ResourceOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1.IResourceOptions} message ResourceOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.connectVersion != null && Object.hasOwnProperty.call(message, "connectVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.connectVersion);
                            if (message.v1beta1Crd != null && Object.hasOwnProperty.call(message, "v1beta1Crd"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.v1beta1Crd);
                            if (message.k8sVersion != null && Object.hasOwnProperty.call(message, "k8sVersion"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.k8sVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceOptions message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ResourceOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1.IResourceOptions} message ResourceOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ResourceOptions} ResourceOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ResourceOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.connectVersion = reader.string();
                                    break;
                                case 2:
                                    message.v1beta1Crd = reader.bool();
                                    break;
                                case 3:
                                    message.k8sVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ResourceOptions} ResourceOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceOptions message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.connectVersion != null && message.hasOwnProperty("connectVersion"))
                                if (!$util.isString(message.connectVersion))
                                    return "connectVersion: string expected";
                            if (message.v1beta1Crd != null && message.hasOwnProperty("v1beta1Crd"))
                                if (typeof message.v1beta1Crd !== "boolean")
                                    return "v1beta1Crd: boolean expected";
                            if (message.k8sVersion != null && message.hasOwnProperty("k8sVersion"))
                                if (!$util.isString(message.k8sVersion))
                                    return "k8sVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ResourceOptions} ResourceOptions
                         */
                        ResourceOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ResourceOptions)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ResourceOptions();
                            if (object.connectVersion != null)
                                message.connectVersion = String(object.connectVersion);
                            if (object.v1beta1Crd != null)
                                message.v1beta1Crd = Boolean(object.v1beta1Crd);
                            if (object.k8sVersion != null)
                                message.k8sVersion = String(object.k8sVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1.ResourceOptions} message ResourceOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.connectVersion = "";
                                object.v1beta1Crd = false;
                                object.k8sVersion = "";
                            }
                            if (message.connectVersion != null && message.hasOwnProperty("connectVersion"))
                                object.connectVersion = message.connectVersion;
                            if (message.v1beta1Crd != null && message.hasOwnProperty("v1beta1Crd"))
                                object.v1beta1Crd = message.v1beta1Crd;
                            if (message.k8sVersion != null && message.hasOwnProperty("k8sVersion"))
                                object.k8sVersion = message.k8sVersion;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ResourceOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResourceOptions;
                    })();
    
                    v1.ResourceManifest = (function() {
    
                        /**
                         * Properties of a ResourceManifest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IResourceManifest
                         * @property {string|null} [manifest] ResourceManifest manifest
                         * @property {boolean|null} [clusterScoped] ResourceManifest clusterScoped
                         */
    
                        /**
                         * Constructs a new ResourceManifest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ResourceManifest.
                         * @implements IResourceManifest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IResourceManifest=} [properties] Properties to set
                         */
                        function ResourceManifest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceManifest manifest.
                         * @member {string} manifest
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @instance
                         */
                        ResourceManifest.prototype.manifest = "";
    
                        /**
                         * ResourceManifest clusterScoped.
                         * @member {boolean} clusterScoped
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @instance
                         */
                        ResourceManifest.prototype.clusterScoped = false;
    
                        /**
                         * Creates a new ResourceManifest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1.IResourceManifest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ResourceManifest} ResourceManifest instance
                         */
                        ResourceManifest.create = function create(properties) {
                            return new ResourceManifest(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceManifest message. Does not implicitly {@link google.cloud.gkehub.v1.ResourceManifest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1.IResourceManifest} message ResourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceManifest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.manifest != null && Object.hasOwnProperty.call(message, "manifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.manifest);
                            if (message.clusterScoped != null && Object.hasOwnProperty.call(message, "clusterScoped"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterScoped);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceManifest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ResourceManifest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1.IResourceManifest} message ResourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceManifest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceManifest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ResourceManifest} ResourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceManifest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ResourceManifest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.manifest = reader.string();
                                    break;
                                case 2:
                                    message.clusterScoped = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceManifest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ResourceManifest} ResourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceManifest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceManifest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceManifest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                if (!$util.isString(message.manifest))
                                    return "manifest: string expected";
                            if (message.clusterScoped != null && message.hasOwnProperty("clusterScoped"))
                                if (typeof message.clusterScoped !== "boolean")
                                    return "clusterScoped: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceManifest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ResourceManifest} ResourceManifest
                         */
                        ResourceManifest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ResourceManifest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ResourceManifest();
                            if (object.manifest != null)
                                message.manifest = String(object.manifest);
                            if (object.clusterScoped != null)
                                message.clusterScoped = Boolean(object.clusterScoped);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceManifest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1.ResourceManifest} message ResourceManifest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceManifest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.manifest = "";
                                object.clusterScoped = false;
                            }
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                object.manifest = message.manifest;
                            if (message.clusterScoped != null && message.hasOwnProperty("clusterScoped"))
                                object.clusterScoped = message.clusterScoped;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceManifest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ResourceManifest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceManifest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResourceManifest;
                    })();
    
                    v1.GkeCluster = (function() {
    
                        /**
                         * Properties of a GkeCluster.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IGkeCluster
                         * @property {string|null} [resourceLink] GkeCluster resourceLink
                         */
    
                        /**
                         * Constructs a new GkeCluster.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a GkeCluster.
                         * @implements IGkeCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IGkeCluster=} [properties] Properties to set
                         */
                        function GkeCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.resourceLink = "";
    
                        /**
                         * Creates a new GkeCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1.IGkeCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.GkeCluster} GkeCluster instance
                         */
                        GkeCluster.create = function create(properties) {
                            return new GkeCluster(properties);
                        };
    
                        /**
                         * Encodes the specified GkeCluster message. Does not implicitly {@link google.cloud.gkehub.v1.GkeCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.GkeCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.GkeCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GkeCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.GkeCluster} GkeCluster
                         */
                        GkeCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.GkeCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.GkeCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1.GkeCluster} message GkeCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.resourceLink = "";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            return object;
                        };
    
                        /**
                         * Converts this GkeCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.GkeCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GkeCluster;
                    })();
    
                    v1.KubernetesMetadata = (function() {
    
                        /**
                         * Properties of a KubernetesMetadata.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IKubernetesMetadata
                         * @property {string|null} [kubernetesApiServerVersion] KubernetesMetadata kubernetesApiServerVersion
                         * @property {string|null} [nodeProviderId] KubernetesMetadata nodeProviderId
                         * @property {number|null} [nodeCount] KubernetesMetadata nodeCount
                         * @property {number|null} [vcpuCount] KubernetesMetadata vcpuCount
                         * @property {number|null} [memoryMb] KubernetesMetadata memoryMb
                         * @property {google.protobuf.ITimestamp|null} [updateTime] KubernetesMetadata updateTime
                         */
    
                        /**
                         * Constructs a new KubernetesMetadata.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a KubernetesMetadata.
                         * @implements IKubernetesMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IKubernetesMetadata=} [properties] Properties to set
                         */
                        function KubernetesMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesMetadata kubernetesApiServerVersion.
                         * @member {string} kubernetesApiServerVersion
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.kubernetesApiServerVersion = "";
    
                        /**
                         * KubernetesMetadata nodeProviderId.
                         * @member {string} nodeProviderId
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.nodeProviderId = "";
    
                        /**
                         * KubernetesMetadata nodeCount.
                         * @member {number} nodeCount
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.nodeCount = 0;
    
                        /**
                         * KubernetesMetadata vcpuCount.
                         * @member {number} vcpuCount
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.vcpuCount = 0;
    
                        /**
                         * KubernetesMetadata memoryMb.
                         * @member {number} memoryMb
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.memoryMb = 0;
    
                        /**
                         * KubernetesMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new KubernetesMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.IKubernetesMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.KubernetesMetadata} KubernetesMetadata instance
                         */
                        KubernetesMetadata.create = function create(properties) {
                            return new KubernetesMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesMetadata message. Does not implicitly {@link google.cloud.gkehub.v1.KubernetesMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.IKubernetesMetadata} message KubernetesMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kubernetesApiServerVersion != null && Object.hasOwnProperty.call(message, "kubernetesApiServerVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kubernetesApiServerVersion);
                            if (message.nodeProviderId != null && Object.hasOwnProperty.call(message, "nodeProviderId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nodeProviderId);
                            if (message.nodeCount != null && Object.hasOwnProperty.call(message, "nodeCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nodeCount);
                            if (message.vcpuCount != null && Object.hasOwnProperty.call(message, "vcpuCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.vcpuCount);
                            if (message.memoryMb != null && Object.hasOwnProperty.call(message, "memoryMb"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.memoryMb);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.KubernetesMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.IKubernetesMetadata} message KubernetesMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.KubernetesMetadata} KubernetesMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.KubernetesMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kubernetesApiServerVersion = reader.string();
                                    break;
                                case 2:
                                    message.nodeProviderId = reader.string();
                                    break;
                                case 3:
                                    message.nodeCount = reader.int32();
                                    break;
                                case 4:
                                    message.vcpuCount = reader.int32();
                                    break;
                                case 5:
                                    message.memoryMb = reader.int32();
                                    break;
                                case 100:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.KubernetesMetadata} KubernetesMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kubernetesApiServerVersion != null && message.hasOwnProperty("kubernetesApiServerVersion"))
                                if (!$util.isString(message.kubernetesApiServerVersion))
                                    return "kubernetesApiServerVersion: string expected";
                            if (message.nodeProviderId != null && message.hasOwnProperty("nodeProviderId"))
                                if (!$util.isString(message.nodeProviderId))
                                    return "nodeProviderId: string expected";
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                if (!$util.isInteger(message.nodeCount))
                                    return "nodeCount: integer expected";
                            if (message.vcpuCount != null && message.hasOwnProperty("vcpuCount"))
                                if (!$util.isInteger(message.vcpuCount))
                                    return "vcpuCount: integer expected";
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                if (!$util.isInteger(message.memoryMb))
                                    return "memoryMb: integer expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.KubernetesMetadata} KubernetesMetadata
                         */
                        KubernetesMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.KubernetesMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.KubernetesMetadata();
                            if (object.kubernetesApiServerVersion != null)
                                message.kubernetesApiServerVersion = String(object.kubernetesApiServerVersion);
                            if (object.nodeProviderId != null)
                                message.nodeProviderId = String(object.nodeProviderId);
                            if (object.nodeCount != null)
                                message.nodeCount = object.nodeCount | 0;
                            if (object.vcpuCount != null)
                                message.vcpuCount = object.vcpuCount | 0;
                            if (object.memoryMb != null)
                                message.memoryMb = object.memoryMb | 0;
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.KubernetesMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.KubernetesMetadata} message KubernetesMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kubernetesApiServerVersion = "";
                                object.nodeProviderId = "";
                                object.nodeCount = 0;
                                object.vcpuCount = 0;
                                object.memoryMb = 0;
                                object.updateTime = null;
                            }
                            if (message.kubernetesApiServerVersion != null && message.hasOwnProperty("kubernetesApiServerVersion"))
                                object.kubernetesApiServerVersion = message.kubernetesApiServerVersion;
                            if (message.nodeProviderId != null && message.hasOwnProperty("nodeProviderId"))
                                object.nodeProviderId = message.nodeProviderId;
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                object.nodeCount = message.nodeCount;
                            if (message.vcpuCount != null && message.hasOwnProperty("vcpuCount"))
                                object.vcpuCount = message.vcpuCount;
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                object.memoryMb = message.memoryMb;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.KubernetesMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return KubernetesMetadata;
                    })();
    
                    v1.MembershipState = (function() {
    
                        /**
                         * Properties of a MembershipState.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IMembershipState
                         * @property {google.cloud.gkehub.v1.MembershipState.Code|null} [code] MembershipState code
                         */
    
                        /**
                         * Constructs a new MembershipState.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a MembershipState.
                         * @implements IMembershipState
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IMembershipState=} [properties] Properties to set
                         */
                        function MembershipState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipState code.
                         * @member {google.cloud.gkehub.v1.MembershipState.Code} code
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @instance
                         */
                        MembershipState.prototype.code = 0;
    
                        /**
                         * Creates a new MembershipState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.MembershipState} MembershipState instance
                         */
                        MembershipState.create = function create(properties) {
                            return new MembershipState(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.v1.MembershipState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipState} message MembershipState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.MembershipState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1.IMembershipState} message MembershipState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.MembershipState} MembershipState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.MembershipState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.MembershipState} MembershipState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.MembershipState} MembershipState
                         */
                        MembershipState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.MembershipState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.MembershipState();
                            switch (object.code) {
                            case "CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.code = 1;
                                break;
                            case "READY":
                            case 2:
                                message.code = 2;
                                break;
                            case "DELETING":
                            case 3:
                                message.code = 3;
                                break;
                            case "UPDATING":
                            case 4:
                                message.code = 4;
                                break;
                            case "SERVICE_UPDATING":
                            case 5:
                                message.code = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1.MembershipState} message MembershipState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.code = options.enums === String ? "CODE_UNSPECIFIED" : 0;
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.gkehub.v1.MembershipState.Code[message.code] : message.code;
                            return object;
                        };
    
                        /**
                         * Converts this MembershipState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.MembershipState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Code enum.
                         * @name google.cloud.gkehub.v1.MembershipState.Code
                         * @enum {number}
                         * @property {number} CODE_UNSPECIFIED=0 CODE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} READY=2 READY value
                         * @property {number} DELETING=3 DELETING value
                         * @property {number} UPDATING=4 UPDATING value
                         * @property {number} SERVICE_UPDATING=5 SERVICE_UPDATING value
                         */
                        MembershipState.Code = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "READY"] = 2;
                            values[valuesById[3] = "DELETING"] = 3;
                            values[valuesById[4] = "UPDATING"] = 4;
                            values[valuesById[5] = "SERVICE_UPDATING"] = 5;
                            return values;
                        })();
    
                        return MembershipState;
                    })();
    
                    v1.Authority = (function() {
    
                        /**
                         * Properties of an Authority.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IAuthority
                         * @property {string|null} [issuer] Authority issuer
                         * @property {string|null} [workloadIdentityPool] Authority workloadIdentityPool
                         * @property {string|null} [identityProvider] Authority identityProvider
                         * @property {Uint8Array|null} [oidcJwks] Authority oidcJwks
                         */
    
                        /**
                         * Constructs a new Authority.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents an Authority.
                         * @implements IAuthority
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IAuthority=} [properties] Properties to set
                         */
                        function Authority(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Authority issuer.
                         * @member {string} issuer
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @instance
                         */
                        Authority.prototype.issuer = "";
    
                        /**
                         * Authority workloadIdentityPool.
                         * @member {string} workloadIdentityPool
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @instance
                         */
                        Authority.prototype.workloadIdentityPool = "";
    
                        /**
                         * Authority identityProvider.
                         * @member {string} identityProvider
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @instance
                         */
                        Authority.prototype.identityProvider = "";
    
                        /**
                         * Authority oidcJwks.
                         * @member {Uint8Array} oidcJwks
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @instance
                         */
                        Authority.prototype.oidcJwks = $util.newBuffer([]);
    
                        /**
                         * Creates a new Authority instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1.IAuthority=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.Authority} Authority instance
                         */
                        Authority.create = function create(properties) {
                            return new Authority(properties);
                        };
    
                        /**
                         * Encodes the specified Authority message. Does not implicitly {@link google.cloud.gkehub.v1.Authority.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1.IAuthority} message Authority message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Authority.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.issuer != null && Object.hasOwnProperty.call(message, "issuer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.issuer);
                            if (message.workloadIdentityPool != null && Object.hasOwnProperty.call(message, "workloadIdentityPool"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.workloadIdentityPool);
                            if (message.identityProvider != null && Object.hasOwnProperty.call(message, "identityProvider"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.identityProvider);
                            if (message.oidcJwks != null && Object.hasOwnProperty.call(message, "oidcJwks"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.oidcJwks);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Authority message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.Authority.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1.IAuthority} message Authority message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Authority.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Authority message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.Authority} Authority
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Authority.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.Authority();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.issuer = reader.string();
                                    break;
                                case 2:
                                    message.workloadIdentityPool = reader.string();
                                    break;
                                case 3:
                                    message.identityProvider = reader.string();
                                    break;
                                case 4:
                                    message.oidcJwks = reader.bytes();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Authority message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.Authority} Authority
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Authority.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Authority message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Authority.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.issuer != null && message.hasOwnProperty("issuer"))
                                if (!$util.isString(message.issuer))
                                    return "issuer: string expected";
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                if (!$util.isString(message.workloadIdentityPool))
                                    return "workloadIdentityPool: string expected";
                            if (message.identityProvider != null && message.hasOwnProperty("identityProvider"))
                                if (!$util.isString(message.identityProvider))
                                    return "identityProvider: string expected";
                            if (message.oidcJwks != null && message.hasOwnProperty("oidcJwks"))
                                if (!(message.oidcJwks && typeof message.oidcJwks.length === "number" || $util.isString(message.oidcJwks)))
                                    return "oidcJwks: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an Authority message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.Authority} Authority
                         */
                        Authority.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.Authority)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.Authority();
                            if (object.issuer != null)
                                message.issuer = String(object.issuer);
                            if (object.workloadIdentityPool != null)
                                message.workloadIdentityPool = String(object.workloadIdentityPool);
                            if (object.identityProvider != null)
                                message.identityProvider = String(object.identityProvider);
                            if (object.oidcJwks != null)
                                if (typeof object.oidcJwks === "string")
                                    $util.base64.decode(object.oidcJwks, message.oidcJwks = $util.newBuffer($util.base64.length(object.oidcJwks)), 0);
                                else if (object.oidcJwks.length)
                                    message.oidcJwks = object.oidcJwks;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Authority message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1.Authority} message Authority
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Authority.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.issuer = "";
                                object.workloadIdentityPool = "";
                                object.identityProvider = "";
                                if (options.bytes === String)
                                    object.oidcJwks = "";
                                else {
                                    object.oidcJwks = [];
                                    if (options.bytes !== Array)
                                        object.oidcJwks = $util.newBuffer(object.oidcJwks);
                                }
                            }
                            if (message.issuer != null && message.hasOwnProperty("issuer"))
                                object.issuer = message.issuer;
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                object.workloadIdentityPool = message.workloadIdentityPool;
                            if (message.identityProvider != null && message.hasOwnProperty("identityProvider"))
                                object.identityProvider = message.identityProvider;
                            if (message.oidcJwks != null && message.hasOwnProperty("oidcJwks"))
                                object.oidcJwks = options.bytes === String ? $util.base64.encode(message.oidcJwks, 0, message.oidcJwks.length) : options.bytes === Array ? Array.prototype.slice.call(message.oidcJwks) : message.oidcJwks;
                            return object;
                        };
    
                        /**
                         * Converts this Authority to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.Authority
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Authority.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Authority;
                    })();
    
                    v1.GkeHub = (function() {
    
                        /**
                         * Constructs a new GkeHub service.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a GkeHub
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GkeHub(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GkeHub.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GkeHub;
    
                        /**
                         * Creates new GkeHub service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GkeHub} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GkeHub.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#listMemberships}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef ListMembershipsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1.ListMembershipsResponse} [response] ListMembershipsResponse
                         */
    
                        /**
                         * Calls ListMemberships.
                         * @function listMemberships
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IListMembershipsRequest} request ListMembershipsRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.ListMembershipsCallback} callback Node-style callback called with the error, if any, and ListMembershipsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.listMemberships = function listMemberships(request, callback) {
                            return this.rpcCall(listMemberships, $root.google.cloud.gkehub.v1.ListMembershipsRequest, $root.google.cloud.gkehub.v1.ListMembershipsResponse, request, callback);
                        }, "name", { value: "ListMemberships" });
    
                        /**
                         * Calls ListMemberships.
                         * @function listMemberships
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IListMembershipsRequest} request ListMembershipsRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1.ListMembershipsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#listFeatures}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef ListFeaturesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1.ListFeaturesResponse} [response] ListFeaturesResponse
                         */
    
                        /**
                         * Calls ListFeatures.
                         * @function listFeatures
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IListFeaturesRequest} request ListFeaturesRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.ListFeaturesCallback} callback Node-style callback called with the error, if any, and ListFeaturesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.listFeatures = function listFeatures(request, callback) {
                            return this.rpcCall(listFeatures, $root.google.cloud.gkehub.v1.ListFeaturesRequest, $root.google.cloud.gkehub.v1.ListFeaturesResponse, request, callback);
                        }, "name", { value: "ListFeatures" });
    
                        /**
                         * Calls ListFeatures.
                         * @function listFeatures
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IListFeaturesRequest} request ListFeaturesRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1.ListFeaturesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#getMembership}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef GetMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1.Membership} [response] Membership
                         */
    
                        /**
                         * Calls GetMembership.
                         * @function getMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IGetMembershipRequest} request GetMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.GetMembershipCallback} callback Node-style callback called with the error, if any, and Membership
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.getMembership = function getMembership(request, callback) {
                            return this.rpcCall(getMembership, $root.google.cloud.gkehub.v1.GetMembershipRequest, $root.google.cloud.gkehub.v1.Membership, request, callback);
                        }, "name", { value: "GetMembership" });
    
                        /**
                         * Calls GetMembership.
                         * @function getMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IGetMembershipRequest} request GetMembershipRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1.Membership>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#getFeature}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef GetFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1.Feature} [response] Feature
                         */
    
                        /**
                         * Calls GetFeature.
                         * @function getFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IGetFeatureRequest} request GetFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.GetFeatureCallback} callback Node-style callback called with the error, if any, and Feature
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.getFeature = function getFeature(request, callback) {
                            return this.rpcCall(getFeature, $root.google.cloud.gkehub.v1.GetFeatureRequest, $root.google.cloud.gkehub.v1.Feature, request, callback);
                        }, "name", { value: "GetFeature" });
    
                        /**
                         * Calls GetFeature.
                         * @function getFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IGetFeatureRequest} request GetFeatureRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1.Feature>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#createMembership}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef CreateMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateMembership.
                         * @function createMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.ICreateMembershipRequest} request CreateMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.CreateMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.createMembership = function createMembership(request, callback) {
                            return this.rpcCall(createMembership, $root.google.cloud.gkehub.v1.CreateMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateMembership" });
    
                        /**
                         * Calls CreateMembership.
                         * @function createMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.ICreateMembershipRequest} request CreateMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#createFeature}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef CreateFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFeature.
                         * @function createFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.ICreateFeatureRequest} request CreateFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.CreateFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.createFeature = function createFeature(request, callback) {
                            return this.rpcCall(createFeature, $root.google.cloud.gkehub.v1.CreateFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFeature" });
    
                        /**
                         * Calls CreateFeature.
                         * @function createFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.ICreateFeatureRequest} request CreateFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#deleteMembership}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef DeleteMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteMembership.
                         * @function deleteMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IDeleteMembershipRequest} request DeleteMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.DeleteMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.deleteMembership = function deleteMembership(request, callback) {
                            return this.rpcCall(deleteMembership, $root.google.cloud.gkehub.v1.DeleteMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteMembership" });
    
                        /**
                         * Calls DeleteMembership.
                         * @function deleteMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IDeleteMembershipRequest} request DeleteMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#deleteFeature}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef DeleteFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFeature.
                         * @function deleteFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IDeleteFeatureRequest} request DeleteFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.DeleteFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.deleteFeature = function deleteFeature(request, callback) {
                            return this.rpcCall(deleteFeature, $root.google.cloud.gkehub.v1.DeleteFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFeature" });
    
                        /**
                         * Calls DeleteFeature.
                         * @function deleteFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IDeleteFeatureRequest} request DeleteFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#updateMembership}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef UpdateMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateMembership.
                         * @function updateMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IUpdateMembershipRequest} request UpdateMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.UpdateMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.updateMembership = function updateMembership(request, callback) {
                            return this.rpcCall(updateMembership, $root.google.cloud.gkehub.v1.UpdateMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateMembership" });
    
                        /**
                         * Calls UpdateMembership.
                         * @function updateMembership
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IUpdateMembershipRequest} request UpdateMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#updateFeature}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef UpdateFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFeature.
                         * @function updateFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IUpdateFeatureRequest} request UpdateFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.UpdateFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.updateFeature = function updateFeature(request, callback) {
                            return this.rpcCall(updateFeature, $root.google.cloud.gkehub.v1.UpdateFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFeature" });
    
                        /**
                         * Calls UpdateFeature.
                         * @function updateFeature
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IUpdateFeatureRequest} request UpdateFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1.GkeHub#generateConnectManifest}.
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @typedef GenerateConnectManifestCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1.GenerateConnectManifestResponse} [response] GenerateConnectManifestResponse
                         */
    
                        /**
                         * Calls GenerateConnectManifest.
                         * @function generateConnectManifest
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestRequest} request GenerateConnectManifestRequest message or plain object
                         * @param {google.cloud.gkehub.v1.GkeHub.GenerateConnectManifestCallback} callback Node-style callback called with the error, if any, and GenerateConnectManifestResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.generateConnectManifest = function generateConnectManifest(request, callback) {
                            return this.rpcCall(generateConnectManifest, $root.google.cloud.gkehub.v1.GenerateConnectManifestRequest, $root.google.cloud.gkehub.v1.GenerateConnectManifestResponse, request, callback);
                        }, "name", { value: "GenerateConnectManifest" });
    
                        /**
                         * Calls GenerateConnectManifest.
                         * @function generateConnectManifest
                         * @memberof google.cloud.gkehub.v1.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestRequest} request GenerateConnectManifestRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1.GenerateConnectManifestResponse>} Promise
                         * @variation 2
                         */
    
                        return GkeHub;
                    })();
    
                    v1.ListMembershipsRequest = (function() {
    
                        /**
                         * Properties of a ListMembershipsRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IListMembershipsRequest
                         * @property {string|null} [parent] ListMembershipsRequest parent
                         * @property {number|null} [pageSize] ListMembershipsRequest pageSize
                         * @property {string|null} [pageToken] ListMembershipsRequest pageToken
                         * @property {string|null} [filter] ListMembershipsRequest filter
                         * @property {string|null} [orderBy] ListMembershipsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListMembershipsRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ListMembershipsRequest.
                         * @implements IListMembershipsRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IListMembershipsRequest=} [properties] Properties to set
                         */
                        function ListMembershipsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMembershipsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.parent = "";
    
                        /**
                         * ListMembershipsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMembershipsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.pageToken = "";
    
                        /**
                         * ListMembershipsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.filter = "";
    
                        /**
                         * ListMembershipsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListMembershipsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IListMembershipsRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ListMembershipsRequest} ListMembershipsRequest instance
                         */
                        ListMembershipsRequest.create = function create(properties) {
                            return new ListMembershipsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMembershipsRequest message. Does not implicitly {@link google.cloud.gkehub.v1.ListMembershipsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IListMembershipsRequest} message ListMembershipsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMembershipsRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ListMembershipsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IListMembershipsRequest} message ListMembershipsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMembershipsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ListMembershipsRequest} ListMembershipsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ListMembershipsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.filter = reader.string();
                                    break;
                                case 5:
                                    message.orderBy = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMembershipsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ListMembershipsRequest} ListMembershipsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMembershipsRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMembershipsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMembershipsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ListMembershipsRequest} ListMembershipsRequest
                         */
                        ListMembershipsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ListMembershipsRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ListMembershipsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMembershipsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ListMembershipsRequest} message ListMembershipsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMembershipsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListMembershipsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ListMembershipsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMembershipsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListMembershipsRequest;
                    })();
    
                    v1.ListMembershipsResponse = (function() {
    
                        /**
                         * Properties of a ListMembershipsResponse.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IListMembershipsResponse
                         * @property {Array.<google.cloud.gkehub.v1.IMembership>|null} [resources] ListMembershipsResponse resources
                         * @property {string|null} [nextPageToken] ListMembershipsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListMembershipsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListMembershipsResponse.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ListMembershipsResponse.
                         * @implements IListMembershipsResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IListMembershipsResponse=} [properties] Properties to set
                         */
                        function ListMembershipsResponse(properties) {
                            this.resources = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMembershipsResponse resources.
                         * @member {Array.<google.cloud.gkehub.v1.IMembership>} resources
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.resources = $util.emptyArray;
    
                        /**
                         * ListMembershipsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListMembershipsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListMembershipsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IListMembershipsResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ListMembershipsResponse} ListMembershipsResponse instance
                         */
                        ListMembershipsResponse.create = function create(properties) {
                            return new ListMembershipsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMembershipsResponse message. Does not implicitly {@link google.cloud.gkehub.v1.ListMembershipsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IListMembershipsResponse} message ListMembershipsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resources != null && message.resources.length)
                                for (var i = 0; i < message.resources.length; ++i)
                                    $root.google.cloud.gkehub.v1.Membership.encode(message.resources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMembershipsResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ListMembershipsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IListMembershipsResponse} message ListMembershipsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMembershipsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ListMembershipsResponse} ListMembershipsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ListMembershipsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.resources && message.resources.length))
                                        message.resources = [];
                                    message.resources.push($root.google.cloud.gkehub.v1.Membership.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    if (!(message.unreachable && message.unreachable.length))
                                        message.unreachable = [];
                                    message.unreachable.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMembershipsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ListMembershipsResponse} ListMembershipsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMembershipsResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMembershipsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                if (!Array.isArray(message.resources))
                                    return "resources: array expected";
                                for (var i = 0; i < message.resources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.Membership.verify(message.resources[i]);
                                    if (error)
                                        return "resources." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListMembershipsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ListMembershipsResponse} ListMembershipsResponse
                         */
                        ListMembershipsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ListMembershipsResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ListMembershipsResponse();
                            if (object.resources) {
                                if (!Array.isArray(object.resources))
                                    throw TypeError(".google.cloud.gkehub.v1.ListMembershipsResponse.resources: array expected");
                                message.resources = [];
                                for (var i = 0; i < object.resources.length; ++i) {
                                    if (typeof object.resources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.ListMembershipsResponse.resources: object expected");
                                    message.resources[i] = $root.google.cloud.gkehub.v1.Membership.fromObject(object.resources[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.gkehub.v1.ListMembershipsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMembershipsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.ListMembershipsResponse} message ListMembershipsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMembershipsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.resources = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.resources && message.resources.length) {
                                object.resources = [];
                                for (var j = 0; j < message.resources.length; ++j)
                                    object.resources[j] = $root.google.cloud.gkehub.v1.Membership.toObject(message.resources[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListMembershipsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ListMembershipsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMembershipsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListMembershipsResponse;
                    })();
    
                    v1.GetMembershipRequest = (function() {
    
                        /**
                         * Properties of a GetMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IGetMembershipRequest
                         * @property {string|null} [name] GetMembershipRequest name
                         */
    
                        /**
                         * Constructs a new GetMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a GetMembershipRequest.
                         * @implements IGetMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IGetMembershipRequest=} [properties] Properties to set
                         */
                        function GetMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @instance
                         */
                        GetMembershipRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGetMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.GetMembershipRequest} GetMembershipRequest instance
                         */
                        GetMembershipRequest.create = function create(properties) {
                            return new GetMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1.GetMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGetMembershipRequest} message GetMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.GetMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGetMembershipRequest} message GetMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.GetMembershipRequest} GetMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.GetMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.GetMembershipRequest} GetMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.GetMembershipRequest} GetMembershipRequest
                         */
                        GetMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.GetMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.GetMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.GetMembershipRequest} message GetMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.GetMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetMembershipRequest;
                    })();
    
                    v1.CreateMembershipRequest = (function() {
    
                        /**
                         * Properties of a CreateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface ICreateMembershipRequest
                         * @property {string|null} [parent] CreateMembershipRequest parent
                         * @property {string|null} [membershipId] CreateMembershipRequest membershipId
                         * @property {google.cloud.gkehub.v1.IMembership|null} [resource] CreateMembershipRequest resource
                         * @property {string|null} [requestId] CreateMembershipRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a CreateMembershipRequest.
                         * @implements ICreateMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.ICreateMembershipRequest=} [properties] Properties to set
                         */
                        function CreateMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateMembershipRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.parent = "";
    
                        /**
                         * CreateMembershipRequest membershipId.
                         * @member {string} membershipId
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.membershipId = "";
    
                        /**
                         * CreateMembershipRequest resource.
                         * @member {google.cloud.gkehub.v1.IMembership|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.resource = null;
    
                        /**
                         * CreateMembershipRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ICreateMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.CreateMembershipRequest} CreateMembershipRequest instance
                         */
                        CreateMembershipRequest.create = function create(properties) {
                            return new CreateMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1.CreateMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ICreateMembershipRequest} message CreateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.membershipId != null && Object.hasOwnProperty.call(message, "membershipId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.membershipId);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1.Membership.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.CreateMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ICreateMembershipRequest} message CreateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.CreateMembershipRequest} CreateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.CreateMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.membershipId = reader.string();
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1.Membership.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.CreateMembershipRequest} CreateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.membershipId != null && message.hasOwnProperty("membershipId"))
                                if (!$util.isString(message.membershipId))
                                    return "membershipId: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1.Membership.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.CreateMembershipRequest} CreateMembershipRequest
                         */
                        CreateMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.CreateMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.CreateMembershipRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.membershipId != null)
                                message.membershipId = String(object.membershipId);
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.CreateMembershipRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1.Membership.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.CreateMembershipRequest} message CreateMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.membershipId = "";
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.membershipId != null && message.hasOwnProperty("membershipId"))
                                object.membershipId = message.membershipId;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1.Membership.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.CreateMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateMembershipRequest;
                    })();
    
                    v1.DeleteMembershipRequest = (function() {
    
                        /**
                         * Properties of a DeleteMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IDeleteMembershipRequest
                         * @property {string|null} [name] DeleteMembershipRequest name
                         * @property {string|null} [requestId] DeleteMembershipRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a DeleteMembershipRequest.
                         * @implements IDeleteMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IDeleteMembershipRequest=} [properties] Properties to set
                         */
                        function DeleteMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @instance
                         */
                        DeleteMembershipRequest.prototype.name = "";
    
                        /**
                         * DeleteMembershipRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @instance
                         */
                        DeleteMembershipRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IDeleteMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.DeleteMembershipRequest} DeleteMembershipRequest instance
                         */
                        DeleteMembershipRequest.create = function create(properties) {
                            return new DeleteMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1.DeleteMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IDeleteMembershipRequest} message DeleteMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.DeleteMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IDeleteMembershipRequest} message DeleteMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.DeleteMembershipRequest} DeleteMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.DeleteMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.DeleteMembershipRequest} DeleteMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.DeleteMembershipRequest} DeleteMembershipRequest
                         */
                        DeleteMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.DeleteMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.DeleteMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.DeleteMembershipRequest} message DeleteMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.DeleteMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteMembershipRequest;
                    })();
    
                    v1.UpdateMembershipRequest = (function() {
    
                        /**
                         * Properties of an UpdateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IUpdateMembershipRequest
                         * @property {string|null} [name] UpdateMembershipRequest name
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateMembershipRequest updateMask
                         * @property {google.cloud.gkehub.v1.IMembership|null} [resource] UpdateMembershipRequest resource
                         * @property {string|null} [requestId] UpdateMembershipRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents an UpdateMembershipRequest.
                         * @implements IUpdateMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IUpdateMembershipRequest=} [properties] Properties to set
                         */
                        function UpdateMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.name = "";
    
                        /**
                         * UpdateMembershipRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateMembershipRequest resource.
                         * @member {google.cloud.gkehub.v1.IMembership|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.resource = null;
    
                        /**
                         * UpdateMembershipRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IUpdateMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.UpdateMembershipRequest} UpdateMembershipRequest instance
                         */
                        UpdateMembershipRequest.create = function create(properties) {
                            return new UpdateMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1.UpdateMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IUpdateMembershipRequest} message UpdateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1.Membership.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.UpdateMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IUpdateMembershipRequest} message UpdateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.UpdateMembershipRequest} UpdateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.UpdateMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1.Membership.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.UpdateMembershipRequest} UpdateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1.Membership.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.UpdateMembershipRequest} UpdateMembershipRequest
                         */
                        UpdateMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.UpdateMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.UpdateMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.UpdateMembershipRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.UpdateMembershipRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1.Membership.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.UpdateMembershipRequest} message UpdateMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateMask = null;
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1.Membership.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.UpdateMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateMembershipRequest;
                    })();
    
                    v1.GenerateConnectManifestRequest = (function() {
    
                        /**
                         * Properties of a GenerateConnectManifestRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IGenerateConnectManifestRequest
                         * @property {string|null} [name] GenerateConnectManifestRequest name
                         * @property {string|null} [namespace] GenerateConnectManifestRequest namespace
                         * @property {Uint8Array|null} [proxy] GenerateConnectManifestRequest proxy
                         * @property {string|null} [version] GenerateConnectManifestRequest version
                         * @property {boolean|null} [isUpgrade] GenerateConnectManifestRequest isUpgrade
                         * @property {string|null} [registry] GenerateConnectManifestRequest registry
                         * @property {Uint8Array|null} [imagePullSecretContent] GenerateConnectManifestRequest imagePullSecretContent
                         */
    
                        /**
                         * Constructs a new GenerateConnectManifestRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a GenerateConnectManifestRequest.
                         * @implements IGenerateConnectManifestRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestRequest=} [properties] Properties to set
                         */
                        function GenerateConnectManifestRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateConnectManifestRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.name = "";
    
                        /**
                         * GenerateConnectManifestRequest namespace.
                         * @member {string} namespace
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.namespace = "";
    
                        /**
                         * GenerateConnectManifestRequest proxy.
                         * @member {Uint8Array} proxy
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.proxy = $util.newBuffer([]);
    
                        /**
                         * GenerateConnectManifestRequest version.
                         * @member {string} version
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.version = "";
    
                        /**
                         * GenerateConnectManifestRequest isUpgrade.
                         * @member {boolean} isUpgrade
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.isUpgrade = false;
    
                        /**
                         * GenerateConnectManifestRequest registry.
                         * @member {string} registry
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.registry = "";
    
                        /**
                         * GenerateConnectManifestRequest imagePullSecretContent.
                         * @member {Uint8Array} imagePullSecretContent
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.imagePullSecretContent = $util.newBuffer([]);
    
                        /**
                         * Creates a new GenerateConnectManifestRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestRequest} GenerateConnectManifestRequest instance
                         */
                        GenerateConnectManifestRequest.create = function create(properties) {
                            return new GenerateConnectManifestRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestRequest message. Does not implicitly {@link google.cloud.gkehub.v1.GenerateConnectManifestRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestRequest} message GenerateConnectManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.namespace != null && Object.hasOwnProperty.call(message, "namespace"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.namespace);
                            if (message.proxy != null && Object.hasOwnProperty.call(message, "proxy"))
                                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.proxy);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.isUpgrade != null && Object.hasOwnProperty.call(message, "isUpgrade"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isUpgrade);
                            if (message.registry != null && Object.hasOwnProperty.call(message, "registry"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.registry);
                            if (message.imagePullSecretContent != null && Object.hasOwnProperty.call(message, "imagePullSecretContent"))
                                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.imagePullSecretContent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.GenerateConnectManifestRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestRequest} message GenerateConnectManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.GenerateConnectManifestRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.namespace = reader.string();
                                    break;
                                case 3:
                                    message.proxy = reader.bytes();
                                    break;
                                case 4:
                                    message.version = reader.string();
                                    break;
                                case 5:
                                    message.isUpgrade = reader.bool();
                                    break;
                                case 6:
                                    message.registry = reader.string();
                                    break;
                                case 7:
                                    message.imagePullSecretContent = reader.bytes();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateConnectManifestRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateConnectManifestRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.namespace != null && message.hasOwnProperty("namespace"))
                                if (!$util.isString(message.namespace))
                                    return "namespace: string expected";
                            if (message.proxy != null && message.hasOwnProperty("proxy"))
                                if (!(message.proxy && typeof message.proxy.length === "number" || $util.isString(message.proxy)))
                                    return "proxy: buffer expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.isUpgrade != null && message.hasOwnProperty("isUpgrade"))
                                if (typeof message.isUpgrade !== "boolean")
                                    return "isUpgrade: boolean expected";
                            if (message.registry != null && message.hasOwnProperty("registry"))
                                if (!$util.isString(message.registry))
                                    return "registry: string expected";
                            if (message.imagePullSecretContent != null && message.hasOwnProperty("imagePullSecretContent"))
                                if (!(message.imagePullSecretContent && typeof message.imagePullSecretContent.length === "number" || $util.isString(message.imagePullSecretContent)))
                                    return "imagePullSecretContent: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateConnectManifestRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         */
                        GenerateConnectManifestRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.GenerateConnectManifestRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.GenerateConnectManifestRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.namespace != null)
                                message.namespace = String(object.namespace);
                            if (object.proxy != null)
                                if (typeof object.proxy === "string")
                                    $util.base64.decode(object.proxy, message.proxy = $util.newBuffer($util.base64.length(object.proxy)), 0);
                                else if (object.proxy.length)
                                    message.proxy = object.proxy;
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.isUpgrade != null)
                                message.isUpgrade = Boolean(object.isUpgrade);
                            if (object.registry != null)
                                message.registry = String(object.registry);
                            if (object.imagePullSecretContent != null)
                                if (typeof object.imagePullSecretContent === "string")
                                    $util.base64.decode(object.imagePullSecretContent, message.imagePullSecretContent = $util.newBuffer($util.base64.length(object.imagePullSecretContent)), 0);
                                else if (object.imagePullSecretContent.length)
                                    message.imagePullSecretContent = object.imagePullSecretContent;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateConnectManifestRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.GenerateConnectManifestRequest} message GenerateConnectManifestRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateConnectManifestRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.namespace = "";
                                if (options.bytes === String)
                                    object.proxy = "";
                                else {
                                    object.proxy = [];
                                    if (options.bytes !== Array)
                                        object.proxy = $util.newBuffer(object.proxy);
                                }
                                object.version = "";
                                object.isUpgrade = false;
                                object.registry = "";
                                if (options.bytes === String)
                                    object.imagePullSecretContent = "";
                                else {
                                    object.imagePullSecretContent = [];
                                    if (options.bytes !== Array)
                                        object.imagePullSecretContent = $util.newBuffer(object.imagePullSecretContent);
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.namespace != null && message.hasOwnProperty("namespace"))
                                object.namespace = message.namespace;
                            if (message.proxy != null && message.hasOwnProperty("proxy"))
                                object.proxy = options.bytes === String ? $util.base64.encode(message.proxy, 0, message.proxy.length) : options.bytes === Array ? Array.prototype.slice.call(message.proxy) : message.proxy;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.isUpgrade != null && message.hasOwnProperty("isUpgrade"))
                                object.isUpgrade = message.isUpgrade;
                            if (message.registry != null && message.hasOwnProperty("registry"))
                                object.registry = message.registry;
                            if (message.imagePullSecretContent != null && message.hasOwnProperty("imagePullSecretContent"))
                                object.imagePullSecretContent = options.bytes === String ? $util.base64.encode(message.imagePullSecretContent, 0, message.imagePullSecretContent.length) : options.bytes === Array ? Array.prototype.slice.call(message.imagePullSecretContent) : message.imagePullSecretContent;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateConnectManifestRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateConnectManifestRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateConnectManifestRequest;
                    })();
    
                    v1.GenerateConnectManifestResponse = (function() {
    
                        /**
                         * Properties of a GenerateConnectManifestResponse.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IGenerateConnectManifestResponse
                         * @property {Array.<google.cloud.gkehub.v1.IConnectAgentResource>|null} [manifest] GenerateConnectManifestResponse manifest
                         */
    
                        /**
                         * Constructs a new GenerateConnectManifestResponse.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a GenerateConnectManifestResponse.
                         * @implements IGenerateConnectManifestResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestResponse=} [properties] Properties to set
                         */
                        function GenerateConnectManifestResponse(properties) {
                            this.manifest = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateConnectManifestResponse manifest.
                         * @member {Array.<google.cloud.gkehub.v1.IConnectAgentResource>} manifest
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @instance
                         */
                        GenerateConnectManifestResponse.prototype.manifest = $util.emptyArray;
    
                        /**
                         * Creates a new GenerateConnectManifestResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestResponse} GenerateConnectManifestResponse instance
                         */
                        GenerateConnectManifestResponse.create = function create(properties) {
                            return new GenerateConnectManifestResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestResponse message. Does not implicitly {@link google.cloud.gkehub.v1.GenerateConnectManifestResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestResponse} message GenerateConnectManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.manifest != null && message.manifest.length)
                                for (var i = 0; i < message.manifest.length; ++i)
                                    $root.google.cloud.gkehub.v1.ConnectAgentResource.encode(message.manifest[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.GenerateConnectManifestResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IGenerateConnectManifestResponse} message GenerateConnectManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.GenerateConnectManifestResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.manifest && message.manifest.length))
                                        message.manifest = [];
                                    message.manifest.push($root.google.cloud.gkehub.v1.ConnectAgentResource.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateConnectManifestResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateConnectManifestResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.manifest != null && message.hasOwnProperty("manifest")) {
                                if (!Array.isArray(message.manifest))
                                    return "manifest: array expected";
                                for (var i = 0; i < message.manifest.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.ConnectAgentResource.verify(message.manifest[i]);
                                    if (error)
                                        return "manifest." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateConnectManifestResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         */
                        GenerateConnectManifestResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.GenerateConnectManifestResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.GenerateConnectManifestResponse();
                            if (object.manifest) {
                                if (!Array.isArray(object.manifest))
                                    throw TypeError(".google.cloud.gkehub.v1.GenerateConnectManifestResponse.manifest: array expected");
                                message.manifest = [];
                                for (var i = 0; i < object.manifest.length; ++i) {
                                    if (typeof object.manifest[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.GenerateConnectManifestResponse.manifest: object expected");
                                    message.manifest[i] = $root.google.cloud.gkehub.v1.ConnectAgentResource.fromObject(object.manifest[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateConnectManifestResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.GenerateConnectManifestResponse} message GenerateConnectManifestResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateConnectManifestResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.manifest = [];
                            if (message.manifest && message.manifest.length) {
                                object.manifest = [];
                                for (var j = 0; j < message.manifest.length; ++j)
                                    object.manifest[j] = $root.google.cloud.gkehub.v1.ConnectAgentResource.toObject(message.manifest[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerateConnectManifestResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.GenerateConnectManifestResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateConnectManifestResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateConnectManifestResponse;
                    })();
    
                    v1.ConnectAgentResource = (function() {
    
                        /**
                         * Properties of a ConnectAgentResource.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IConnectAgentResource
                         * @property {google.cloud.gkehub.v1.ITypeMeta|null} [type] ConnectAgentResource type
                         * @property {string|null} [manifest] ConnectAgentResource manifest
                         */
    
                        /**
                         * Constructs a new ConnectAgentResource.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ConnectAgentResource.
                         * @implements IConnectAgentResource
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IConnectAgentResource=} [properties] Properties to set
                         */
                        function ConnectAgentResource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConnectAgentResource type.
                         * @member {google.cloud.gkehub.v1.ITypeMeta|null|undefined} type
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @instance
                         */
                        ConnectAgentResource.prototype.type = null;
    
                        /**
                         * ConnectAgentResource manifest.
                         * @member {string} manifest
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @instance
                         */
                        ConnectAgentResource.prototype.manifest = "";
    
                        /**
                         * Creates a new ConnectAgentResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1.IConnectAgentResource=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ConnectAgentResource} ConnectAgentResource instance
                         */
                        ConnectAgentResource.create = function create(properties) {
                            return new ConnectAgentResource(properties);
                        };
    
                        /**
                         * Encodes the specified ConnectAgentResource message. Does not implicitly {@link google.cloud.gkehub.v1.ConnectAgentResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1.IConnectAgentResource} message ConnectAgentResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgentResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                $root.google.cloud.gkehub.v1.TypeMeta.encode(message.type, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.manifest != null && Object.hasOwnProperty.call(message, "manifest"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.manifest);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConnectAgentResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ConnectAgentResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1.IConnectAgentResource} message ConnectAgentResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgentResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConnectAgentResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ConnectAgentResource} ConnectAgentResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgentResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ConnectAgentResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = $root.google.cloud.gkehub.v1.TypeMeta.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.manifest = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConnectAgentResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ConnectAgentResource} ConnectAgentResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgentResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConnectAgentResource message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConnectAgentResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type")) {
                                var error = $root.google.cloud.gkehub.v1.TypeMeta.verify(message.type);
                                if (error)
                                    return "type." + error;
                            }
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                if (!$util.isString(message.manifest))
                                    return "manifest: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConnectAgentResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ConnectAgentResource} ConnectAgentResource
                         */
                        ConnectAgentResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ConnectAgentResource)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ConnectAgentResource();
                            if (object.type != null) {
                                if (typeof object.type !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.ConnectAgentResource.type: object expected");
                                message.type = $root.google.cloud.gkehub.v1.TypeMeta.fromObject(object.type);
                            }
                            if (object.manifest != null)
                                message.manifest = String(object.manifest);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConnectAgentResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1.ConnectAgentResource} message ConnectAgentResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConnectAgentResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = null;
                                object.manifest = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = $root.google.cloud.gkehub.v1.TypeMeta.toObject(message.type, options);
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                object.manifest = message.manifest;
                            return object;
                        };
    
                        /**
                         * Converts this ConnectAgentResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ConnectAgentResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConnectAgentResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ConnectAgentResource;
                    })();
    
                    v1.TypeMeta = (function() {
    
                        /**
                         * Properties of a TypeMeta.
                         * @memberof google.cloud.gkehub.v1
                         * @interface ITypeMeta
                         * @property {string|null} [kind] TypeMeta kind
                         * @property {string|null} [apiVersion] TypeMeta apiVersion
                         */
    
                        /**
                         * Constructs a new TypeMeta.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a TypeMeta.
                         * @implements ITypeMeta
                         * @constructor
                         * @param {google.cloud.gkehub.v1.ITypeMeta=} [properties] Properties to set
                         */
                        function TypeMeta(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TypeMeta kind.
                         * @member {string} kind
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @instance
                         */
                        TypeMeta.prototype.kind = "";
    
                        /**
                         * TypeMeta apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @instance
                         */
                        TypeMeta.prototype.apiVersion = "";
    
                        /**
                         * Creates a new TypeMeta instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1.ITypeMeta=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.TypeMeta} TypeMeta instance
                         */
                        TypeMeta.create = function create(properties) {
                            return new TypeMeta(properties);
                        };
    
                        /**
                         * Encodes the specified TypeMeta message. Does not implicitly {@link google.cloud.gkehub.v1.TypeMeta.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1.ITypeMeta} message TypeMeta message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TypeMeta.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TypeMeta message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.TypeMeta.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1.ITypeMeta} message TypeMeta message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TypeMeta.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TypeMeta message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.TypeMeta} TypeMeta
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TypeMeta.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.TypeMeta();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TypeMeta message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.TypeMeta} TypeMeta
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TypeMeta.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TypeMeta message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TypeMeta.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TypeMeta message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.TypeMeta} TypeMeta
                         */
                        TypeMeta.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.TypeMeta)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.TypeMeta();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TypeMeta message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1.TypeMeta} message TypeMeta
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TypeMeta.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.apiVersion = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this TypeMeta to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.TypeMeta
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TypeMeta.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return TypeMeta;
                    })();
    
                    v1.ListFeaturesRequest = (function() {
    
                        /**
                         * Properties of a ListFeaturesRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IListFeaturesRequest
                         * @property {string|null} [parent] ListFeaturesRequest parent
                         * @property {number|null} [pageSize] ListFeaturesRequest pageSize
                         * @property {string|null} [pageToken] ListFeaturesRequest pageToken
                         * @property {string|null} [filter] ListFeaturesRequest filter
                         * @property {string|null} [orderBy] ListFeaturesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFeaturesRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ListFeaturesRequest.
                         * @implements IListFeaturesRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IListFeaturesRequest=} [properties] Properties to set
                         */
                        function ListFeaturesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFeaturesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.parent = "";
    
                        /**
                         * ListFeaturesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFeaturesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.pageToken = "";
    
                        /**
                         * ListFeaturesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.filter = "";
    
                        /**
                         * ListFeaturesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFeaturesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IListFeaturesRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ListFeaturesRequest} ListFeaturesRequest instance
                         */
                        ListFeaturesRequest.create = function create(properties) {
                            return new ListFeaturesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFeaturesRequest message. Does not implicitly {@link google.cloud.gkehub.v1.ListFeaturesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IListFeaturesRequest} message ListFeaturesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFeaturesRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ListFeaturesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IListFeaturesRequest} message ListFeaturesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFeaturesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ListFeaturesRequest} ListFeaturesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ListFeaturesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.filter = reader.string();
                                    break;
                                case 5:
                                    message.orderBy = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFeaturesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ListFeaturesRequest} ListFeaturesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFeaturesRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFeaturesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFeaturesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ListFeaturesRequest} ListFeaturesRequest
                         */
                        ListFeaturesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ListFeaturesRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ListFeaturesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFeaturesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ListFeaturesRequest} message ListFeaturesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFeaturesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFeaturesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ListFeaturesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFeaturesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListFeaturesRequest;
                    })();
    
                    v1.ListFeaturesResponse = (function() {
    
                        /**
                         * Properties of a ListFeaturesResponse.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IListFeaturesResponse
                         * @property {Array.<google.cloud.gkehub.v1.IFeature>|null} [resources] ListFeaturesResponse resources
                         * @property {string|null} [nextPageToken] ListFeaturesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListFeaturesResponse.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a ListFeaturesResponse.
                         * @implements IListFeaturesResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IListFeaturesResponse=} [properties] Properties to set
                         */
                        function ListFeaturesResponse(properties) {
                            this.resources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFeaturesResponse resources.
                         * @member {Array.<google.cloud.gkehub.v1.IFeature>} resources
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @instance
                         */
                        ListFeaturesResponse.prototype.resources = $util.emptyArray;
    
                        /**
                         * ListFeaturesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @instance
                         */
                        ListFeaturesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListFeaturesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IListFeaturesResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.ListFeaturesResponse} ListFeaturesResponse instance
                         */
                        ListFeaturesResponse.create = function create(properties) {
                            return new ListFeaturesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFeaturesResponse message. Does not implicitly {@link google.cloud.gkehub.v1.ListFeaturesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IListFeaturesResponse} message ListFeaturesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resources != null && message.resources.length)
                                for (var i = 0; i < message.resources.length; ++i)
                                    $root.google.cloud.gkehub.v1.Feature.encode(message.resources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFeaturesResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.ListFeaturesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.IListFeaturesResponse} message ListFeaturesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFeaturesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.ListFeaturesResponse} ListFeaturesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.ListFeaturesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.resources && message.resources.length))
                                        message.resources = [];
                                    message.resources.push($root.google.cloud.gkehub.v1.Feature.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFeaturesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.ListFeaturesResponse} ListFeaturesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFeaturesResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFeaturesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                if (!Array.isArray(message.resources))
                                    return "resources: array expected";
                                for (var i = 0; i < message.resources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1.Feature.verify(message.resources[i]);
                                    if (error)
                                        return "resources." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFeaturesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.ListFeaturesResponse} ListFeaturesResponse
                         */
                        ListFeaturesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.ListFeaturesResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.ListFeaturesResponse();
                            if (object.resources) {
                                if (!Array.isArray(object.resources))
                                    throw TypeError(".google.cloud.gkehub.v1.ListFeaturesResponse.resources: array expected");
                                message.resources = [];
                                for (var i = 0; i < object.resources.length; ++i) {
                                    if (typeof object.resources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1.ListFeaturesResponse.resources: object expected");
                                    message.resources[i] = $root.google.cloud.gkehub.v1.Feature.fromObject(object.resources[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFeaturesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1.ListFeaturesResponse} message ListFeaturesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFeaturesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.resources = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.resources && message.resources.length) {
                                object.resources = [];
                                for (var j = 0; j < message.resources.length; ++j)
                                    object.resources[j] = $root.google.cloud.gkehub.v1.Feature.toObject(message.resources[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFeaturesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.ListFeaturesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFeaturesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListFeaturesResponse;
                    })();
    
                    v1.GetFeatureRequest = (function() {
    
                        /**
                         * Properties of a GetFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IGetFeatureRequest
                         * @property {string|null} [name] GetFeatureRequest name
                         */
    
                        /**
                         * Constructs a new GetFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a GetFeatureRequest.
                         * @implements IGetFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IGetFeatureRequest=} [properties] Properties to set
                         */
                        function GetFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @instance
                         */
                        GetFeatureRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGetFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.GetFeatureRequest} GetFeatureRequest instance
                         */
                        GetFeatureRequest.create = function create(properties) {
                            return new GetFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1.GetFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGetFeatureRequest} message GetFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.GetFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IGetFeatureRequest} message GetFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.GetFeatureRequest} GetFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.GetFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.GetFeatureRequest} GetFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.GetFeatureRequest} GetFeatureRequest
                         */
                        GetFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.GetFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.GetFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.GetFeatureRequest} message GetFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.GetFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetFeatureRequest;
                    })();
    
                    v1.CreateFeatureRequest = (function() {
    
                        /**
                         * Properties of a CreateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface ICreateFeatureRequest
                         * @property {string|null} [parent] CreateFeatureRequest parent
                         * @property {string|null} [featureId] CreateFeatureRequest featureId
                         * @property {google.cloud.gkehub.v1.IFeature|null} [resource] CreateFeatureRequest resource
                         * @property {string|null} [requestId] CreateFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a CreateFeatureRequest.
                         * @implements ICreateFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.ICreateFeatureRequest=} [properties] Properties to set
                         */
                        function CreateFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFeatureRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.parent = "";
    
                        /**
                         * CreateFeatureRequest featureId.
                         * @member {string} featureId
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.featureId = "";
    
                        /**
                         * CreateFeatureRequest resource.
                         * @member {google.cloud.gkehub.v1.IFeature|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.resource = null;
    
                        /**
                         * CreateFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ICreateFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.CreateFeatureRequest} CreateFeatureRequest instance
                         */
                        CreateFeatureRequest.create = function create(properties) {
                            return new CreateFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1.CreateFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ICreateFeatureRequest} message CreateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.featureId != null && Object.hasOwnProperty.call(message, "featureId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.featureId);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1.Feature.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.CreateFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.ICreateFeatureRequest} message CreateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.CreateFeatureRequest} CreateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.CreateFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.featureId = reader.string();
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1.Feature.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.CreateFeatureRequest} CreateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.featureId != null && message.hasOwnProperty("featureId"))
                                if (!$util.isString(message.featureId))
                                    return "featureId: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1.Feature.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.CreateFeatureRequest} CreateFeatureRequest
                         */
                        CreateFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.CreateFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.CreateFeatureRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.featureId != null)
                                message.featureId = String(object.featureId);
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.CreateFeatureRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1.Feature.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.CreateFeatureRequest} message CreateFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.featureId = "";
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.featureId != null && message.hasOwnProperty("featureId"))
                                object.featureId = message.featureId;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1.Feature.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.CreateFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateFeatureRequest;
                    })();
    
                    v1.DeleteFeatureRequest = (function() {
    
                        /**
                         * Properties of a DeleteFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IDeleteFeatureRequest
                         * @property {string|null} [name] DeleteFeatureRequest name
                         * @property {boolean|null} [force] DeleteFeatureRequest force
                         * @property {string|null} [requestId] DeleteFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents a DeleteFeatureRequest.
                         * @implements IDeleteFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IDeleteFeatureRequest=} [properties] Properties to set
                         */
                        function DeleteFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.name = "";
    
                        /**
                         * DeleteFeatureRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.force = false;
    
                        /**
                         * DeleteFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IDeleteFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.DeleteFeatureRequest} DeleteFeatureRequest instance
                         */
                        DeleteFeatureRequest.create = function create(properties) {
                            return new DeleteFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1.DeleteFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IDeleteFeatureRequest} message DeleteFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.force);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.DeleteFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IDeleteFeatureRequest} message DeleteFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.DeleteFeatureRequest} DeleteFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.DeleteFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.force = reader.bool();
                                    break;
                                case 3:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.DeleteFeatureRequest} DeleteFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.DeleteFeatureRequest} DeleteFeatureRequest
                         */
                        DeleteFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.DeleteFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.DeleteFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.DeleteFeatureRequest} message DeleteFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.force = false;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.DeleteFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteFeatureRequest;
                    })();
    
                    v1.UpdateFeatureRequest = (function() {
    
                        /**
                         * Properties of an UpdateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IUpdateFeatureRequest
                         * @property {string|null} [name] UpdateFeatureRequest name
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFeatureRequest updateMask
                         * @property {google.cloud.gkehub.v1.IFeature|null} [resource] UpdateFeatureRequest resource
                         * @property {string|null} [requestId] UpdateFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents an UpdateFeatureRequest.
                         * @implements IUpdateFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IUpdateFeatureRequest=} [properties] Properties to set
                         */
                        function UpdateFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.name = "";
    
                        /**
                         * UpdateFeatureRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateFeatureRequest resource.
                         * @member {google.cloud.gkehub.v1.IFeature|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.resource = null;
    
                        /**
                         * UpdateFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IUpdateFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.UpdateFeatureRequest} UpdateFeatureRequest instance
                         */
                        UpdateFeatureRequest.create = function create(properties) {
                            return new UpdateFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1.UpdateFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IUpdateFeatureRequest} message UpdateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1.Feature.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.UpdateFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.IUpdateFeatureRequest} message UpdateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.UpdateFeatureRequest} UpdateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.UpdateFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1.Feature.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.UpdateFeatureRequest} UpdateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1.Feature.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.UpdateFeatureRequest} UpdateFeatureRequest
                         */
                        UpdateFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.UpdateFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.UpdateFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.UpdateFeatureRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.UpdateFeatureRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1.Feature.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1.UpdateFeatureRequest} message UpdateFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateMask = null;
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1.Feature.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.UpdateFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateFeatureRequest;
                    })();
    
                    v1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.gkehub.v1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.gkehub.v1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.gkehub.v1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.target = reader.string();
                                    break;
                                case 4:
                                    message.verb = reader.string();
                                    break;
                                case 5:
                                    message.statusDetail = reader.string();
                                    break;
                                case 6:
                                    message.cancelRequested = reader.bool();
                                    break;
                                case 7:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationMetadata;
                    })();
    
                    return v1;
                })();
    
                gkehub.multiclusteringress = (function() {
    
                    /**
                     * Namespace multiclusteringress.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var multiclusteringress = {};
    
                    multiclusteringress.v1 = (function() {
    
                        /**
                         * Namespace v1.
                         * @memberof google.cloud.gkehub.multiclusteringress
                         * @namespace
                         */
                        var v1 = {};
    
                        v1.FeatureSpec = (function() {
    
                            /**
                             * Properties of a FeatureSpec.
                             * @memberof google.cloud.gkehub.multiclusteringress.v1
                             * @interface IFeatureSpec
                             * @property {string|null} [configMembership] FeatureSpec configMembership
                             */
    
                            /**
                             * Constructs a new FeatureSpec.
                             * @memberof google.cloud.gkehub.multiclusteringress.v1
                             * @classdesc Represents a FeatureSpec.
                             * @implements IFeatureSpec
                             * @constructor
                             * @param {google.cloud.gkehub.multiclusteringress.v1.IFeatureSpec=} [properties] Properties to set
                             */
                            function FeatureSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FeatureSpec configMembership.
                             * @member {string} configMembership
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @instance
                             */
                            FeatureSpec.prototype.configMembership = "";
    
                            /**
                             * Creates a new FeatureSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1.IFeatureSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.multiclusteringress.v1.FeatureSpec} FeatureSpec instance
                             */
                            FeatureSpec.create = function create(properties) {
                                return new FeatureSpec(properties);
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message. Does not implicitly {@link google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.configMembership != null && Object.hasOwnProperty.call(message, "configMembership"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.configMembership);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.multiclusteringress.v1.FeatureSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.multiclusteringress.v1.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.configMembership = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.multiclusteringress.v1.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FeatureSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FeatureSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.configMembership != null && message.hasOwnProperty("configMembership"))
                                    if (!$util.isString(message.configMembership))
                                        return "configMembership: string expected";
                                return null;
                            };
    
                            /**
                             * Creates a FeatureSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.multiclusteringress.v1.FeatureSpec} FeatureSpec
                             */
                            FeatureSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.multiclusteringress.v1.FeatureSpec();
                                if (object.configMembership != null)
                                    message.configMembership = String(object.configMembership);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FeatureSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1.FeatureSpec} message FeatureSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FeatureSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults)
                                    object.configMembership = "";
                                if (message.configMembership != null && message.hasOwnProperty("configMembership"))
                                    object.configMembership = message.configMembership;
                                return object;
                            };
    
                            /**
                             * Converts this FeatureSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.multiclusteringress.v1.FeatureSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FeatureSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return FeatureSpec;
                        })();
    
                        return v1;
                    })();
    
                    multiclusteringress.v1alpha = (function() {
    
                        /**
                         * Namespace v1alpha.
                         * @memberof google.cloud.gkehub.multiclusteringress
                         * @namespace
                         */
                        var v1alpha = {};
    
                        /**
                         * Billing enum.
                         * @name google.cloud.gkehub.multiclusteringress.v1alpha.Billing
                         * @enum {number}
                         * @property {number} BILLING_UNSPECIFIED=0 BILLING_UNSPECIFIED value
                         * @property {number} PAY_AS_YOU_GO=1 PAY_AS_YOU_GO value
                         * @property {number} ANTHOS_LICENSE=2 ANTHOS_LICENSE value
                         */
                        v1alpha.Billing = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "BILLING_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PAY_AS_YOU_GO"] = 1;
                            values[valuesById[2] = "ANTHOS_LICENSE"] = 2;
                            return values;
                        })();
    
                        v1alpha.FeatureSpec = (function() {
    
                            /**
                             * Properties of a FeatureSpec.
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha
                             * @interface IFeatureSpec
                             * @property {string|null} [configMembership] FeatureSpec configMembership
                             * @property {google.cloud.gkehub.multiclusteringress.v1alpha.Billing|null} [billing] FeatureSpec billing
                             */
    
                            /**
                             * Constructs a new FeatureSpec.
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha
                             * @classdesc Represents a FeatureSpec.
                             * @implements IFeatureSpec
                             * @constructor
                             * @param {google.cloud.gkehub.multiclusteringress.v1alpha.IFeatureSpec=} [properties] Properties to set
                             */
                            function FeatureSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FeatureSpec configMembership.
                             * @member {string} configMembership
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @instance
                             */
                            FeatureSpec.prototype.configMembership = "";
    
                            /**
                             * FeatureSpec billing.
                             * @member {google.cloud.gkehub.multiclusteringress.v1alpha.Billing} billing
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @instance
                             */
                            FeatureSpec.prototype.billing = 0;
    
                            /**
                             * Creates a new FeatureSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1alpha.IFeatureSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec} FeatureSpec instance
                             */
                            FeatureSpec.create = function create(properties) {
                                return new FeatureSpec(properties);
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message. Does not implicitly {@link google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1alpha.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.configMembership != null && Object.hasOwnProperty.call(message, "configMembership"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.configMembership);
                                if (message.billing != null && Object.hasOwnProperty.call(message, "billing"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.billing);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1alpha.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.configMembership = reader.string();
                                        break;
                                    case 2:
                                        message.billing = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FeatureSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FeatureSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.configMembership != null && message.hasOwnProperty("configMembership"))
                                    if (!$util.isString(message.configMembership))
                                        return "configMembership: string expected";
                                if (message.billing != null && message.hasOwnProperty("billing"))
                                    switch (message.billing) {
                                    default:
                                        return "billing: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a FeatureSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec} FeatureSpec
                             */
                            FeatureSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec();
                                if (object.configMembership != null)
                                    message.configMembership = String(object.configMembership);
                                switch (object.billing) {
                                case "BILLING_UNSPECIFIED":
                                case 0:
                                    message.billing = 0;
                                    break;
                                case "PAY_AS_YOU_GO":
                                case 1:
                                    message.billing = 1;
                                    break;
                                case "ANTHOS_LICENSE":
                                case 2:
                                    message.billing = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FeatureSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec} message FeatureSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FeatureSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.configMembership = "";
                                    object.billing = options.enums === String ? "BILLING_UNSPECIFIED" : 0;
                                }
                                if (message.configMembership != null && message.hasOwnProperty("configMembership"))
                                    object.configMembership = message.configMembership;
                                if (message.billing != null && message.hasOwnProperty("billing"))
                                    object.billing = options.enums === String ? $root.google.cloud.gkehub.multiclusteringress.v1alpha.Billing[message.billing] : message.billing;
                                return object;
                            };
    
                            /**
                             * Converts this FeatureSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FeatureSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return FeatureSpec;
                        })();
    
                        return v1alpha;
                    })();
    
                    multiclusteringress.v1beta = (function() {
    
                        /**
                         * Namespace v1beta.
                         * @memberof google.cloud.gkehub.multiclusteringress
                         * @namespace
                         */
                        var v1beta = {};
    
                        /**
                         * Billing enum.
                         * @name google.cloud.gkehub.multiclusteringress.v1beta.Billing
                         * @enum {number}
                         * @property {number} BILLING_UNSPECIFIED=0 BILLING_UNSPECIFIED value
                         * @property {number} PAY_AS_YOU_GO=1 PAY_AS_YOU_GO value
                         * @property {number} ANTHOS_LICENSE=2 ANTHOS_LICENSE value
                         */
                        v1beta.Billing = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "BILLING_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "PAY_AS_YOU_GO"] = 1;
                            values[valuesById[2] = "ANTHOS_LICENSE"] = 2;
                            return values;
                        })();
    
                        v1beta.FeatureSpec = (function() {
    
                            /**
                             * Properties of a FeatureSpec.
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta
                             * @interface IFeatureSpec
                             * @property {string|null} [configMembership] FeatureSpec configMembership
                             * @property {google.cloud.gkehub.multiclusteringress.v1beta.Billing|null} [billing] FeatureSpec billing
                             */
    
                            /**
                             * Constructs a new FeatureSpec.
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta
                             * @classdesc Represents a FeatureSpec.
                             * @implements IFeatureSpec
                             * @constructor
                             * @param {google.cloud.gkehub.multiclusteringress.v1beta.IFeatureSpec=} [properties] Properties to set
                             */
                            function FeatureSpec(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FeatureSpec configMembership.
                             * @member {string} configMembership
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @instance
                             */
                            FeatureSpec.prototype.configMembership = "";
    
                            /**
                             * FeatureSpec billing.
                             * @member {google.cloud.gkehub.multiclusteringress.v1beta.Billing} billing
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @instance
                             */
                            FeatureSpec.prototype.billing = 0;
    
                            /**
                             * Creates a new FeatureSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1beta.IFeatureSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec} FeatureSpec instance
                             */
                            FeatureSpec.create = function create(properties) {
                                return new FeatureSpec(properties);
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message. Does not implicitly {@link google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1beta.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.configMembership != null && Object.hasOwnProperty.call(message, "configMembership"))
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.configMembership);
                                if (message.billing != null && Object.hasOwnProperty.call(message, "billing"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.billing);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1beta.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.configMembership = reader.string();
                                        break;
                                    case 2:
                                        message.billing = reader.int32();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FeatureSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FeatureSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.configMembership != null && message.hasOwnProperty("configMembership"))
                                    if (!$util.isString(message.configMembership))
                                        return "configMembership: string expected";
                                if (message.billing != null && message.hasOwnProperty("billing"))
                                    switch (message.billing) {
                                    default:
                                        return "billing: enum value expected";
                                    case 0:
                                    case 1:
                                    case 2:
                                        break;
                                    }
                                return null;
                            };
    
                            /**
                             * Creates a FeatureSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec} FeatureSpec
                             */
                            FeatureSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec();
                                if (object.configMembership != null)
                                    message.configMembership = String(object.configMembership);
                                switch (object.billing) {
                                case "BILLING_UNSPECIFIED":
                                case 0:
                                    message.billing = 0;
                                    break;
                                case "PAY_AS_YOU_GO":
                                case 1:
                                    message.billing = 1;
                                    break;
                                case "ANTHOS_LICENSE":
                                case 2:
                                    message.billing = 2;
                                    break;
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FeatureSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec} message FeatureSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FeatureSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.configMembership = "";
                                    object.billing = options.enums === String ? "BILLING_UNSPECIFIED" : 0;
                                }
                                if (message.configMembership != null && message.hasOwnProperty("configMembership"))
                                    object.configMembership = message.configMembership;
                                if (message.billing != null && message.hasOwnProperty("billing"))
                                    object.billing = options.enums === String ? $root.google.cloud.gkehub.multiclusteringress.v1beta.Billing[message.billing] : message.billing;
                                return object;
                            };
    
                            /**
                             * Converts this FeatureSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FeatureSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return FeatureSpec;
                        })();
    
                        return v1beta;
                    })();
    
                    return multiclusteringress;
                })();
    
                gkehub.cloudauditlogging = (function() {
    
                    /**
                     * Namespace cloudauditlogging.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var cloudauditlogging = {};
    
                    cloudauditlogging.v1alpha = (function() {
    
                        /**
                         * Namespace v1alpha.
                         * @memberof google.cloud.gkehub.cloudauditlogging
                         * @namespace
                         */
                        var v1alpha = {};
    
                        v1alpha.FeatureSpec = (function() {
    
                            /**
                             * Properties of a FeatureSpec.
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha
                             * @interface IFeatureSpec
                             * @property {Array.<string>|null} [allowlistedServiceAccounts] FeatureSpec allowlistedServiceAccounts
                             */
    
                            /**
                             * Constructs a new FeatureSpec.
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha
                             * @classdesc Represents a FeatureSpec.
                             * @implements IFeatureSpec
                             * @constructor
                             * @param {google.cloud.gkehub.cloudauditlogging.v1alpha.IFeatureSpec=} [properties] Properties to set
                             */
                            function FeatureSpec(properties) {
                                this.allowlistedServiceAccounts = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FeatureSpec allowlistedServiceAccounts.
                             * @member {Array.<string>} allowlistedServiceAccounts
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @instance
                             */
                            FeatureSpec.prototype.allowlistedServiceAccounts = $util.emptyArray;
    
                            /**
                             * Creates a new FeatureSpec instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.cloudauditlogging.v1alpha.IFeatureSpec=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec} FeatureSpec instance
                             */
                            FeatureSpec.create = function create(properties) {
                                return new FeatureSpec(properties);
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message. Does not implicitly {@link google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.cloudauditlogging.v1alpha.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.allowlistedServiceAccounts != null && message.allowlistedServiceAccounts.length)
                                    for (var i = 0; i < message.allowlistedServiceAccounts.length; ++i)
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.allowlistedServiceAccounts[i]);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.cloudauditlogging.v1alpha.IFeatureSpec} message FeatureSpec message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        if (!(message.allowlistedServiceAccounts && message.allowlistedServiceAccounts.length))
                                            message.allowlistedServiceAccounts = [];
                                        message.allowlistedServiceAccounts.push(reader.string());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FeatureSpec message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec} FeatureSpec
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FeatureSpec message.
                             * @function verify
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FeatureSpec.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.allowlistedServiceAccounts != null && message.hasOwnProperty("allowlistedServiceAccounts")) {
                                    if (!Array.isArray(message.allowlistedServiceAccounts))
                                        return "allowlistedServiceAccounts: array expected";
                                    for (var i = 0; i < message.allowlistedServiceAccounts.length; ++i)
                                        if (!$util.isString(message.allowlistedServiceAccounts[i]))
                                            return "allowlistedServiceAccounts: string[] expected";
                                }
                                return null;
                            };
    
                            /**
                             * Creates a FeatureSpec message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec} FeatureSpec
                             */
                            FeatureSpec.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec)
                                    return object;
                                var message = new $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec();
                                if (object.allowlistedServiceAccounts) {
                                    if (!Array.isArray(object.allowlistedServiceAccounts))
                                        throw TypeError(".google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.allowlistedServiceAccounts: array expected");
                                    message.allowlistedServiceAccounts = [];
                                    for (var i = 0; i < object.allowlistedServiceAccounts.length; ++i)
                                        message.allowlistedServiceAccounts[i] = String(object.allowlistedServiceAccounts[i]);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FeatureSpec message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @static
                             * @param {google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec} message FeatureSpec
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FeatureSpec.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.allowlistedServiceAccounts = [];
                                if (message.allowlistedServiceAccounts && message.allowlistedServiceAccounts.length) {
                                    object.allowlistedServiceAccounts = [];
                                    for (var j = 0; j < message.allowlistedServiceAccounts.length; ++j)
                                        object.allowlistedServiceAccounts[j] = message.allowlistedServiceAccounts[j];
                                }
                                return object;
                            };
    
                            /**
                             * Converts this FeatureSpec to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FeatureSpec.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return FeatureSpec;
                        })();
    
                        return v1alpha;
                    })();
    
                    return cloudauditlogging;
                })();
    
                gkehub.v1alpha = (function() {
    
                    /**
                     * Namespace v1alpha.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var v1alpha = {};
    
                    v1alpha.Feature = (function() {
    
                        /**
                         * Properties of a Feature.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IFeature
                         * @property {string|null} [name] Feature name
                         * @property {Object.<string,string>|null} [labels] Feature labels
                         * @property {google.cloud.gkehub.v1alpha.IFeatureResourceState|null} [resourceState] Feature resourceState
                         * @property {google.cloud.gkehub.v1alpha.ICommonFeatureSpec|null} [spec] Feature spec
                         * @property {Object.<string,google.cloud.gkehub.v1alpha.IMembershipFeatureSpec>|null} [membershipSpecs] Feature membershipSpecs
                         * @property {google.cloud.gkehub.v1alpha.ICommonFeatureState|null} [state] Feature state
                         * @property {Object.<string,google.cloud.gkehub.v1alpha.IMembershipFeatureState>|null} [membershipStates] Feature membershipStates
                         * @property {google.protobuf.ITimestamp|null} [createTime] Feature createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Feature updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Feature deleteTime
                         */
    
                        /**
                         * Constructs a new Feature.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a Feature.
                         * @implements IFeature
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IFeature=} [properties] Properties to set
                         */
                        function Feature(properties) {
                            this.labels = {};
                            this.membershipSpecs = {};
                            this.membershipStates = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Feature name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.name = "";
    
                        /**
                         * Feature labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.labels = $util.emptyObject;
    
                        /**
                         * Feature resourceState.
                         * @member {google.cloud.gkehub.v1alpha.IFeatureResourceState|null|undefined} resourceState
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.resourceState = null;
    
                        /**
                         * Feature spec.
                         * @member {google.cloud.gkehub.v1alpha.ICommonFeatureSpec|null|undefined} spec
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.spec = null;
    
                        /**
                         * Feature membershipSpecs.
                         * @member {Object.<string,google.cloud.gkehub.v1alpha.IMembershipFeatureSpec>} membershipSpecs
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.membershipSpecs = $util.emptyObject;
    
                        /**
                         * Feature state.
                         * @member {google.cloud.gkehub.v1alpha.ICommonFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.state = null;
    
                        /**
                         * Feature membershipStates.
                         * @member {Object.<string,google.cloud.gkehub.v1alpha.IMembershipFeatureState>} membershipStates
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.membershipStates = $util.emptyObject;
    
                        /**
                         * Feature createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.createTime = null;
    
                        /**
                         * Feature updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.updateTime = null;
    
                        /**
                         * Feature deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         */
                        Feature.prototype.deleteTime = null;
    
                        /**
                         * Creates a new Feature instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeature=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.Feature} Feature instance
                         */
                        Feature.create = function create(properties) {
                            return new Feature(properties);
                        };
    
                        /**
                         * Encodes the specified Feature message. Does not implicitly {@link google.cloud.gkehub.v1alpha.Feature.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeature} message Feature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Feature.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.resourceState != null && Object.hasOwnProperty.call(message, "resourceState"))
                                $root.google.cloud.gkehub.v1alpha.FeatureResourceState.encode(message.resourceState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.spec != null && Object.hasOwnProperty.call(message, "spec"))
                                $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec.encode(message.spec, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.membershipSpecs != null && Object.hasOwnProperty.call(message, "membershipSpecs"))
                                for (var keys = Object.keys(message.membershipSpecs), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec.encode(message.membershipSpecs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1alpha.CommonFeatureState.encode(message.state, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.membershipStates != null && Object.hasOwnProperty.call(message, "membershipStates"))
                                for (var keys = Object.keys(message.membershipStates), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.gkehub.v1alpha.MembershipFeatureState.encode(message.membershipStates[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Feature message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.Feature.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeature} message Feature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Feature.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Feature message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.Feature} Feature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Feature.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.Feature(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                case 3:
                                    message.resourceState = $root.google.cloud.gkehub.v1alpha.FeatureResourceState.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.spec = $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    if (message.membershipSpecs === $util.emptyObject)
                                        message.membershipSpecs = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.membershipSpecs[key] = value;
                                    break;
                                case 6:
                                    message.state = $root.google.cloud.gkehub.v1alpha.CommonFeatureState.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    if (message.membershipStates === $util.emptyObject)
                                        message.membershipStates = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.cloud.gkehub.v1alpha.MembershipFeatureState.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.membershipStates[key] = value;
                                    break;
                                case 8:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Feature message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.Feature} Feature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Feature.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Feature message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Feature.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.resourceState != null && message.hasOwnProperty("resourceState")) {
                                var error = $root.google.cloud.gkehub.v1alpha.FeatureResourceState.verify(message.resourceState);
                                if (error)
                                    return "resourceState." + error;
                            }
                            if (message.spec != null && message.hasOwnProperty("spec")) {
                                var error = $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec.verify(message.spec);
                                if (error)
                                    return "spec." + error;
                            }
                            if (message.membershipSpecs != null && message.hasOwnProperty("membershipSpecs")) {
                                if (!$util.isObject(message.membershipSpecs))
                                    return "membershipSpecs: object expected";
                                var key = Object.keys(message.membershipSpecs);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec.verify(message.membershipSpecs[key[i]]);
                                    if (error)
                                        return "membershipSpecs." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1alpha.CommonFeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            if (message.membershipStates != null && message.hasOwnProperty("membershipStates")) {
                                if (!$util.isObject(message.membershipStates))
                                    return "membershipStates: object expected";
                                var key = Object.keys(message.membershipStates);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha.MembershipFeatureState.verify(message.membershipStates[key[i]]);
                                    if (error)
                                        return "membershipStates." + error;
                                }
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Feature message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.Feature} Feature
                         */
                        Feature.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.Feature)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.Feature();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.resourceState != null) {
                                if (typeof object.resourceState !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.resourceState: object expected");
                                message.resourceState = $root.google.cloud.gkehub.v1alpha.FeatureResourceState.fromObject(object.resourceState);
                            }
                            if (object.spec != null) {
                                if (typeof object.spec !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.spec: object expected");
                                message.spec = $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec.fromObject(object.spec);
                            }
                            if (object.membershipSpecs) {
                                if (typeof object.membershipSpecs !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.membershipSpecs: object expected");
                                message.membershipSpecs = {};
                                for (var keys = Object.keys(object.membershipSpecs), i = 0; i < keys.length; ++i) {
                                    if (typeof object.membershipSpecs[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha.Feature.membershipSpecs: object expected");
                                    message.membershipSpecs[keys[i]] = $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec.fromObject(object.membershipSpecs[keys[i]]);
                                }
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1alpha.CommonFeatureState.fromObject(object.state);
                            }
                            if (object.membershipStates) {
                                if (typeof object.membershipStates !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.membershipStates: object expected");
                                message.membershipStates = {};
                                for (var keys = Object.keys(object.membershipStates), i = 0; i < keys.length; ++i) {
                                    if (typeof object.membershipStates[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha.Feature.membershipStates: object expected");
                                    message.membershipStates[keys[i]] = $root.google.cloud.gkehub.v1alpha.MembershipFeatureState.fromObject(object.membershipStates[keys[i]]);
                                }
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.Feature.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Feature message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.Feature} message Feature
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Feature.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.membershipSpecs = {};
                                object.membershipStates = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.resourceState = null;
                                object.spec = null;
                                object.state = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.resourceState != null && message.hasOwnProperty("resourceState"))
                                object.resourceState = $root.google.cloud.gkehub.v1alpha.FeatureResourceState.toObject(message.resourceState, options);
                            if (message.spec != null && message.hasOwnProperty("spec"))
                                object.spec = $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec.toObject(message.spec, options);
                            if (message.membershipSpecs && (keys2 = Object.keys(message.membershipSpecs)).length) {
                                object.membershipSpecs = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.membershipSpecs[keys2[j]] = $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec.toObject(message.membershipSpecs[keys2[j]], options);
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1alpha.CommonFeatureState.toObject(message.state, options);
                            if (message.membershipStates && (keys2 = Object.keys(message.membershipStates)).length) {
                                object.membershipStates = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.membershipStates[keys2[j]] = $root.google.cloud.gkehub.v1alpha.MembershipFeatureState.toObject(message.membershipStates[keys2[j]], options);
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Feature to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.Feature
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Feature.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Feature;
                    })();
    
                    v1alpha.FeatureResourceState = (function() {
    
                        /**
                         * Properties of a FeatureResourceState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IFeatureResourceState
                         * @property {google.cloud.gkehub.v1alpha.FeatureResourceState.State|null} [state] FeatureResourceState state
                         */
    
                        /**
                         * Constructs a new FeatureResourceState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a FeatureResourceState.
                         * @implements IFeatureResourceState
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IFeatureResourceState=} [properties] Properties to set
                         */
                        function FeatureResourceState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FeatureResourceState state.
                         * @member {google.cloud.gkehub.v1alpha.FeatureResourceState.State} state
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @instance
                         */
                        FeatureResourceState.prototype.state = 0;
    
                        /**
                         * Creates a new FeatureResourceState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeatureResourceState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.FeatureResourceState} FeatureResourceState instance
                         */
                        FeatureResourceState.create = function create(properties) {
                            return new FeatureResourceState(properties);
                        };
    
                        /**
                         * Encodes the specified FeatureResourceState message. Does not implicitly {@link google.cloud.gkehub.v1alpha.FeatureResourceState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeatureResourceState} message FeatureResourceState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureResourceState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FeatureResourceState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.FeatureResourceState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeatureResourceState} message FeatureResourceState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureResourceState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FeatureResourceState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.FeatureResourceState} FeatureResourceState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureResourceState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.FeatureResourceState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.state = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FeatureResourceState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.FeatureResourceState} FeatureResourceState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureResourceState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FeatureResourceState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FeatureResourceState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a FeatureResourceState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.FeatureResourceState} FeatureResourceState
                         */
                        FeatureResourceState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.FeatureResourceState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.FeatureResourceState();
                            switch (object.state) {
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ENABLING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLING":
                            case 3:
                                message.state = 3;
                                break;
                            case "UPDATING":
                            case 4:
                                message.state = 4;
                                break;
                            case "SERVICE_UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FeatureResourceState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.FeatureResourceState} message FeatureResourceState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FeatureResourceState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.gkehub.v1alpha.FeatureResourceState.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this FeatureResourceState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.FeatureResourceState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FeatureResourceState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.gkehub.v1alpha.FeatureResourceState.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ENABLING=1 ENABLING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} DISABLING=3 DISABLING value
                         * @property {number} UPDATING=4 UPDATING value
                         * @property {number} SERVICE_UPDATING=5 SERVICE_UPDATING value
                         */
                        FeatureResourceState.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "DISABLING"] = 3;
                            values[valuesById[4] = "UPDATING"] = 4;
                            values[valuesById[5] = "SERVICE_UPDATING"] = 5;
                            return values;
                        })();
    
                        return FeatureResourceState;
                    })();
    
                    v1alpha.FeatureState = (function() {
    
                        /**
                         * Properties of a FeatureState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IFeatureState
                         * @property {google.cloud.gkehub.v1alpha.FeatureState.Code|null} [code] FeatureState code
                         * @property {string|null} [description] FeatureState description
                         * @property {google.protobuf.ITimestamp|null} [updateTime] FeatureState updateTime
                         */
    
                        /**
                         * Constructs a new FeatureState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a FeatureState.
                         * @implements IFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IFeatureState=} [properties] Properties to set
                         */
                        function FeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FeatureState code.
                         * @member {google.cloud.gkehub.v1alpha.FeatureState.Code} code
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.code = 0;
    
                        /**
                         * FeatureState description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.description = "";
    
                        /**
                         * FeatureState updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.updateTime = null;
    
                        /**
                         * Creates a new FeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.FeatureState} FeatureState instance
                         */
                        FeatureState.create = function create(properties) {
                            return new FeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified FeatureState message. Does not implicitly {@link google.cloud.gkehub.v1alpha.FeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeatureState} message FeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.FeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IFeatureState} message FeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.FeatureState} FeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.FeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                case 2:
                                    message.description = reader.string();
                                    break;
                                case 3:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.FeatureState} FeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.FeatureState} FeatureState
                         */
                        FeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.FeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.FeatureState();
                            switch (object.code) {
                            case "CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "OK":
                            case 1:
                                message.code = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.code = 2;
                                break;
                            case "ERROR":
                            case 3:
                                message.code = 3;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.FeatureState.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.FeatureState} message FeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.code = options.enums === String ? "CODE_UNSPECIFIED" : 0;
                                object.description = "";
                                object.updateTime = null;
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.gkehub.v1alpha.FeatureState.Code[message.code] : message.code;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this FeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.FeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Code enum.
                         * @name google.cloud.gkehub.v1alpha.FeatureState.Code
                         * @enum {number}
                         * @property {number} CODE_UNSPECIFIED=0 CODE_UNSPECIFIED value
                         * @property {number} OK=1 OK value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} ERROR=3 ERROR value
                         */
                        FeatureState.Code = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "OK"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            return values;
                        })();
    
                        return FeatureState;
                    })();
    
                    v1alpha.CommonFeatureSpec = (function() {
    
                        /**
                         * Properties of a CommonFeatureSpec.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface ICommonFeatureSpec
                         * @property {google.cloud.gkehub.multiclusteringress.v1alpha.IFeatureSpec|null} [multiclusteringress] CommonFeatureSpec multiclusteringress
                         * @property {google.cloud.gkehub.cloudauditlogging.v1alpha.IFeatureSpec|null} [cloudauditlogging] CommonFeatureSpec cloudauditlogging
                         */
    
                        /**
                         * Constructs a new CommonFeatureSpec.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a CommonFeatureSpec.
                         * @implements ICommonFeatureSpec
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureSpec=} [properties] Properties to set
                         */
                        function CommonFeatureSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonFeatureSpec multiclusteringress.
                         * @member {google.cloud.gkehub.multiclusteringress.v1alpha.IFeatureSpec|null|undefined} multiclusteringress
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @instance
                         */
                        CommonFeatureSpec.prototype.multiclusteringress = null;
    
                        /**
                         * CommonFeatureSpec cloudauditlogging.
                         * @member {google.cloud.gkehub.cloudauditlogging.v1alpha.IFeatureSpec|null|undefined} cloudauditlogging
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @instance
                         */
                        CommonFeatureSpec.prototype.cloudauditlogging = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CommonFeatureSpec featureSpec.
                         * @member {"multiclusteringress"|"cloudauditlogging"|undefined} featureSpec
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @instance
                         */
                        Object.defineProperty(CommonFeatureSpec.prototype, "featureSpec", {
                            get: $util.oneOfGetter($oneOfFields = ["multiclusteringress", "cloudauditlogging"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CommonFeatureSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureSpec=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureSpec} CommonFeatureSpec instance
                         */
                        CommonFeatureSpec.create = function create(properties) {
                            return new CommonFeatureSpec(properties);
                        };
    
                        /**
                         * Encodes the specified CommonFeatureSpec message. Does not implicitly {@link google.cloud.gkehub.v1alpha.CommonFeatureSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureSpec} message CommonFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.multiclusteringress != null && Object.hasOwnProperty.call(message, "multiclusteringress"))
                                $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.encode(message.multiclusteringress, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            if (message.cloudauditlogging != null && Object.hasOwnProperty.call(message, "cloudauditlogging"))
                                $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.encode(message.cloudauditlogging, writer.uint32(/* id 108, wireType 2 =*/866).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonFeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.CommonFeatureSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureSpec} message CommonFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonFeatureSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureSpec} CommonFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 102:
                                    message.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.decode(reader, reader.uint32());
                                    break;
                                case 108:
                                    message.cloudauditlogging = $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonFeatureSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureSpec} CommonFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonFeatureSpec message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonFeatureSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.multiclusteringress != null && message.hasOwnProperty("multiclusteringress")) {
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.verify(message.multiclusteringress);
                                    if (error)
                                        return "multiclusteringress." + error;
                                }
                            }
                            if (message.cloudauditlogging != null && message.hasOwnProperty("cloudauditlogging")) {
                                if (properties.featureSpec === 1)
                                    return "featureSpec: multiple values";
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.verify(message.cloudauditlogging);
                                    if (error)
                                        return "cloudauditlogging." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonFeatureSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureSpec} CommonFeatureSpec
                         */
                        CommonFeatureSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.CommonFeatureSpec();
                            if (object.multiclusteringress != null) {
                                if (typeof object.multiclusteringress !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.CommonFeatureSpec.multiclusteringress: object expected");
                                message.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.fromObject(object.multiclusteringress);
                            }
                            if (object.cloudauditlogging != null) {
                                if (typeof object.cloudauditlogging !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.CommonFeatureSpec.cloudauditlogging: object expected");
                                message.cloudauditlogging = $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.fromObject(object.cloudauditlogging);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonFeatureSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.CommonFeatureSpec} message CommonFeatureSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonFeatureSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.multiclusteringress != null && message.hasOwnProperty("multiclusteringress")) {
                                object.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1alpha.FeatureSpec.toObject(message.multiclusteringress, options);
                                if (options.oneofs)
                                    object.featureSpec = "multiclusteringress";
                            }
                            if (message.cloudauditlogging != null && message.hasOwnProperty("cloudauditlogging")) {
                                object.cloudauditlogging = $root.google.cloud.gkehub.cloudauditlogging.v1alpha.FeatureSpec.toObject(message.cloudauditlogging, options);
                                if (options.oneofs)
                                    object.featureSpec = "cloudauditlogging";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CommonFeatureSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonFeatureSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CommonFeatureSpec;
                    })();
    
                    v1alpha.CommonFeatureState = (function() {
    
                        /**
                         * Properties of a CommonFeatureState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface ICommonFeatureState
                         * @property {google.cloud.gkehub.servicemesh.v1alpha.IFeatureState|null} [servicemesh] CommonFeatureState servicemesh
                         * @property {google.cloud.gkehub.v1alpha.IFeatureState|null} [state] CommonFeatureState state
                         */
    
                        /**
                         * Constructs a new CommonFeatureState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a CommonFeatureState.
                         * @implements ICommonFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureState=} [properties] Properties to set
                         */
                        function CommonFeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonFeatureState servicemesh.
                         * @member {google.cloud.gkehub.servicemesh.v1alpha.IFeatureState|null|undefined} servicemesh
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @instance
                         */
                        CommonFeatureState.prototype.servicemesh = null;
    
                        /**
                         * CommonFeatureState state.
                         * @member {google.cloud.gkehub.v1alpha.IFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @instance
                         */
                        CommonFeatureState.prototype.state = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CommonFeatureState featureState.
                         * @member {"servicemesh"|undefined} featureState
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @instance
                         */
                        Object.defineProperty(CommonFeatureState.prototype, "featureState", {
                            get: $util.oneOfGetter($oneOfFields = ["servicemesh"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CommonFeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureState} CommonFeatureState instance
                         */
                        CommonFeatureState.create = function create(properties) {
                            return new CommonFeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified CommonFeatureState message. Does not implicitly {@link google.cloud.gkehub.v1alpha.CommonFeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureState} message CommonFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1alpha.FeatureState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.servicemesh != null && Object.hasOwnProperty.call(message, "servicemesh"))
                                $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState.encode(message.servicemesh, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonFeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.CommonFeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICommonFeatureState} message CommonFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonFeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureState} CommonFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.CommonFeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 100:
                                    message.servicemesh = $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState.decode(reader, reader.uint32());
                                    break;
                                case 1:
                                    message.state = $root.google.cloud.gkehub.v1alpha.FeatureState.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonFeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureState} CommonFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonFeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonFeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.servicemesh != null && message.hasOwnProperty("servicemesh")) {
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState.verify(message.servicemesh);
                                    if (error)
                                        return "servicemesh." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1alpha.FeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonFeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.CommonFeatureState} CommonFeatureState
                         */
                        CommonFeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.CommonFeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.CommonFeatureState();
                            if (object.servicemesh != null) {
                                if (typeof object.servicemesh !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.CommonFeatureState.servicemesh: object expected");
                                message.servicemesh = $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState.fromObject(object.servicemesh);
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.CommonFeatureState.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1alpha.FeatureState.fromObject(object.state);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonFeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.CommonFeatureState} message CommonFeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonFeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = null;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1alpha.FeatureState.toObject(message.state, options);
                            if (message.servicemesh != null && message.hasOwnProperty("servicemesh")) {
                                object.servicemesh = $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState.toObject(message.servicemesh, options);
                                if (options.oneofs)
                                    object.featureState = "servicemesh";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CommonFeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.CommonFeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonFeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CommonFeatureState;
                    })();
    
                    v1alpha.MembershipFeatureSpec = (function() {
    
                        /**
                         * Properties of a MembershipFeatureSpec.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IMembershipFeatureSpec
                         * @property {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec|null} [configmanagement] MembershipFeatureSpec configmanagement
                         */
    
                        /**
                         * Constructs a new MembershipFeatureSpec.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a MembershipFeatureSpec.
                         * @implements IMembershipFeatureSpec
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureSpec=} [properties] Properties to set
                         */
                        function MembershipFeatureSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipFeatureSpec configmanagement.
                         * @member {google.cloud.gkehub.configmanagement.v1alpha.IMembershipSpec|null|undefined} configmanagement
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @instance
                         */
                        MembershipFeatureSpec.prototype.configmanagement = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipFeatureSpec featureSpec.
                         * @member {"configmanagement"|undefined} featureSpec
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @instance
                         */
                        Object.defineProperty(MembershipFeatureSpec.prototype, "featureSpec", {
                            get: $util.oneOfGetter($oneOfFields = ["configmanagement"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipFeatureSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureSpec=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureSpec} MembershipFeatureSpec instance
                         */
                        MembershipFeatureSpec.create = function create(properties) {
                            return new MembershipFeatureSpec(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureSpec message. Does not implicitly {@link google.cloud.gkehub.v1alpha.MembershipFeatureSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureSpec} message MembershipFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.configmanagement != null && Object.hasOwnProperty.call(message, "configmanagement"))
                                $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.encode(message.configmanagement, writer.uint32(/* id 106, wireType 2 =*/850).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.MembershipFeatureSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureSpec} message MembershipFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipFeatureSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureSpec} MembershipFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 106:
                                    message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipFeatureSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureSpec} MembershipFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipFeatureSpec message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipFeatureSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.verify(message.configmanagement);
                                    if (error)
                                        return "configmanagement." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipFeatureSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureSpec} MembershipFeatureSpec
                         */
                        MembershipFeatureSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.MembershipFeatureSpec();
                            if (object.configmanagement != null) {
                                if (typeof object.configmanagement !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.MembershipFeatureSpec.configmanagement: object expected");
                                message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.fromObject(object.configmanagement);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipFeatureSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.MembershipFeatureSpec} message MembershipFeatureSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipFeatureSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                object.configmanagement = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipSpec.toObject(message.configmanagement, options);
                                if (options.oneofs)
                                    object.featureSpec = "configmanagement";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipFeatureSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipFeatureSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipFeatureSpec;
                    })();
    
                    v1alpha.MembershipFeatureState = (function() {
    
                        /**
                         * Properties of a MembershipFeatureState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IMembershipFeatureState
                         * @property {google.cloud.gkehub.servicemesh.v1alpha.IMembershipState|null} [servicemesh] MembershipFeatureState servicemesh
                         * @property {google.cloud.gkehub.metering.v1alpha.IMembershipState|null} [metering] MembershipFeatureState metering
                         * @property {google.cloud.gkehub.configmanagement.v1alpha.IMembershipState|null} [configmanagement] MembershipFeatureState configmanagement
                         * @property {google.cloud.gkehub.v1alpha.IFeatureState|null} [state] MembershipFeatureState state
                         */
    
                        /**
                         * Constructs a new MembershipFeatureState.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a MembershipFeatureState.
                         * @implements IMembershipFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureState=} [properties] Properties to set
                         */
                        function MembershipFeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipFeatureState servicemesh.
                         * @member {google.cloud.gkehub.servicemesh.v1alpha.IMembershipState|null|undefined} servicemesh
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.servicemesh = null;
    
                        /**
                         * MembershipFeatureState metering.
                         * @member {google.cloud.gkehub.metering.v1alpha.IMembershipState|null|undefined} metering
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.metering = null;
    
                        /**
                         * MembershipFeatureState configmanagement.
                         * @member {google.cloud.gkehub.configmanagement.v1alpha.IMembershipState|null|undefined} configmanagement
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.configmanagement = null;
    
                        /**
                         * MembershipFeatureState state.
                         * @member {google.cloud.gkehub.v1alpha.IFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.state = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipFeatureState featureState.
                         * @member {"servicemesh"|"metering"|"configmanagement"|undefined} featureState
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @instance
                         */
                        Object.defineProperty(MembershipFeatureState.prototype, "featureState", {
                            get: $util.oneOfGetter($oneOfFields = ["servicemesh", "metering", "configmanagement"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipFeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureState} MembershipFeatureState instance
                         */
                        MembershipFeatureState.create = function create(properties) {
                            return new MembershipFeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureState message. Does not implicitly {@link google.cloud.gkehub.v1alpha.MembershipFeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureState} message MembershipFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1alpha.FeatureState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.servicemesh != null && Object.hasOwnProperty.call(message, "servicemesh"))
                                $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState.encode(message.servicemesh, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            if (message.metering != null && Object.hasOwnProperty.call(message, "metering"))
                                $root.google.cloud.gkehub.metering.v1alpha.MembershipState.encode(message.metering, writer.uint32(/* id 104, wireType 2 =*/834).fork()).ldelim();
                            if (message.configmanagement != null && Object.hasOwnProperty.call(message, "configmanagement"))
                                $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState.encode(message.configmanagement, writer.uint32(/* id 106, wireType 2 =*/850).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.MembershipFeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IMembershipFeatureState} message MembershipFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipFeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureState} MembershipFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.MembershipFeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 100:
                                    message.servicemesh = $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 104:
                                    message.metering = $root.google.cloud.gkehub.metering.v1alpha.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 106:
                                    message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 1:
                                    message.state = $root.google.cloud.gkehub.v1alpha.FeatureState.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipFeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureState} MembershipFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipFeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipFeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.servicemesh != null && message.hasOwnProperty("servicemesh")) {
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState.verify(message.servicemesh);
                                    if (error)
                                        return "servicemesh." + error;
                                }
                            }
                            if (message.metering != null && message.hasOwnProperty("metering")) {
                                if (properties.featureState === 1)
                                    return "featureState: multiple values";
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.metering.v1alpha.MembershipState.verify(message.metering);
                                    if (error)
                                        return "metering." + error;
                                }
                            }
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                if (properties.featureState === 1)
                                    return "featureState: multiple values";
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState.verify(message.configmanagement);
                                    if (error)
                                        return "configmanagement." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1alpha.FeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipFeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.MembershipFeatureState} MembershipFeatureState
                         */
                        MembershipFeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.MembershipFeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.MembershipFeatureState();
                            if (object.servicemesh != null) {
                                if (typeof object.servicemesh !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.MembershipFeatureState.servicemesh: object expected");
                                message.servicemesh = $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState.fromObject(object.servicemesh);
                            }
                            if (object.metering != null) {
                                if (typeof object.metering !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.MembershipFeatureState.metering: object expected");
                                message.metering = $root.google.cloud.gkehub.metering.v1alpha.MembershipState.fromObject(object.metering);
                            }
                            if (object.configmanagement != null) {
                                if (typeof object.configmanagement !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.MembershipFeatureState.configmanagement: object expected");
                                message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState.fromObject(object.configmanagement);
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.MembershipFeatureState.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1alpha.FeatureState.fromObject(object.state);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipFeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.MembershipFeatureState} message MembershipFeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipFeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = null;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1alpha.FeatureState.toObject(message.state, options);
                            if (message.servicemesh != null && message.hasOwnProperty("servicemesh")) {
                                object.servicemesh = $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState.toObject(message.servicemesh, options);
                                if (options.oneofs)
                                    object.featureState = "servicemesh";
                            }
                            if (message.metering != null && message.hasOwnProperty("metering")) {
                                object.metering = $root.google.cloud.gkehub.metering.v1alpha.MembershipState.toObject(message.metering, options);
                                if (options.oneofs)
                                    object.featureState = "metering";
                            }
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                object.configmanagement = $root.google.cloud.gkehub.configmanagement.v1alpha.MembershipState.toObject(message.configmanagement, options);
                                if (options.oneofs)
                                    object.featureState = "configmanagement";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipFeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.MembershipFeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipFeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipFeatureState;
                    })();
    
                    v1alpha.GkeHub = (function() {
    
                        /**
                         * Constructs a new GkeHub service.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a GkeHub
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GkeHub(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GkeHub.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GkeHub;
    
                        /**
                         * Creates new GkeHub service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GkeHub} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GkeHub.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha.GkeHub#listFeatures}.
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @typedef ListFeaturesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1alpha.ListFeaturesResponse} [response] ListFeaturesResponse
                         */
    
                        /**
                         * Calls ListFeatures.
                         * @function listFeatures
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesRequest} request ListFeaturesRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha.GkeHub.ListFeaturesCallback} callback Node-style callback called with the error, if any, and ListFeaturesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.listFeatures = function listFeatures(request, callback) {
                            return this.rpcCall(listFeatures, $root.google.cloud.gkehub.v1alpha.ListFeaturesRequest, $root.google.cloud.gkehub.v1alpha.ListFeaturesResponse, request, callback);
                        }, "name", { value: "ListFeatures" });
    
                        /**
                         * Calls ListFeatures.
                         * @function listFeatures
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesRequest} request ListFeaturesRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1alpha.ListFeaturesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha.GkeHub#getFeature}.
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @typedef GetFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1alpha.Feature} [response] Feature
                         */
    
                        /**
                         * Calls GetFeature.
                         * @function getFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IGetFeatureRequest} request GetFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha.GkeHub.GetFeatureCallback} callback Node-style callback called with the error, if any, and Feature
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.getFeature = function getFeature(request, callback) {
                            return this.rpcCall(getFeature, $root.google.cloud.gkehub.v1alpha.GetFeatureRequest, $root.google.cloud.gkehub.v1alpha.Feature, request, callback);
                        }, "name", { value: "GetFeature" });
    
                        /**
                         * Calls GetFeature.
                         * @function getFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IGetFeatureRequest} request GetFeatureRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1alpha.Feature>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha.GkeHub#createFeature}.
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @typedef CreateFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFeature.
                         * @function createFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.ICreateFeatureRequest} request CreateFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha.GkeHub.CreateFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.createFeature = function createFeature(request, callback) {
                            return this.rpcCall(createFeature, $root.google.cloud.gkehub.v1alpha.CreateFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFeature" });
    
                        /**
                         * Calls CreateFeature.
                         * @function createFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.ICreateFeatureRequest} request CreateFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha.GkeHub#deleteFeature}.
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @typedef DeleteFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFeature.
                         * @function deleteFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IDeleteFeatureRequest} request DeleteFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha.GkeHub.DeleteFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.deleteFeature = function deleteFeature(request, callback) {
                            return this.rpcCall(deleteFeature, $root.google.cloud.gkehub.v1alpha.DeleteFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFeature" });
    
                        /**
                         * Calls DeleteFeature.
                         * @function deleteFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IDeleteFeatureRequest} request DeleteFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha.GkeHub#updateFeature}.
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @typedef UpdateFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFeature.
                         * @function updateFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IUpdateFeatureRequest} request UpdateFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha.GkeHub.UpdateFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.updateFeature = function updateFeature(request, callback) {
                            return this.rpcCall(updateFeature, $root.google.cloud.gkehub.v1alpha.UpdateFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFeature" });
    
                        /**
                         * Calls UpdateFeature.
                         * @function updateFeature
                         * @memberof google.cloud.gkehub.v1alpha.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha.IUpdateFeatureRequest} request UpdateFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return GkeHub;
                    })();
    
                    v1alpha.ListFeaturesRequest = (function() {
    
                        /**
                         * Properties of a ListFeaturesRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IListFeaturesRequest
                         * @property {string|null} [parent] ListFeaturesRequest parent
                         * @property {number|null} [pageSize] ListFeaturesRequest pageSize
                         * @property {string|null} [pageToken] ListFeaturesRequest pageToken
                         * @property {string|null} [filter] ListFeaturesRequest filter
                         * @property {string|null} [orderBy] ListFeaturesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFeaturesRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a ListFeaturesRequest.
                         * @implements IListFeaturesRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesRequest=} [properties] Properties to set
                         */
                        function ListFeaturesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFeaturesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.parent = "";
    
                        /**
                         * ListFeaturesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFeaturesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.pageToken = "";
    
                        /**
                         * ListFeaturesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.filter = "";
    
                        /**
                         * ListFeaturesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFeaturesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesRequest} ListFeaturesRequest instance
                         */
                        ListFeaturesRequest.create = function create(properties) {
                            return new ListFeaturesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFeaturesRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha.ListFeaturesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesRequest} message ListFeaturesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFeaturesRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.ListFeaturesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesRequest} message ListFeaturesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFeaturesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesRequest} ListFeaturesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.ListFeaturesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.filter = reader.string();
                                    break;
                                case 5:
                                    message.orderBy = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFeaturesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesRequest} ListFeaturesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFeaturesRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFeaturesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFeaturesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesRequest} ListFeaturesRequest
                         */
                        ListFeaturesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.ListFeaturesRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.ListFeaturesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFeaturesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ListFeaturesRequest} message ListFeaturesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFeaturesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFeaturesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFeaturesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListFeaturesRequest;
                    })();
    
                    v1alpha.ListFeaturesResponse = (function() {
    
                        /**
                         * Properties of a ListFeaturesResponse.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IListFeaturesResponse
                         * @property {Array.<google.cloud.gkehub.v1alpha.IFeature>|null} [resources] ListFeaturesResponse resources
                         * @property {string|null} [nextPageToken] ListFeaturesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListFeaturesResponse.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a ListFeaturesResponse.
                         * @implements IListFeaturesResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesResponse=} [properties] Properties to set
                         */
                        function ListFeaturesResponse(properties) {
                            this.resources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFeaturesResponse resources.
                         * @member {Array.<google.cloud.gkehub.v1alpha.IFeature>} resources
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @instance
                         */
                        ListFeaturesResponse.prototype.resources = $util.emptyArray;
    
                        /**
                         * ListFeaturesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @instance
                         */
                        ListFeaturesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListFeaturesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesResponse} ListFeaturesResponse instance
                         */
                        ListFeaturesResponse.create = function create(properties) {
                            return new ListFeaturesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFeaturesResponse message. Does not implicitly {@link google.cloud.gkehub.v1alpha.ListFeaturesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesResponse} message ListFeaturesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resources != null && message.resources.length)
                                for (var i = 0; i < message.resources.length; ++i)
                                    $root.google.cloud.gkehub.v1alpha.Feature.encode(message.resources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFeaturesResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.ListFeaturesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IListFeaturesResponse} message ListFeaturesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFeaturesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesResponse} ListFeaturesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.ListFeaturesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.resources && message.resources.length))
                                        message.resources = [];
                                    message.resources.push($root.google.cloud.gkehub.v1alpha.Feature.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFeaturesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesResponse} ListFeaturesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFeaturesResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFeaturesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                if (!Array.isArray(message.resources))
                                    return "resources: array expected";
                                for (var i = 0; i < message.resources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha.Feature.verify(message.resources[i]);
                                    if (error)
                                        return "resources." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFeaturesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.ListFeaturesResponse} ListFeaturesResponse
                         */
                        ListFeaturesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.ListFeaturesResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.ListFeaturesResponse();
                            if (object.resources) {
                                if (!Array.isArray(object.resources))
                                    throw TypeError(".google.cloud.gkehub.v1alpha.ListFeaturesResponse.resources: array expected");
                                message.resources = [];
                                for (var i = 0; i < object.resources.length; ++i) {
                                    if (typeof object.resources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha.ListFeaturesResponse.resources: object expected");
                                    message.resources[i] = $root.google.cloud.gkehub.v1alpha.Feature.fromObject(object.resources[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFeaturesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ListFeaturesResponse} message ListFeaturesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFeaturesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.resources = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.resources && message.resources.length) {
                                object.resources = [];
                                for (var j = 0; j < message.resources.length; ++j)
                                    object.resources[j] = $root.google.cloud.gkehub.v1alpha.Feature.toObject(message.resources[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFeaturesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.ListFeaturesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFeaturesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListFeaturesResponse;
                    })();
    
                    v1alpha.GetFeatureRequest = (function() {
    
                        /**
                         * Properties of a GetFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IGetFeatureRequest
                         * @property {string|null} [name] GetFeatureRequest name
                         */
    
                        /**
                         * Constructs a new GetFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a GetFeatureRequest.
                         * @implements IGetFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IGetFeatureRequest=} [properties] Properties to set
                         */
                        function GetFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @instance
                         */
                        GetFeatureRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IGetFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.GetFeatureRequest} GetFeatureRequest instance
                         */
                        GetFeatureRequest.create = function create(properties) {
                            return new GetFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha.GetFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IGetFeatureRequest} message GetFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.GetFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IGetFeatureRequest} message GetFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.GetFeatureRequest} GetFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.GetFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.GetFeatureRequest} GetFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.GetFeatureRequest} GetFeatureRequest
                         */
                        GetFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.GetFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.GetFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.GetFeatureRequest} message GetFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.GetFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetFeatureRequest;
                    })();
    
                    v1alpha.CreateFeatureRequest = (function() {
    
                        /**
                         * Properties of a CreateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface ICreateFeatureRequest
                         * @property {string|null} [parent] CreateFeatureRequest parent
                         * @property {string|null} [featureId] CreateFeatureRequest featureId
                         * @property {google.cloud.gkehub.v1alpha.IFeature|null} [resource] CreateFeatureRequest resource
                         * @property {string|null} [requestId] CreateFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a CreateFeatureRequest.
                         * @implements ICreateFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.ICreateFeatureRequest=} [properties] Properties to set
                         */
                        function CreateFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFeatureRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.parent = "";
    
                        /**
                         * CreateFeatureRequest featureId.
                         * @member {string} featureId
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.featureId = "";
    
                        /**
                         * CreateFeatureRequest resource.
                         * @member {google.cloud.gkehub.v1alpha.IFeature|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.resource = null;
    
                        /**
                         * CreateFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICreateFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.CreateFeatureRequest} CreateFeatureRequest instance
                         */
                        CreateFeatureRequest.create = function create(properties) {
                            return new CreateFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha.CreateFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICreateFeatureRequest} message CreateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.featureId != null && Object.hasOwnProperty.call(message, "featureId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.featureId);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1alpha.Feature.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.CreateFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.ICreateFeatureRequest} message CreateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.CreateFeatureRequest} CreateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.CreateFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.featureId = reader.string();
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1alpha.Feature.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.CreateFeatureRequest} CreateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.featureId != null && message.hasOwnProperty("featureId"))
                                if (!$util.isString(message.featureId))
                                    return "featureId: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1alpha.Feature.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.CreateFeatureRequest} CreateFeatureRequest
                         */
                        CreateFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.CreateFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.CreateFeatureRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.featureId != null)
                                message.featureId = String(object.featureId);
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.CreateFeatureRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1alpha.Feature.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.CreateFeatureRequest} message CreateFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.featureId = "";
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.featureId != null && message.hasOwnProperty("featureId"))
                                object.featureId = message.featureId;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1alpha.Feature.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.CreateFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateFeatureRequest;
                    })();
    
                    v1alpha.DeleteFeatureRequest = (function() {
    
                        /**
                         * Properties of a DeleteFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IDeleteFeatureRequest
                         * @property {string|null} [name] DeleteFeatureRequest name
                         * @property {boolean|null} [force] DeleteFeatureRequest force
                         * @property {string|null} [requestId] DeleteFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents a DeleteFeatureRequest.
                         * @implements IDeleteFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IDeleteFeatureRequest=} [properties] Properties to set
                         */
                        function DeleteFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.name = "";
    
                        /**
                         * DeleteFeatureRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.force = false;
    
                        /**
                         * DeleteFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IDeleteFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.DeleteFeatureRequest} DeleteFeatureRequest instance
                         */
                        DeleteFeatureRequest.create = function create(properties) {
                            return new DeleteFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha.DeleteFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IDeleteFeatureRequest} message DeleteFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.force);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.DeleteFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IDeleteFeatureRequest} message DeleteFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.DeleteFeatureRequest} DeleteFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.DeleteFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.force = reader.bool();
                                    break;
                                case 3:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.DeleteFeatureRequest} DeleteFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.DeleteFeatureRequest} DeleteFeatureRequest
                         */
                        DeleteFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.DeleteFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.DeleteFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.DeleteFeatureRequest} message DeleteFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.force = false;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.DeleteFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteFeatureRequest;
                    })();
    
                    v1alpha.UpdateFeatureRequest = (function() {
    
                        /**
                         * Properties of an UpdateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IUpdateFeatureRequest
                         * @property {string|null} [name] UpdateFeatureRequest name
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFeatureRequest updateMask
                         * @property {google.cloud.gkehub.v1alpha.IFeature|null} [resource] UpdateFeatureRequest resource
                         * @property {string|null} [requestId] UpdateFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents an UpdateFeatureRequest.
                         * @implements IUpdateFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IUpdateFeatureRequest=} [properties] Properties to set
                         */
                        function UpdateFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.name = "";
    
                        /**
                         * UpdateFeatureRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateFeatureRequest resource.
                         * @member {google.cloud.gkehub.v1alpha.IFeature|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.resource = null;
    
                        /**
                         * UpdateFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IUpdateFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.UpdateFeatureRequest} UpdateFeatureRequest instance
                         */
                        UpdateFeatureRequest.create = function create(properties) {
                            return new UpdateFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha.UpdateFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IUpdateFeatureRequest} message UpdateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1alpha.Feature.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.UpdateFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IUpdateFeatureRequest} message UpdateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.UpdateFeatureRequest} UpdateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.UpdateFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1alpha.Feature.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.UpdateFeatureRequest} UpdateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1alpha.Feature.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.UpdateFeatureRequest} UpdateFeatureRequest
                         */
                        UpdateFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.UpdateFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.UpdateFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.UpdateFeatureRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.UpdateFeatureRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1alpha.Feature.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.UpdateFeatureRequest} message UpdateFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateMask = null;
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1alpha.Feature.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.UpdateFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateFeatureRequest;
                    })();
    
                    v1alpha.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.gkehub.v1alpha
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.gkehub.v1alpha.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.target = reader.string();
                                    break;
                                case 4:
                                    message.verb = reader.string();
                                    break;
                                case 5:
                                    message.statusDetail = reader.string();
                                    break;
                                case 6:
                                    message.cancelRequested = reader.bool();
                                    break;
                                case 7:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationMetadata;
                    })();
    
                    return v1alpha;
                })();
    
                gkehub.metering = (function() {
    
                    /**
                     * Namespace metering.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var metering = {};
    
                    metering.v1alpha = (function() {
    
                        /**
                         * Namespace v1alpha.
                         * @memberof google.cloud.gkehub.metering
                         * @namespace
                         */
                        var v1alpha = {};
    
                        v1alpha.MembershipState = (function() {
    
                            /**
                             * Properties of a MembershipState.
                             * @memberof google.cloud.gkehub.metering.v1alpha
                             * @interface IMembershipState
                             * @property {google.protobuf.ITimestamp|null} [lastMeasurementTime] MembershipState lastMeasurementTime
                             * @property {number|null} [preciseLastMeasuredClusterVcpuCapacity] MembershipState preciseLastMeasuredClusterVcpuCapacity
                             */
    
                            /**
                             * Constructs a new MembershipState.
                             * @memberof google.cloud.gkehub.metering.v1alpha
                             * @classdesc Represents a MembershipState.
                             * @implements IMembershipState
                             * @constructor
                             * @param {google.cloud.gkehub.metering.v1alpha.IMembershipState=} [properties] Properties to set
                             */
                            function MembershipState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipState lastMeasurementTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} lastMeasurementTime
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.lastMeasurementTime = null;
    
                            /**
                             * MembershipState preciseLastMeasuredClusterVcpuCapacity.
                             * @member {number} preciseLastMeasuredClusterVcpuCapacity
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.preciseLastMeasuredClusterVcpuCapacity = 0;
    
                            /**
                             * Creates a new MembershipState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1alpha.IMembershipState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.metering.v1alpha.MembershipState} MembershipState instance
                             */
                            MembershipState.create = function create(properties) {
                                return new MembershipState(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.metering.v1alpha.MembershipState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1alpha.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.lastMeasurementTime != null && Object.hasOwnProperty.call(message, "lastMeasurementTime"))
                                    $root.google.protobuf.Timestamp.encode(message.lastMeasurementTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.preciseLastMeasuredClusterVcpuCapacity != null && Object.hasOwnProperty.call(message, "preciseLastMeasuredClusterVcpuCapacity"))
                                    writer.uint32(/* id 3, wireType 5 =*/29).float(message.preciseLastMeasuredClusterVcpuCapacity);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.metering.v1alpha.MembershipState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1alpha.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.metering.v1alpha.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.metering.v1alpha.MembershipState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.lastMeasurementTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.preciseLastMeasuredClusterVcpuCapacity = reader.float();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.metering.v1alpha.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.lastMeasurementTime != null && message.hasOwnProperty("lastMeasurementTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.lastMeasurementTime);
                                    if (error)
                                        return "lastMeasurementTime." + error;
                                }
                                if (message.preciseLastMeasuredClusterVcpuCapacity != null && message.hasOwnProperty("preciseLastMeasuredClusterVcpuCapacity"))
                                    if (typeof message.preciseLastMeasuredClusterVcpuCapacity !== "number")
                                        return "preciseLastMeasuredClusterVcpuCapacity: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.metering.v1alpha.MembershipState} MembershipState
                             */
                            MembershipState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.metering.v1alpha.MembershipState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.metering.v1alpha.MembershipState();
                                if (object.lastMeasurementTime != null) {
                                    if (typeof object.lastMeasurementTime !== "object")
                                        throw TypeError(".google.cloud.gkehub.metering.v1alpha.MembershipState.lastMeasurementTime: object expected");
                                    message.lastMeasurementTime = $root.google.protobuf.Timestamp.fromObject(object.lastMeasurementTime);
                                }
                                if (object.preciseLastMeasuredClusterVcpuCapacity != null)
                                    message.preciseLastMeasuredClusterVcpuCapacity = Number(object.preciseLastMeasuredClusterVcpuCapacity);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1alpha.MembershipState} message MembershipState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.lastMeasurementTime = null;
                                    object.preciseLastMeasuredClusterVcpuCapacity = 0;
                                }
                                if (message.lastMeasurementTime != null && message.hasOwnProperty("lastMeasurementTime"))
                                    object.lastMeasurementTime = $root.google.protobuf.Timestamp.toObject(message.lastMeasurementTime, options);
                                if (message.preciseLastMeasuredClusterVcpuCapacity != null && message.hasOwnProperty("preciseLastMeasuredClusterVcpuCapacity"))
                                    object.preciseLastMeasuredClusterVcpuCapacity = options.json && !isFinite(message.preciseLastMeasuredClusterVcpuCapacity) ? String(message.preciseLastMeasuredClusterVcpuCapacity) : message.preciseLastMeasuredClusterVcpuCapacity;
                                return object;
                            };
    
                            /**
                             * Converts this MembershipState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.metering.v1alpha.MembershipState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipState;
                        })();
    
                        return v1alpha;
                    })();
    
                    metering.v1beta = (function() {
    
                        /**
                         * Namespace v1beta.
                         * @memberof google.cloud.gkehub.metering
                         * @namespace
                         */
                        var v1beta = {};
    
                        v1beta.MembershipState = (function() {
    
                            /**
                             * Properties of a MembershipState.
                             * @memberof google.cloud.gkehub.metering.v1beta
                             * @interface IMembershipState
                             * @property {google.protobuf.ITimestamp|null} [lastMeasurementTime] MembershipState lastMeasurementTime
                             * @property {number|null} [preciseLastMeasuredClusterVcpuCapacity] MembershipState preciseLastMeasuredClusterVcpuCapacity
                             */
    
                            /**
                             * Constructs a new MembershipState.
                             * @memberof google.cloud.gkehub.metering.v1beta
                             * @classdesc Represents a MembershipState.
                             * @implements IMembershipState
                             * @constructor
                             * @param {google.cloud.gkehub.metering.v1beta.IMembershipState=} [properties] Properties to set
                             */
                            function MembershipState(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipState lastMeasurementTime.
                             * @member {google.protobuf.ITimestamp|null|undefined} lastMeasurementTime
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.lastMeasurementTime = null;
    
                            /**
                             * MembershipState preciseLastMeasuredClusterVcpuCapacity.
                             * @member {number} preciseLastMeasuredClusterVcpuCapacity
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.preciseLastMeasuredClusterVcpuCapacity = 0;
    
                            /**
                             * Creates a new MembershipState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1beta.IMembershipState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.metering.v1beta.MembershipState} MembershipState instance
                             */
                            MembershipState.create = function create(properties) {
                                return new MembershipState(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.metering.v1beta.MembershipState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1beta.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.lastMeasurementTime != null && Object.hasOwnProperty.call(message, "lastMeasurementTime"))
                                    $root.google.protobuf.Timestamp.encode(message.lastMeasurementTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.preciseLastMeasuredClusterVcpuCapacity != null && Object.hasOwnProperty.call(message, "preciseLastMeasuredClusterVcpuCapacity"))
                                    writer.uint32(/* id 3, wireType 5 =*/29).float(message.preciseLastMeasuredClusterVcpuCapacity);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.metering.v1beta.MembershipState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1beta.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.metering.v1beta.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.metering.v1beta.MembershipState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.lastMeasurementTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    case 3:
                                        message.preciseLastMeasuredClusterVcpuCapacity = reader.float();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.metering.v1beta.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.lastMeasurementTime != null && message.hasOwnProperty("lastMeasurementTime")) {
                                    var error = $root.google.protobuf.Timestamp.verify(message.lastMeasurementTime);
                                    if (error)
                                        return "lastMeasurementTime." + error;
                                }
                                if (message.preciseLastMeasuredClusterVcpuCapacity != null && message.hasOwnProperty("preciseLastMeasuredClusterVcpuCapacity"))
                                    if (typeof message.preciseLastMeasuredClusterVcpuCapacity !== "number")
                                        return "preciseLastMeasuredClusterVcpuCapacity: number expected";
                                return null;
                            };
    
                            /**
                             * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.metering.v1beta.MembershipState} MembershipState
                             */
                            MembershipState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.metering.v1beta.MembershipState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.metering.v1beta.MembershipState();
                                if (object.lastMeasurementTime != null) {
                                    if (typeof object.lastMeasurementTime !== "object")
                                        throw TypeError(".google.cloud.gkehub.metering.v1beta.MembershipState.lastMeasurementTime: object expected");
                                    message.lastMeasurementTime = $root.google.protobuf.Timestamp.fromObject(object.lastMeasurementTime);
                                }
                                if (object.preciseLastMeasuredClusterVcpuCapacity != null)
                                    message.preciseLastMeasuredClusterVcpuCapacity = Number(object.preciseLastMeasuredClusterVcpuCapacity);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.metering.v1beta.MembershipState} message MembershipState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.lastMeasurementTime = null;
                                    object.preciseLastMeasuredClusterVcpuCapacity = 0;
                                }
                                if (message.lastMeasurementTime != null && message.hasOwnProperty("lastMeasurementTime"))
                                    object.lastMeasurementTime = $root.google.protobuf.Timestamp.toObject(message.lastMeasurementTime, options);
                                if (message.preciseLastMeasuredClusterVcpuCapacity != null && message.hasOwnProperty("preciseLastMeasuredClusterVcpuCapacity"))
                                    object.preciseLastMeasuredClusterVcpuCapacity = options.json && !isFinite(message.preciseLastMeasuredClusterVcpuCapacity) ? String(message.preciseLastMeasuredClusterVcpuCapacity) : message.preciseLastMeasuredClusterVcpuCapacity;
                                return object;
                            };
    
                            /**
                             * Converts this MembershipState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.metering.v1beta.MembershipState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipState;
                        })();
    
                        return v1beta;
                    })();
    
                    return metering;
                })();
    
                gkehub.servicemesh = (function() {
    
                    /**
                     * Namespace servicemesh.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var servicemesh = {};
    
                    servicemesh.v1alpha = (function() {
    
                        /**
                         * Namespace v1alpha.
                         * @memberof google.cloud.gkehub.servicemesh
                         * @namespace
                         */
                        var v1alpha = {};
    
                        v1alpha.FeatureState = (function() {
    
                            /**
                             * Properties of a FeatureState.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @interface IFeatureState
                             * @property {Array.<google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage>|null} [analysisMessages] FeatureState analysisMessages
                             */
    
                            /**
                             * Constructs a new FeatureState.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @classdesc Represents a FeatureState.
                             * @implements IFeatureState
                             * @constructor
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IFeatureState=} [properties] Properties to set
                             */
                            function FeatureState(properties) {
                                this.analysisMessages = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * FeatureState analysisMessages.
                             * @member {Array.<google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage>} analysisMessages
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @instance
                             */
                            FeatureState.prototype.analysisMessages = $util.emptyArray;
    
                            /**
                             * Creates a new FeatureState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IFeatureState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.FeatureState} FeatureState instance
                             */
                            FeatureState.create = function create(properties) {
                                return new FeatureState(properties);
                            };
    
                            /**
                             * Encodes the specified FeatureState message. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.FeatureState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IFeatureState} message FeatureState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.analysisMessages != null && message.analysisMessages.length)
                                    for (var i = 0; i < message.analysisMessages.length; ++i)
                                        $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.encode(message.analysisMessages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified FeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.FeatureState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IFeatureState} message FeatureState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            FeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a FeatureState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.FeatureState} FeatureState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        if (!(message.analysisMessages && message.analysisMessages.length))
                                            message.analysisMessages = [];
                                        message.analysisMessages.push($root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a FeatureState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.FeatureState} FeatureState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            FeatureState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a FeatureState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            FeatureState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.analysisMessages != null && message.hasOwnProperty("analysisMessages")) {
                                    if (!Array.isArray(message.analysisMessages))
                                        return "analysisMessages: array expected";
                                    for (var i = 0; i < message.analysisMessages.length; ++i) {
                                        var error = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.verify(message.analysisMessages[i]);
                                        if (error)
                                            return "analysisMessages." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a FeatureState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.FeatureState} FeatureState
                             */
                            FeatureState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.servicemesh.v1alpha.FeatureState();
                                if (object.analysisMessages) {
                                    if (!Array.isArray(object.analysisMessages))
                                        throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.FeatureState.analysisMessages: array expected");
                                    message.analysisMessages = [];
                                    for (var i = 0; i < object.analysisMessages.length; ++i) {
                                        if (typeof object.analysisMessages[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.FeatureState.analysisMessages: object expected");
                                        message.analysisMessages[i] = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.fromObject(object.analysisMessages[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a FeatureState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.FeatureState} message FeatureState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            FeatureState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.analysisMessages = [];
                                if (message.analysisMessages && message.analysisMessages.length) {
                                    object.analysisMessages = [];
                                    for (var j = 0; j < message.analysisMessages.length; ++j)
                                        object.analysisMessages[j] = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.toObject(message.analysisMessages[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this FeatureState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.FeatureState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            FeatureState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return FeatureState;
                        })();
    
                        v1alpha.MembershipState = (function() {
    
                            /**
                             * Properties of a MembershipState.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @interface IMembershipState
                             * @property {Array.<google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage>|null} [analysisMessages] MembershipState analysisMessages
                             */
    
                            /**
                             * Constructs a new MembershipState.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @classdesc Represents a MembershipState.
                             * @implements IMembershipState
                             * @constructor
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IMembershipState=} [properties] Properties to set
                             */
                            function MembershipState(properties) {
                                this.analysisMessages = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * MembershipState analysisMessages.
                             * @member {Array.<google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage>} analysisMessages
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @instance
                             */
                            MembershipState.prototype.analysisMessages = $util.emptyArray;
    
                            /**
                             * Creates a new MembershipState instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IMembershipState=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.MembershipState} MembershipState instance
                             */
                            MembershipState.create = function create(properties) {
                                return new MembershipState(properties);
                            };
    
                            /**
                             * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.MembershipState.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.analysisMessages != null && message.analysisMessages.length)
                                    for (var i = 0; i < message.analysisMessages.length; ++i)
                                        $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.encode(message.analysisMessages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.MembershipState.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IMembershipState} message MembershipState message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        if (!(message.analysisMessages && message.analysisMessages.length))
                                            message.analysisMessages = [];
                                        message.analysisMessages.push($root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.decode(reader, reader.uint32()));
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.MembershipState} MembershipState
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            MembershipState.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies a MembershipState message.
                             * @function verify
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            MembershipState.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.analysisMessages != null && message.hasOwnProperty("analysisMessages")) {
                                    if (!Array.isArray(message.analysisMessages))
                                        return "analysisMessages: array expected";
                                    for (var i = 0; i < message.analysisMessages.length; ++i) {
                                        var error = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.verify(message.analysisMessages[i]);
                                        if (error)
                                            return "analysisMessages." + error;
                                    }
                                }
                                return null;
                            };
    
                            /**
                             * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.MembershipState} MembershipState
                             */
                            MembershipState.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState)
                                    return object;
                                var message = new $root.google.cloud.gkehub.servicemesh.v1alpha.MembershipState();
                                if (object.analysisMessages) {
                                    if (!Array.isArray(object.analysisMessages))
                                        throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.MembershipState.analysisMessages: array expected");
                                    message.analysisMessages = [];
                                    for (var i = 0; i < object.analysisMessages.length; ++i) {
                                        if (typeof object.analysisMessages[i] !== "object")
                                            throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.MembershipState.analysisMessages: object expected");
                                        message.analysisMessages[i] = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.fromObject(object.analysisMessages[i]);
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.MembershipState} message MembershipState
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            MembershipState.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.analysisMessages = [];
                                if (message.analysisMessages && message.analysisMessages.length) {
                                    object.analysisMessages = [];
                                    for (var j = 0; j < message.analysisMessages.length; ++j)
                                        object.analysisMessages[j] = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.toObject(message.analysisMessages[j], options);
                                }
                                return object;
                            };
    
                            /**
                             * Converts this MembershipState to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.MembershipState
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            MembershipState.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return MembershipState;
                        })();
    
                        v1alpha.AnalysisMessageBase = (function() {
    
                            /**
                             * Properties of an AnalysisMessageBase.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @interface IAnalysisMessageBase
                             * @property {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.IType|null} [type] AnalysisMessageBase type
                             * @property {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Level|null} [level] AnalysisMessageBase level
                             * @property {string|null} [documentationUrl] AnalysisMessageBase documentationUrl
                             */
    
                            /**
                             * Constructs a new AnalysisMessageBase.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @classdesc Represents an AnalysisMessageBase.
                             * @implements IAnalysisMessageBase
                             * @constructor
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessageBase=} [properties] Properties to set
                             */
                            function AnalysisMessageBase(properties) {
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AnalysisMessageBase type.
                             * @member {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.IType|null|undefined} type
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @instance
                             */
                            AnalysisMessageBase.prototype.type = null;
    
                            /**
                             * AnalysisMessageBase level.
                             * @member {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Level} level
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @instance
                             */
                            AnalysisMessageBase.prototype.level = 0;
    
                            /**
                             * AnalysisMessageBase documentationUrl.
                             * @member {string} documentationUrl
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @instance
                             */
                            AnalysisMessageBase.prototype.documentationUrl = "";
    
                            /**
                             * Creates a new AnalysisMessageBase instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessageBase=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase} AnalysisMessageBase instance
                             */
                            AnalysisMessageBase.create = function create(properties) {
                                return new AnalysisMessageBase(properties);
                            };
    
                            /**
                             * Encodes the specified AnalysisMessageBase message. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessageBase} message AnalysisMessageBase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AnalysisMessageBase.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                    $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.encode(message.type, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.level != null && Object.hasOwnProperty.call(message, "level"))
                                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.level);
                                if (message.documentationUrl != null && Object.hasOwnProperty.call(message, "documentationUrl"))
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.documentationUrl);
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AnalysisMessageBase message, length delimited. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessageBase} message AnalysisMessageBase message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AnalysisMessageBase.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AnalysisMessageBase message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase} AnalysisMessageBase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AnalysisMessageBase.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.type = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.level = reader.int32();
                                        break;
                                    case 3:
                                        message.documentationUrl = reader.string();
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AnalysisMessageBase message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase} AnalysisMessageBase
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AnalysisMessageBase.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AnalysisMessageBase message.
                             * @function verify
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AnalysisMessageBase.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.type != null && message.hasOwnProperty("type")) {
                                    var error = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.verify(message.type);
                                    if (error)
                                        return "type." + error;
                                }
                                if (message.level != null && message.hasOwnProperty("level"))
                                    switch (message.level) {
                                    default:
                                        return "level: enum value expected";
                                    case 0:
                                    case 3:
                                    case 8:
                                    case 12:
                                        break;
                                    }
                                if (message.documentationUrl != null && message.hasOwnProperty("documentationUrl"))
                                    if (!$util.isString(message.documentationUrl))
                                        return "documentationUrl: string expected";
                                return null;
                            };
    
                            /**
                             * Creates an AnalysisMessageBase message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase} AnalysisMessageBase
                             */
                            AnalysisMessageBase.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase)
                                    return object;
                                var message = new $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase();
                                if (object.type != null) {
                                    if (typeof object.type !== "object")
                                        throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.type: object expected");
                                    message.type = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.fromObject(object.type);
                                }
                                switch (object.level) {
                                case "LEVEL_UNSPECIFIED":
                                case 0:
                                    message.level = 0;
                                    break;
                                case "ERROR":
                                case 3:
                                    message.level = 3;
                                    break;
                                case "WARNING":
                                case 8:
                                    message.level = 8;
                                    break;
                                case "INFO":
                                case 12:
                                    message.level = 12;
                                    break;
                                }
                                if (object.documentationUrl != null)
                                    message.documentationUrl = String(object.documentationUrl);
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AnalysisMessageBase message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase} message AnalysisMessageBase
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AnalysisMessageBase.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.defaults) {
                                    object.type = null;
                                    object.level = options.enums === String ? "LEVEL_UNSPECIFIED" : 0;
                                    object.documentationUrl = "";
                                }
                                if (message.type != null && message.hasOwnProperty("type"))
                                    object.type = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.toObject(message.type, options);
                                if (message.level != null && message.hasOwnProperty("level"))
                                    object.level = options.enums === String ? $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Level[message.level] : message.level;
                                if (message.documentationUrl != null && message.hasOwnProperty("documentationUrl"))
                                    object.documentationUrl = message.documentationUrl;
                                return object;
                            };
    
                            /**
                             * Converts this AnalysisMessageBase to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AnalysisMessageBase.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            AnalysisMessageBase.Type = (function() {
    
                                /**
                                 * Properties of a Type.
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                                 * @interface IType
                                 * @property {string|null} [displayName] Type displayName
                                 * @property {string|null} [code] Type code
                                 */
    
                                /**
                                 * Constructs a new Type.
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase
                                 * @classdesc Represents a Type.
                                 * @implements IType
                                 * @constructor
                                 * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.IType=} [properties] Properties to set
                                 */
                                function Type(properties) {
                                    if (properties)
                                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                            if (properties[keys[i]] != null)
                                                this[keys[i]] = properties[keys[i]];
                                }
    
                                /**
                                 * Type displayName.
                                 * @member {string} displayName
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @instance
                                 */
                                Type.prototype.displayName = "";
    
                                /**
                                 * Type code.
                                 * @member {string} code
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @instance
                                 */
                                Type.prototype.code = "";
    
                                /**
                                 * Creates a new Type instance using the specified properties.
                                 * @function create
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.IType=} [properties] Properties to set
                                 * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type} Type instance
                                 */
                                Type.create = function create(properties) {
                                    return new Type(properties);
                                };
    
                                /**
                                 * Encodes the specified Type message. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.verify|verify} messages.
                                 * @function encode
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.IType} message Type message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Type.encode = function encode(message, writer) {
                                    if (!writer)
                                        writer = $Writer.create();
                                    if (message.displayName != null && Object.hasOwnProperty.call(message, "displayName"))
                                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.displayName);
                                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.code);
                                    return writer;
                                };
    
                                /**
                                 * Encodes the specified Type message, length delimited. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type.verify|verify} messages.
                                 * @function encodeDelimited
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.IType} message Type message or plain object to encode
                                 * @param {$protobuf.Writer} [writer] Writer to encode to
                                 * @returns {$protobuf.Writer} Writer
                                 */
                                Type.encodeDelimited = function encodeDelimited(message, writer) {
                                    return this.encode(message, writer).ldelim();
                                };
    
                                /**
                                 * Decodes a Type message from the specified reader or buffer.
                                 * @function decode
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @param {number} [length] Message length if known beforehand
                                 * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type} Type
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Type.decode = function decode(reader, length) {
                                    if (!(reader instanceof $Reader))
                                        reader = $Reader.create(reader);
                                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type();
                                    while (reader.pos < end) {
                                        var tag = reader.uint32();
                                        switch (tag >>> 3) {
                                        case 1:
                                            message.displayName = reader.string();
                                            break;
                                        case 2:
                                            message.code = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag & 7);
                                            break;
                                        }
                                    }
                                    return message;
                                };
    
                                /**
                                 * Decodes a Type message from the specified reader or buffer, length delimited.
                                 * @function decodeDelimited
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                                 * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type} Type
                                 * @throws {Error} If the payload is not a reader or valid buffer
                                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                                 */
                                Type.decodeDelimited = function decodeDelimited(reader) {
                                    if (!(reader instanceof $Reader))
                                        reader = new $Reader(reader);
                                    return this.decode(reader, reader.uint32());
                                };
    
                                /**
                                 * Verifies a Type message.
                                 * @function verify
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {Object.<string,*>} message Plain object to verify
                                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                                 */
                                Type.verify = function verify(message) {
                                    if (typeof message !== "object" || message === null)
                                        return "object expected";
                                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                                        if (!$util.isString(message.displayName))
                                            return "displayName: string expected";
                                    if (message.code != null && message.hasOwnProperty("code"))
                                        if (!$util.isString(message.code))
                                            return "code: string expected";
                                    return null;
                                };
    
                                /**
                                 * Creates a Type message from a plain object. Also converts values to their respective internal types.
                                 * @function fromObject
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {Object.<string,*>} object Plain object
                                 * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type} Type
                                 */
                                Type.fromObject = function fromObject(object) {
                                    if (object instanceof $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type)
                                        return object;
                                    var message = new $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type();
                                    if (object.displayName != null)
                                        message.displayName = String(object.displayName);
                                    if (object.code != null)
                                        message.code = String(object.code);
                                    return message;
                                };
    
                                /**
                                 * Creates a plain object from a Type message. Also converts values to other types if specified.
                                 * @function toObject
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @static
                                 * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type} message Type
                                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                                 * @returns {Object.<string,*>} Plain object
                                 */
                                Type.toObject = function toObject(message, options) {
                                    if (!options)
                                        options = {};
                                    var object = {};
                                    if (options.defaults) {
                                        object.displayName = "";
                                        object.code = "";
                                    }
                                    if (message.displayName != null && message.hasOwnProperty("displayName"))
                                        object.displayName = message.displayName;
                                    if (message.code != null && message.hasOwnProperty("code"))
                                        object.code = message.code;
                                    return object;
                                };
    
                                /**
                                 * Converts this Type to JSON.
                                 * @function toJSON
                                 * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Type
                                 * @instance
                                 * @returns {Object.<string,*>} JSON object
                                 */
                                Type.prototype.toJSON = function toJSON() {
                                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                                };
    
                                return Type;
                            })();
    
                            /**
                             * Level enum.
                             * @name google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.Level
                             * @enum {number}
                             * @property {number} LEVEL_UNSPECIFIED=0 LEVEL_UNSPECIFIED value
                             * @property {number} ERROR=3 ERROR value
                             * @property {number} WARNING=8 WARNING value
                             * @property {number} INFO=12 INFO value
                             */
                            AnalysisMessageBase.Level = (function() {
                                var valuesById = {}, values = Object.create(valuesById);
                                values[valuesById[0] = "LEVEL_UNSPECIFIED"] = 0;
                                values[valuesById[3] = "ERROR"] = 3;
                                values[valuesById[8] = "WARNING"] = 8;
                                values[valuesById[12] = "INFO"] = 12;
                                return values;
                            })();
    
                            return AnalysisMessageBase;
                        })();
    
                        v1alpha.AnalysisMessage = (function() {
    
                            /**
                             * Properties of an AnalysisMessage.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @interface IAnalysisMessage
                             * @property {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessageBase|null} [messageBase] AnalysisMessage messageBase
                             * @property {string|null} [description] AnalysisMessage description
                             * @property {Array.<string>|null} [resourcePaths] AnalysisMessage resourcePaths
                             * @property {google.protobuf.IStruct|null} [args] AnalysisMessage args
                             */
    
                            /**
                             * Constructs a new AnalysisMessage.
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha
                             * @classdesc Represents an AnalysisMessage.
                             * @implements IAnalysisMessage
                             * @constructor
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage=} [properties] Properties to set
                             */
                            function AnalysisMessage(properties) {
                                this.resourcePaths = [];
                                if (properties)
                                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                        if (properties[keys[i]] != null)
                                            this[keys[i]] = properties[keys[i]];
                            }
    
                            /**
                             * AnalysisMessage messageBase.
                             * @member {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessageBase|null|undefined} messageBase
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @instance
                             */
                            AnalysisMessage.prototype.messageBase = null;
    
                            /**
                             * AnalysisMessage description.
                             * @member {string} description
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @instance
                             */
                            AnalysisMessage.prototype.description = "";
    
                            /**
                             * AnalysisMessage resourcePaths.
                             * @member {Array.<string>} resourcePaths
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @instance
                             */
                            AnalysisMessage.prototype.resourcePaths = $util.emptyArray;
    
                            /**
                             * AnalysisMessage args.
                             * @member {google.protobuf.IStruct|null|undefined} args
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @instance
                             */
                            AnalysisMessage.prototype.args = null;
    
                            /**
                             * Creates a new AnalysisMessage instance using the specified properties.
                             * @function create
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage=} [properties] Properties to set
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage} AnalysisMessage instance
                             */
                            AnalysisMessage.create = function create(properties) {
                                return new AnalysisMessage(properties);
                            };
    
                            /**
                             * Encodes the specified AnalysisMessage message. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.verify|verify} messages.
                             * @function encode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage} message AnalysisMessage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AnalysisMessage.encode = function encode(message, writer) {
                                if (!writer)
                                    writer = $Writer.create();
                                if (message.messageBase != null && Object.hasOwnProperty.call(message, "messageBase"))
                                    $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.encode(message.messageBase, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                                if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                                if (message.resourcePaths != null && message.resourcePaths.length)
                                    for (var i = 0; i < message.resourcePaths.length; ++i)
                                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.resourcePaths[i]);
                                if (message.args != null && Object.hasOwnProperty.call(message, "args"))
                                    $root.google.protobuf.Struct.encode(message.args, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                                return writer;
                            };
    
                            /**
                             * Encodes the specified AnalysisMessage message, length delimited. Does not implicitly {@link google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.verify|verify} messages.
                             * @function encodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.IAnalysisMessage} message AnalysisMessage message or plain object to encode
                             * @param {$protobuf.Writer} [writer] Writer to encode to
                             * @returns {$protobuf.Writer} Writer
                             */
                            AnalysisMessage.encodeDelimited = function encodeDelimited(message, writer) {
                                return this.encode(message, writer).ldelim();
                            };
    
                            /**
                             * Decodes an AnalysisMessage message from the specified reader or buffer.
                             * @function decode
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @param {number} [length] Message length if known beforehand
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage} AnalysisMessage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AnalysisMessage.decode = function decode(reader, length) {
                                if (!(reader instanceof $Reader))
                                    reader = $Reader.create(reader);
                                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage();
                                while (reader.pos < end) {
                                    var tag = reader.uint32();
                                    switch (tag >>> 3) {
                                    case 1:
                                        message.messageBase = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.decode(reader, reader.uint32());
                                        break;
                                    case 2:
                                        message.description = reader.string();
                                        break;
                                    case 3:
                                        if (!(message.resourcePaths && message.resourcePaths.length))
                                            message.resourcePaths = [];
                                        message.resourcePaths.push(reader.string());
                                        break;
                                    case 4:
                                        message.args = $root.google.protobuf.Struct.decode(reader, reader.uint32());
                                        break;
                                    default:
                                        reader.skipType(tag & 7);
                                        break;
                                    }
                                }
                                return message;
                            };
    
                            /**
                             * Decodes an AnalysisMessage message from the specified reader or buffer, length delimited.
                             * @function decodeDelimited
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage} AnalysisMessage
                             * @throws {Error} If the payload is not a reader or valid buffer
                             * @throws {$protobuf.util.ProtocolError} If required fields are missing
                             */
                            AnalysisMessage.decodeDelimited = function decodeDelimited(reader) {
                                if (!(reader instanceof $Reader))
                                    reader = new $Reader(reader);
                                return this.decode(reader, reader.uint32());
                            };
    
                            /**
                             * Verifies an AnalysisMessage message.
                             * @function verify
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {Object.<string,*>} message Plain object to verify
                             * @returns {string|null} `null` if valid, otherwise the reason why it is not
                             */
                            AnalysisMessage.verify = function verify(message) {
                                if (typeof message !== "object" || message === null)
                                    return "object expected";
                                if (message.messageBase != null && message.hasOwnProperty("messageBase")) {
                                    var error = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.verify(message.messageBase);
                                    if (error)
                                        return "messageBase." + error;
                                }
                                if (message.description != null && message.hasOwnProperty("description"))
                                    if (!$util.isString(message.description))
                                        return "description: string expected";
                                if (message.resourcePaths != null && message.hasOwnProperty("resourcePaths")) {
                                    if (!Array.isArray(message.resourcePaths))
                                        return "resourcePaths: array expected";
                                    for (var i = 0; i < message.resourcePaths.length; ++i)
                                        if (!$util.isString(message.resourcePaths[i]))
                                            return "resourcePaths: string[] expected";
                                }
                                if (message.args != null && message.hasOwnProperty("args")) {
                                    var error = $root.google.protobuf.Struct.verify(message.args);
                                    if (error)
                                        return "args." + error;
                                }
                                return null;
                            };
    
                            /**
                             * Creates an AnalysisMessage message from a plain object. Also converts values to their respective internal types.
                             * @function fromObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {Object.<string,*>} object Plain object
                             * @returns {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage} AnalysisMessage
                             */
                            AnalysisMessage.fromObject = function fromObject(object) {
                                if (object instanceof $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage)
                                    return object;
                                var message = new $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage();
                                if (object.messageBase != null) {
                                    if (typeof object.messageBase !== "object")
                                        throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.messageBase: object expected");
                                    message.messageBase = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.fromObject(object.messageBase);
                                }
                                if (object.description != null)
                                    message.description = String(object.description);
                                if (object.resourcePaths) {
                                    if (!Array.isArray(object.resourcePaths))
                                        throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.resourcePaths: array expected");
                                    message.resourcePaths = [];
                                    for (var i = 0; i < object.resourcePaths.length; ++i)
                                        message.resourcePaths[i] = String(object.resourcePaths[i]);
                                }
                                if (object.args != null) {
                                    if (typeof object.args !== "object")
                                        throw TypeError(".google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage.args: object expected");
                                    message.args = $root.google.protobuf.Struct.fromObject(object.args);
                                }
                                return message;
                            };
    
                            /**
                             * Creates a plain object from an AnalysisMessage message. Also converts values to other types if specified.
                             * @function toObject
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @static
                             * @param {google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage} message AnalysisMessage
                             * @param {$protobuf.IConversionOptions} [options] Conversion options
                             * @returns {Object.<string,*>} Plain object
                             */
                            AnalysisMessage.toObject = function toObject(message, options) {
                                if (!options)
                                    options = {};
                                var object = {};
                                if (options.arrays || options.defaults)
                                    object.resourcePaths = [];
                                if (options.defaults) {
                                    object.messageBase = null;
                                    object.description = "";
                                    object.args = null;
                                }
                                if (message.messageBase != null && message.hasOwnProperty("messageBase"))
                                    object.messageBase = $root.google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessageBase.toObject(message.messageBase, options);
                                if (message.description != null && message.hasOwnProperty("description"))
                                    object.description = message.description;
                                if (message.resourcePaths && message.resourcePaths.length) {
                                    object.resourcePaths = [];
                                    for (var j = 0; j < message.resourcePaths.length; ++j)
                                        object.resourcePaths[j] = message.resourcePaths[j];
                                }
                                if (message.args != null && message.hasOwnProperty("args"))
                                    object.args = $root.google.protobuf.Struct.toObject(message.args, options);
                                return object;
                            };
    
                            /**
                             * Converts this AnalysisMessage to JSON.
                             * @function toJSON
                             * @memberof google.cloud.gkehub.servicemesh.v1alpha.AnalysisMessage
                             * @instance
                             * @returns {Object.<string,*>} JSON object
                             */
                            AnalysisMessage.prototype.toJSON = function toJSON() {
                                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                            };
    
                            return AnalysisMessage;
                        })();
    
                        return v1alpha;
                    })();
    
                    return servicemesh;
                })();
    
                gkehub.v1alpha2 = (function() {
    
                    /**
                     * Namespace v1alpha2.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var v1alpha2 = {};
    
                    v1alpha2.GkeHub = (function() {
    
                        /**
                         * Constructs a new GkeHub service.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a GkeHub
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GkeHub(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GkeHub.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GkeHub;
    
                        /**
                         * Creates new GkeHub service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GkeHub} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GkeHub.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#listMemberships}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef ListMembershipsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1alpha2.ListMembershipsResponse} [response] ListMembershipsResponse
                         */
    
                        /**
                         * Calls ListMemberships.
                         * @function listMemberships
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsRequest} request ListMembershipsRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.ListMembershipsCallback} callback Node-style callback called with the error, if any, and ListMembershipsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.listMemberships = function listMemberships(request, callback) {
                            return this.rpcCall(listMemberships, $root.google.cloud.gkehub.v1alpha2.ListMembershipsRequest, $root.google.cloud.gkehub.v1alpha2.ListMembershipsResponse, request, callback);
                        }, "name", { value: "ListMemberships" });
    
                        /**
                         * Calls ListMemberships.
                         * @function listMemberships
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsRequest} request ListMembershipsRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1alpha2.ListMembershipsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#getMembership}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef GetMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1alpha2.Membership} [response] Membership
                         */
    
                        /**
                         * Calls GetMembership.
                         * @function getMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IGetMembershipRequest} request GetMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.GetMembershipCallback} callback Node-style callback called with the error, if any, and Membership
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.getMembership = function getMembership(request, callback) {
                            return this.rpcCall(getMembership, $root.google.cloud.gkehub.v1alpha2.GetMembershipRequest, $root.google.cloud.gkehub.v1alpha2.Membership, request, callback);
                        }, "name", { value: "GetMembership" });
    
                        /**
                         * Calls GetMembership.
                         * @function getMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IGetMembershipRequest} request GetMembershipRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1alpha2.Membership>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#createMembership}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef CreateMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateMembership.
                         * @function createMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.ICreateMembershipRequest} request CreateMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.CreateMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.createMembership = function createMembership(request, callback) {
                            return this.rpcCall(createMembership, $root.google.cloud.gkehub.v1alpha2.CreateMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateMembership" });
    
                        /**
                         * Calls CreateMembership.
                         * @function createMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.ICreateMembershipRequest} request CreateMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#deleteMembership}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef DeleteMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteMembership.
                         * @function deleteMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IDeleteMembershipRequest} request DeleteMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.DeleteMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.deleteMembership = function deleteMembership(request, callback) {
                            return this.rpcCall(deleteMembership, $root.google.cloud.gkehub.v1alpha2.DeleteMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteMembership" });
    
                        /**
                         * Calls DeleteMembership.
                         * @function deleteMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IDeleteMembershipRequest} request DeleteMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#updateMembership}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef UpdateMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateMembership.
                         * @function updateMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IUpdateMembershipRequest} request UpdateMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.UpdateMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.updateMembership = function updateMembership(request, callback) {
                            return this.rpcCall(updateMembership, $root.google.cloud.gkehub.v1alpha2.UpdateMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateMembership" });
    
                        /**
                         * Calls UpdateMembership.
                         * @function updateMembership
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IUpdateMembershipRequest} request UpdateMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#generateConnectManifest}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef GenerateConnectManifestCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse} [response] GenerateConnectManifestResponse
                         */
    
                        /**
                         * Calls GenerateConnectManifest.
                         * @function generateConnectManifest
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestRequest} request GenerateConnectManifestRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.GenerateConnectManifestCallback} callback Node-style callback called with the error, if any, and GenerateConnectManifestResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.generateConnectManifest = function generateConnectManifest(request, callback) {
                            return this.rpcCall(generateConnectManifest, $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest, $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse, request, callback);
                        }, "name", { value: "GenerateConnectManifest" });
    
                        /**
                         * Calls GenerateConnectManifest.
                         * @function generateConnectManifest
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestRequest} request GenerateConnectManifestRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1alpha2.GkeHub#initializeHub}.
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @typedef InitializeHubCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1alpha2.InitializeHubResponse} [response] InitializeHubResponse
                         */
    
                        /**
                         * Calls InitializeHub.
                         * @function initializeHub
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubRequest} request InitializeHubRequest message or plain object
                         * @param {google.cloud.gkehub.v1alpha2.GkeHub.InitializeHubCallback} callback Node-style callback called with the error, if any, and InitializeHubResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.initializeHub = function initializeHub(request, callback) {
                            return this.rpcCall(initializeHub, $root.google.cloud.gkehub.v1alpha2.InitializeHubRequest, $root.google.cloud.gkehub.v1alpha2.InitializeHubResponse, request, callback);
                        }, "name", { value: "InitializeHub" });
    
                        /**
                         * Calls InitializeHub.
                         * @function initializeHub
                         * @memberof google.cloud.gkehub.v1alpha2.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubRequest} request InitializeHubRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1alpha2.InitializeHubResponse>} Promise
                         * @variation 2
                         */
    
                        return GkeHub;
                    })();
    
                    v1alpha2.Membership = (function() {
    
                        /**
                         * Properties of a Membership.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IMembership
                         * @property {string|null} [name] Membership name
                         * @property {Object.<string,string>|null} [labels] Membership labels
                         * @property {string|null} [description] Membership description
                         * @property {google.cloud.gkehub.v1alpha2.IMembershipEndpoint|null} [endpoint] Membership endpoint
                         * @property {google.cloud.gkehub.v1alpha2.IMembershipState|null} [state] Membership state
                         * @property {google.protobuf.ITimestamp|null} [createTime] Membership createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Membership updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Membership deleteTime
                         * @property {string|null} [externalId] Membership externalId
                         * @property {google.cloud.gkehub.v1alpha2.IAuthority|null} [authority] Membership authority
                         * @property {google.protobuf.ITimestamp|null} [lastConnectionTime] Membership lastConnectionTime
                         * @property {string|null} [uniqueId] Membership uniqueId
                         * @property {google.cloud.gkehub.v1alpha2.Membership.InfrastructureType|null} [infrastructureType] Membership infrastructureType
                         */
    
                        /**
                         * Constructs a new Membership.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a Membership.
                         * @implements IMembership
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IMembership=} [properties] Properties to set
                         */
                        function Membership(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Membership name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.name = "";
    
                        /**
                         * Membership labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.labels = $util.emptyObject;
    
                        /**
                         * Membership description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.description = "";
    
                        /**
                         * Membership endpoint.
                         * @member {google.cloud.gkehub.v1alpha2.IMembershipEndpoint|null|undefined} endpoint
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.endpoint = null;
    
                        /**
                         * Membership state.
                         * @member {google.cloud.gkehub.v1alpha2.IMembershipState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.state = null;
    
                        /**
                         * Membership createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.createTime = null;
    
                        /**
                         * Membership updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.updateTime = null;
    
                        /**
                         * Membership deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.deleteTime = null;
    
                        /**
                         * Membership externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.externalId = "";
    
                        /**
                         * Membership authority.
                         * @member {google.cloud.gkehub.v1alpha2.IAuthority|null|undefined} authority
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.authority = null;
    
                        /**
                         * Membership lastConnectionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastConnectionTime
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.lastConnectionTime = null;
    
                        /**
                         * Membership uniqueId.
                         * @member {string} uniqueId
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.uniqueId = "";
    
                        /**
                         * Membership infrastructureType.
                         * @member {google.cloud.gkehub.v1alpha2.Membership.InfrastructureType} infrastructureType
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Membership.prototype.infrastructureType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Membership type.
                         * @member {"endpoint"|undefined} type
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         */
                        Object.defineProperty(Membership.prototype, "type", {
                            get: $util.oneOfGetter($oneOfFields = ["endpoint"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Membership instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembership=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.Membership} Membership instance
                         */
                        Membership.create = function create(properties) {
                            return new Membership(properties);
                        };
    
                        /**
                         * Encodes the specified Membership message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.Membership.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembership} message Membership message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Membership.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                                $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint.encode(message.endpoint, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1alpha2.MembershipState.encode(message.state, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.externalId != null && Object.hasOwnProperty.call(message, "externalId"))
                                writer.uint32(/* id 9, wireType 2 =*/74).string(message.externalId);
                            if (message.authority != null && Object.hasOwnProperty.call(message, "authority"))
                                $root.google.cloud.gkehub.v1alpha2.Authority.encode(message.authority, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.lastConnectionTime != null && Object.hasOwnProperty.call(message, "lastConnectionTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastConnectionTime, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.uniqueId != null && Object.hasOwnProperty.call(message, "uniqueId"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.uniqueId);
                            if (message.infrastructureType != null && Object.hasOwnProperty.call(message, "infrastructureType"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.infrastructureType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Membership message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.Membership.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembership} message Membership message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Membership.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Membership message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.Membership} Membership
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Membership.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.Membership(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                case 3:
                                    message.description = reader.string();
                                    break;
                                case 4:
                                    message.endpoint = $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.state = $root.google.cloud.gkehub.v1alpha2.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.externalId = reader.string();
                                    break;
                                case 10:
                                    message.authority = $root.google.cloud.gkehub.v1alpha2.Authority.decode(reader, reader.uint32());
                                    break;
                                case 11:
                                    message.lastConnectionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 12:
                                    message.uniqueId = reader.string();
                                    break;
                                case 13:
                                    message.infrastructureType = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Membership message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.Membership} Membership
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Membership.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Membership message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Membership.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.endpoint != null && message.hasOwnProperty("endpoint")) {
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint.verify(message.endpoint);
                                    if (error)
                                        return "endpoint." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.MembershipState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.authority != null && message.hasOwnProperty("authority")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.Authority.verify(message.authority);
                                if (error)
                                    return "authority." + error;
                            }
                            if (message.lastConnectionTime != null && message.hasOwnProperty("lastConnectionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastConnectionTime);
                                if (error)
                                    return "lastConnectionTime." + error;
                            }
                            if (message.uniqueId != null && message.hasOwnProperty("uniqueId"))
                                if (!$util.isString(message.uniqueId))
                                    return "uniqueId: string expected";
                            if (message.infrastructureType != null && message.hasOwnProperty("infrastructureType"))
                                switch (message.infrastructureType) {
                                default:
                                    return "infrastructureType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Membership message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.Membership} Membership
                         */
                        Membership.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.Membership)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.Membership();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.endpoint != null) {
                                if (typeof object.endpoint !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.endpoint: object expected");
                                message.endpoint = $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint.fromObject(object.endpoint);
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1alpha2.MembershipState.fromObject(object.state);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            if (object.authority != null) {
                                if (typeof object.authority !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.authority: object expected");
                                message.authority = $root.google.cloud.gkehub.v1alpha2.Authority.fromObject(object.authority);
                            }
                            if (object.lastConnectionTime != null) {
                                if (typeof object.lastConnectionTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.Membership.lastConnectionTime: object expected");
                                message.lastConnectionTime = $root.google.protobuf.Timestamp.fromObject(object.lastConnectionTime);
                            }
                            if (object.uniqueId != null)
                                message.uniqueId = String(object.uniqueId);
                            switch (object.infrastructureType) {
                            case "INFRASTRUCTURE_TYPE_UNSPECIFIED":
                            case 0:
                                message.infrastructureType = 0;
                                break;
                            case "ON_PREM":
                            case 1:
                                message.infrastructureType = 1;
                                break;
                            case "MULTI_CLOUD":
                            case 2:
                                message.infrastructureType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Membership message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.Membership} message Membership
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Membership.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.state = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.externalId = "";
                                object.authority = null;
                                object.lastConnectionTime = null;
                                object.uniqueId = "";
                                object.infrastructureType = options.enums === String ? "INFRASTRUCTURE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.endpoint != null && message.hasOwnProperty("endpoint")) {
                                object.endpoint = $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint.toObject(message.endpoint, options);
                                if (options.oneofs)
                                    object.type = "endpoint";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1alpha2.MembershipState.toObject(message.state, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            if (message.authority != null && message.hasOwnProperty("authority"))
                                object.authority = $root.google.cloud.gkehub.v1alpha2.Authority.toObject(message.authority, options);
                            if (message.lastConnectionTime != null && message.hasOwnProperty("lastConnectionTime"))
                                object.lastConnectionTime = $root.google.protobuf.Timestamp.toObject(message.lastConnectionTime, options);
                            if (message.uniqueId != null && message.hasOwnProperty("uniqueId"))
                                object.uniqueId = message.uniqueId;
                            if (message.infrastructureType != null && message.hasOwnProperty("infrastructureType"))
                                object.infrastructureType = options.enums === String ? $root.google.cloud.gkehub.v1alpha2.Membership.InfrastructureType[message.infrastructureType] : message.infrastructureType;
                            return object;
                        };
    
                        /**
                         * Converts this Membership to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.Membership
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Membership.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * InfrastructureType enum.
                         * @name google.cloud.gkehub.v1alpha2.Membership.InfrastructureType
                         * @enum {number}
                         * @property {number} INFRASTRUCTURE_TYPE_UNSPECIFIED=0 INFRASTRUCTURE_TYPE_UNSPECIFIED value
                         * @property {number} ON_PREM=1 ON_PREM value
                         * @property {number} MULTI_CLOUD=2 MULTI_CLOUD value
                         */
                        Membership.InfrastructureType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INFRASTRUCTURE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ON_PREM"] = 1;
                            values[valuesById[2] = "MULTI_CLOUD"] = 2;
                            return values;
                        })();
    
                        return Membership;
                    })();
    
                    v1alpha2.MembershipEndpoint = (function() {
    
                        /**
                         * Properties of a MembershipEndpoint.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IMembershipEndpoint
                         * @property {google.cloud.gkehub.v1alpha2.IGkeCluster|null} [gkeCluster] MembershipEndpoint gkeCluster
                         * @property {google.cloud.gkehub.v1alpha2.IOnPremCluster|null} [onPremCluster] MembershipEndpoint onPremCluster
                         * @property {google.cloud.gkehub.v1alpha2.IMultiCloudCluster|null} [multiCloudCluster] MembershipEndpoint multiCloudCluster
                         * @property {google.cloud.gkehub.v1alpha2.IKubernetesMetadata|null} [kubernetesMetadata] MembershipEndpoint kubernetesMetadata
                         * @property {google.cloud.gkehub.v1alpha2.IKubernetesResource|null} [kubernetesResource] MembershipEndpoint kubernetesResource
                         */
    
                        /**
                         * Constructs a new MembershipEndpoint.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a MembershipEndpoint.
                         * @implements IMembershipEndpoint
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipEndpoint=} [properties] Properties to set
                         */
                        function MembershipEndpoint(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipEndpoint gkeCluster.
                         * @member {google.cloud.gkehub.v1alpha2.IGkeCluster|null|undefined} gkeCluster
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.gkeCluster = null;
    
                        /**
                         * MembershipEndpoint onPremCluster.
                         * @member {google.cloud.gkehub.v1alpha2.IOnPremCluster|null|undefined} onPremCluster
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.onPremCluster = null;
    
                        /**
                         * MembershipEndpoint multiCloudCluster.
                         * @member {google.cloud.gkehub.v1alpha2.IMultiCloudCluster|null|undefined} multiCloudCluster
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.multiCloudCluster = null;
    
                        /**
                         * MembershipEndpoint kubernetesMetadata.
                         * @member {google.cloud.gkehub.v1alpha2.IKubernetesMetadata|null|undefined} kubernetesMetadata
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.kubernetesMetadata = null;
    
                        /**
                         * MembershipEndpoint kubernetesResource.
                         * @member {google.cloud.gkehub.v1alpha2.IKubernetesResource|null|undefined} kubernetesResource
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.kubernetesResource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipEndpoint type.
                         * @member {"gkeCluster"|"onPremCluster"|"multiCloudCluster"|undefined} type
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         */
                        Object.defineProperty(MembershipEndpoint.prototype, "type", {
                            get: $util.oneOfGetter($oneOfFields = ["gkeCluster", "onPremCluster", "multiCloudCluster"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipEndpoint instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipEndpoint=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipEndpoint} MembershipEndpoint instance
                         */
                        MembershipEndpoint.create = function create(properties) {
                            return new MembershipEndpoint(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipEndpoint message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.MembershipEndpoint.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipEndpoint} message MembershipEndpoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipEndpoint.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gkeCluster != null && Object.hasOwnProperty.call(message, "gkeCluster"))
                                $root.google.cloud.gkehub.v1alpha2.GkeCluster.encode(message.gkeCluster, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.kubernetesMetadata != null && Object.hasOwnProperty.call(message, "kubernetesMetadata"))
                                $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata.encode(message.kubernetesMetadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.kubernetesResource != null && Object.hasOwnProperty.call(message, "kubernetesResource"))
                                $root.google.cloud.gkehub.v1alpha2.KubernetesResource.encode(message.kubernetesResource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.onPremCluster != null && Object.hasOwnProperty.call(message, "onPremCluster"))
                                $root.google.cloud.gkehub.v1alpha2.OnPremCluster.encode(message.onPremCluster, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.multiCloudCluster != null && Object.hasOwnProperty.call(message, "multiCloudCluster"))
                                $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster.encode(message.multiCloudCluster, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipEndpoint message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.MembershipEndpoint.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipEndpoint} message MembershipEndpoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipEndpoint.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipEndpoint message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipEndpoint} MembershipEndpoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipEndpoint.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.gkeCluster = $root.google.cloud.gkehub.v1alpha2.GkeCluster.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.onPremCluster = $root.google.cloud.gkehub.v1alpha2.OnPremCluster.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.multiCloudCluster = $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.kubernetesMetadata = $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.kubernetesResource = $root.google.cloud.gkehub.v1alpha2.KubernetesResource.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipEndpoint message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipEndpoint} MembershipEndpoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipEndpoint.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipEndpoint message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipEndpoint.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gkeCluster != null && message.hasOwnProperty("gkeCluster")) {
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1alpha2.GkeCluster.verify(message.gkeCluster);
                                    if (error)
                                        return "gkeCluster." + error;
                                }
                            }
                            if (message.onPremCluster != null && message.hasOwnProperty("onPremCluster")) {
                                if (properties.type === 1)
                                    return "type: multiple values";
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1alpha2.OnPremCluster.verify(message.onPremCluster);
                                    if (error)
                                        return "onPremCluster." + error;
                                }
                            }
                            if (message.multiCloudCluster != null && message.hasOwnProperty("multiCloudCluster")) {
                                if (properties.type === 1)
                                    return "type: multiple values";
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster.verify(message.multiCloudCluster);
                                    if (error)
                                        return "multiCloudCluster." + error;
                                }
                            }
                            if (message.kubernetesMetadata != null && message.hasOwnProperty("kubernetesMetadata")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata.verify(message.kubernetesMetadata);
                                if (error)
                                    return "kubernetesMetadata." + error;
                            }
                            if (message.kubernetesResource != null && message.hasOwnProperty("kubernetesResource")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.KubernetesResource.verify(message.kubernetesResource);
                                if (error)
                                    return "kubernetesResource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipEndpoint message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipEndpoint} MembershipEndpoint
                         */
                        MembershipEndpoint.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.MembershipEndpoint();
                            if (object.gkeCluster != null) {
                                if (typeof object.gkeCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.MembershipEndpoint.gkeCluster: object expected");
                                message.gkeCluster = $root.google.cloud.gkehub.v1alpha2.GkeCluster.fromObject(object.gkeCluster);
                            }
                            if (object.onPremCluster != null) {
                                if (typeof object.onPremCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.MembershipEndpoint.onPremCluster: object expected");
                                message.onPremCluster = $root.google.cloud.gkehub.v1alpha2.OnPremCluster.fromObject(object.onPremCluster);
                            }
                            if (object.multiCloudCluster != null) {
                                if (typeof object.multiCloudCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.MembershipEndpoint.multiCloudCluster: object expected");
                                message.multiCloudCluster = $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster.fromObject(object.multiCloudCluster);
                            }
                            if (object.kubernetesMetadata != null) {
                                if (typeof object.kubernetesMetadata !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.MembershipEndpoint.kubernetesMetadata: object expected");
                                message.kubernetesMetadata = $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata.fromObject(object.kubernetesMetadata);
                            }
                            if (object.kubernetesResource != null) {
                                if (typeof object.kubernetesResource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.MembershipEndpoint.kubernetesResource: object expected");
                                message.kubernetesResource = $root.google.cloud.gkehub.v1alpha2.KubernetesResource.fromObject(object.kubernetesResource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipEndpoint message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.MembershipEndpoint} message MembershipEndpoint
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipEndpoint.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kubernetesMetadata = null;
                                object.kubernetesResource = null;
                            }
                            if (message.gkeCluster != null && message.hasOwnProperty("gkeCluster")) {
                                object.gkeCluster = $root.google.cloud.gkehub.v1alpha2.GkeCluster.toObject(message.gkeCluster, options);
                                if (options.oneofs)
                                    object.type = "gkeCluster";
                            }
                            if (message.kubernetesMetadata != null && message.hasOwnProperty("kubernetesMetadata"))
                                object.kubernetesMetadata = $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata.toObject(message.kubernetesMetadata, options);
                            if (message.kubernetesResource != null && message.hasOwnProperty("kubernetesResource"))
                                object.kubernetesResource = $root.google.cloud.gkehub.v1alpha2.KubernetesResource.toObject(message.kubernetesResource, options);
                            if (message.onPremCluster != null && message.hasOwnProperty("onPremCluster")) {
                                object.onPremCluster = $root.google.cloud.gkehub.v1alpha2.OnPremCluster.toObject(message.onPremCluster, options);
                                if (options.oneofs)
                                    object.type = "onPremCluster";
                            }
                            if (message.multiCloudCluster != null && message.hasOwnProperty("multiCloudCluster")) {
                                object.multiCloudCluster = $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster.toObject(message.multiCloudCluster, options);
                                if (options.oneofs)
                                    object.type = "multiCloudCluster";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipEndpoint to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipEndpoint
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipEndpoint.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipEndpoint;
                    })();
    
                    v1alpha2.KubernetesResource = (function() {
    
                        /**
                         * Properties of a KubernetesResource.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IKubernetesResource
                         * @property {string|null} [membershipCrManifest] KubernetesResource membershipCrManifest
                         * @property {Array.<google.cloud.gkehub.v1alpha2.IResourceManifest>|null} [membershipResources] KubernetesResource membershipResources
                         * @property {Array.<google.cloud.gkehub.v1alpha2.IResourceManifest>|null} [connectResources] KubernetesResource connectResources
                         * @property {google.cloud.gkehub.v1alpha2.IResourceOptions|null} [resourceOptions] KubernetesResource resourceOptions
                         */
    
                        /**
                         * Constructs a new KubernetesResource.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a KubernetesResource.
                         * @implements IKubernetesResource
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesResource=} [properties] Properties to set
                         */
                        function KubernetesResource(properties) {
                            this.membershipResources = [];
                            this.connectResources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesResource membershipCrManifest.
                         * @member {string} membershipCrManifest
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.membershipCrManifest = "";
    
                        /**
                         * KubernetesResource membershipResources.
                         * @member {Array.<google.cloud.gkehub.v1alpha2.IResourceManifest>} membershipResources
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.membershipResources = $util.emptyArray;
    
                        /**
                         * KubernetesResource connectResources.
                         * @member {Array.<google.cloud.gkehub.v1alpha2.IResourceManifest>} connectResources
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.connectResources = $util.emptyArray;
    
                        /**
                         * KubernetesResource resourceOptions.
                         * @member {google.cloud.gkehub.v1alpha2.IResourceOptions|null|undefined} resourceOptions
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.resourceOptions = null;
    
                        /**
                         * Creates a new KubernetesResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesResource=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesResource} KubernetesResource instance
                         */
                        KubernetesResource.create = function create(properties) {
                            return new KubernetesResource(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesResource message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.KubernetesResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesResource} message KubernetesResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.membershipCrManifest != null && Object.hasOwnProperty.call(message, "membershipCrManifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.membershipCrManifest);
                            if (message.membershipResources != null && message.membershipResources.length)
                                for (var i = 0; i < message.membershipResources.length; ++i)
                                    $root.google.cloud.gkehub.v1alpha2.ResourceManifest.encode(message.membershipResources[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.connectResources != null && message.connectResources.length)
                                for (var i = 0; i < message.connectResources.length; ++i)
                                    $root.google.cloud.gkehub.v1alpha2.ResourceManifest.encode(message.connectResources[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.resourceOptions != null && Object.hasOwnProperty.call(message, "resourceOptions"))
                                $root.google.cloud.gkehub.v1alpha2.ResourceOptions.encode(message.resourceOptions, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.KubernetesResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesResource} message KubernetesResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesResource} KubernetesResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.KubernetesResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.membershipCrManifest = reader.string();
                                    break;
                                case 3:
                                    if (!(message.membershipResources && message.membershipResources.length))
                                        message.membershipResources = [];
                                    message.membershipResources.push($root.google.cloud.gkehub.v1alpha2.ResourceManifest.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    if (!(message.connectResources && message.connectResources.length))
                                        message.connectResources = [];
                                    message.connectResources.push($root.google.cloud.gkehub.v1alpha2.ResourceManifest.decode(reader, reader.uint32()));
                                    break;
                                case 5:
                                    message.resourceOptions = $root.google.cloud.gkehub.v1alpha2.ResourceOptions.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesResource} KubernetesResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesResource message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.membershipCrManifest != null && message.hasOwnProperty("membershipCrManifest"))
                                if (!$util.isString(message.membershipCrManifest))
                                    return "membershipCrManifest: string expected";
                            if (message.membershipResources != null && message.hasOwnProperty("membershipResources")) {
                                if (!Array.isArray(message.membershipResources))
                                    return "membershipResources: array expected";
                                for (var i = 0; i < message.membershipResources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha2.ResourceManifest.verify(message.membershipResources[i]);
                                    if (error)
                                        return "membershipResources." + error;
                                }
                            }
                            if (message.connectResources != null && message.hasOwnProperty("connectResources")) {
                                if (!Array.isArray(message.connectResources))
                                    return "connectResources: array expected";
                                for (var i = 0; i < message.connectResources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha2.ResourceManifest.verify(message.connectResources[i]);
                                    if (error)
                                        return "connectResources." + error;
                                }
                            }
                            if (message.resourceOptions != null && message.hasOwnProperty("resourceOptions")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.ResourceOptions.verify(message.resourceOptions);
                                if (error)
                                    return "resourceOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesResource} KubernetesResource
                         */
                        KubernetesResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.KubernetesResource)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.KubernetesResource();
                            if (object.membershipCrManifest != null)
                                message.membershipCrManifest = String(object.membershipCrManifest);
                            if (object.membershipResources) {
                                if (!Array.isArray(object.membershipResources))
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.KubernetesResource.membershipResources: array expected");
                                message.membershipResources = [];
                                for (var i = 0; i < object.membershipResources.length; ++i) {
                                    if (typeof object.membershipResources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha2.KubernetesResource.membershipResources: object expected");
                                    message.membershipResources[i] = $root.google.cloud.gkehub.v1alpha2.ResourceManifest.fromObject(object.membershipResources[i]);
                                }
                            }
                            if (object.connectResources) {
                                if (!Array.isArray(object.connectResources))
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.KubernetesResource.connectResources: array expected");
                                message.connectResources = [];
                                for (var i = 0; i < object.connectResources.length; ++i) {
                                    if (typeof object.connectResources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha2.KubernetesResource.connectResources: object expected");
                                    message.connectResources[i] = $root.google.cloud.gkehub.v1alpha2.ResourceManifest.fromObject(object.connectResources[i]);
                                }
                            }
                            if (object.resourceOptions != null) {
                                if (typeof object.resourceOptions !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.KubernetesResource.resourceOptions: object expected");
                                message.resourceOptions = $root.google.cloud.gkehub.v1alpha2.ResourceOptions.fromObject(object.resourceOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.KubernetesResource} message KubernetesResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.membershipResources = [];
                                object.connectResources = [];
                            }
                            if (options.defaults) {
                                object.membershipCrManifest = "";
                                object.resourceOptions = null;
                            }
                            if (message.membershipCrManifest != null && message.hasOwnProperty("membershipCrManifest"))
                                object.membershipCrManifest = message.membershipCrManifest;
                            if (message.membershipResources && message.membershipResources.length) {
                                object.membershipResources = [];
                                for (var j = 0; j < message.membershipResources.length; ++j)
                                    object.membershipResources[j] = $root.google.cloud.gkehub.v1alpha2.ResourceManifest.toObject(message.membershipResources[j], options);
                            }
                            if (message.connectResources && message.connectResources.length) {
                                object.connectResources = [];
                                for (var j = 0; j < message.connectResources.length; ++j)
                                    object.connectResources[j] = $root.google.cloud.gkehub.v1alpha2.ResourceManifest.toObject(message.connectResources[j], options);
                            }
                            if (message.resourceOptions != null && message.hasOwnProperty("resourceOptions"))
                                object.resourceOptions = $root.google.cloud.gkehub.v1alpha2.ResourceOptions.toObject(message.resourceOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return KubernetesResource;
                    })();
    
                    v1alpha2.ResourceOptions = (function() {
    
                        /**
                         * Properties of a ResourceOptions.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IResourceOptions
                         * @property {string|null} [connectVersion] ResourceOptions connectVersion
                         * @property {boolean|null} [v1beta1Crd] ResourceOptions v1beta1Crd
                         * @property {string|null} [k8sVersion] ResourceOptions k8sVersion
                         */
    
                        /**
                         * Constructs a new ResourceOptions.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a ResourceOptions.
                         * @implements IResourceOptions
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IResourceOptions=} [properties] Properties to set
                         */
                        function ResourceOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceOptions connectVersion.
                         * @member {string} connectVersion
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.connectVersion = "";
    
                        /**
                         * ResourceOptions v1beta1Crd.
                         * @member {boolean} v1beta1Crd
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.v1beta1Crd = false;
    
                        /**
                         * ResourceOptions k8sVersion.
                         * @member {string} k8sVersion
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.k8sVersion = "";
    
                        /**
                         * Creates a new ResourceOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IResourceOptions=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceOptions} ResourceOptions instance
                         */
                        ResourceOptions.create = function create(properties) {
                            return new ResourceOptions(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceOptions message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ResourceOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IResourceOptions} message ResourceOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.connectVersion != null && Object.hasOwnProperty.call(message, "connectVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.connectVersion);
                            if (message.v1beta1Crd != null && Object.hasOwnProperty.call(message, "v1beta1Crd"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.v1beta1Crd);
                            if (message.k8sVersion != null && Object.hasOwnProperty.call(message, "k8sVersion"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.k8sVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceOptions message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ResourceOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IResourceOptions} message ResourceOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceOptions} ResourceOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.ResourceOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.connectVersion = reader.string();
                                    break;
                                case 2:
                                    message.v1beta1Crd = reader.bool();
                                    break;
                                case 3:
                                    message.k8sVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceOptions} ResourceOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceOptions message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.connectVersion != null && message.hasOwnProperty("connectVersion"))
                                if (!$util.isString(message.connectVersion))
                                    return "connectVersion: string expected";
                            if (message.v1beta1Crd != null && message.hasOwnProperty("v1beta1Crd"))
                                if (typeof message.v1beta1Crd !== "boolean")
                                    return "v1beta1Crd: boolean expected";
                            if (message.k8sVersion != null && message.hasOwnProperty("k8sVersion"))
                                if (!$util.isString(message.k8sVersion))
                                    return "k8sVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceOptions} ResourceOptions
                         */
                        ResourceOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.ResourceOptions)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.ResourceOptions();
                            if (object.connectVersion != null)
                                message.connectVersion = String(object.connectVersion);
                            if (object.v1beta1Crd != null)
                                message.v1beta1Crd = Boolean(object.v1beta1Crd);
                            if (object.k8sVersion != null)
                                message.k8sVersion = String(object.k8sVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ResourceOptions} message ResourceOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.connectVersion = "";
                                object.v1beta1Crd = false;
                                object.k8sVersion = "";
                            }
                            if (message.connectVersion != null && message.hasOwnProperty("connectVersion"))
                                object.connectVersion = message.connectVersion;
                            if (message.v1beta1Crd != null && message.hasOwnProperty("v1beta1Crd"))
                                object.v1beta1Crd = message.v1beta1Crd;
                            if (message.k8sVersion != null && message.hasOwnProperty("k8sVersion"))
                                object.k8sVersion = message.k8sVersion;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResourceOptions;
                    })();
    
                    v1alpha2.GkeCluster = (function() {
    
                        /**
                         * Properties of a GkeCluster.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IGkeCluster
                         * @property {string|null} [resourceLink] GkeCluster resourceLink
                         * @property {boolean|null} [clusterMissing] GkeCluster clusterMissing
                         */
    
                        /**
                         * Constructs a new GkeCluster.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a GkeCluster.
                         * @implements IGkeCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IGkeCluster=} [properties] Properties to set
                         */
                        function GkeCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.resourceLink = "";
    
                        /**
                         * GkeCluster clusterMissing.
                         * @member {boolean} clusterMissing
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.clusterMissing = false;
    
                        /**
                         * Creates a new GkeCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGkeCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.GkeCluster} GkeCluster instance
                         */
                        GkeCluster.create = function create(properties) {
                            return new GkeCluster(properties);
                        };
    
                        /**
                         * Encodes the specified GkeCluster message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GkeCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            if (message.clusterMissing != null && Object.hasOwnProperty.call(message, "clusterMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GkeCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.GkeCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                case 2:
                                    message.clusterMissing = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                if (typeof message.clusterMissing !== "boolean")
                                    return "clusterMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a GkeCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.GkeCluster} GkeCluster
                         */
                        GkeCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.GkeCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.GkeCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            if (object.clusterMissing != null)
                                message.clusterMissing = Boolean(object.clusterMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.GkeCluster} message GkeCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resourceLink = "";
                                object.clusterMissing = false;
                            }
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                object.clusterMissing = message.clusterMissing;
                            return object;
                        };
    
                        /**
                         * Converts this GkeCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.GkeCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GkeCluster;
                    })();
    
                    v1alpha2.OnPremCluster = (function() {
    
                        /**
                         * Properties of an OnPremCluster.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IOnPremCluster
                         * @property {string|null} [resourceLink] OnPremCluster resourceLink
                         * @property {boolean|null} [clusterMissing] OnPremCluster clusterMissing
                         * @property {boolean|null} [adminCluster] OnPremCluster adminCluster
                         */
    
                        /**
                         * Constructs a new OnPremCluster.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents an OnPremCluster.
                         * @implements IOnPremCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IOnPremCluster=} [properties] Properties to set
                         */
                        function OnPremCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OnPremCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @instance
                         */
                        OnPremCluster.prototype.resourceLink = "";
    
                        /**
                         * OnPremCluster clusterMissing.
                         * @member {boolean} clusterMissing
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @instance
                         */
                        OnPremCluster.prototype.clusterMissing = false;
    
                        /**
                         * OnPremCluster adminCluster.
                         * @member {boolean} adminCluster
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @instance
                         */
                        OnPremCluster.prototype.adminCluster = false;
    
                        /**
                         * Creates a new OnPremCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IOnPremCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.OnPremCluster} OnPremCluster instance
                         */
                        OnPremCluster.create = function create(properties) {
                            return new OnPremCluster(properties);
                        };
    
                        /**
                         * Encodes the specified OnPremCluster message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.OnPremCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IOnPremCluster} message OnPremCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OnPremCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            if (message.clusterMissing != null && Object.hasOwnProperty.call(message, "clusterMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterMissing);
                            if (message.adminCluster != null && Object.hasOwnProperty.call(message, "adminCluster"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.adminCluster);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OnPremCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.OnPremCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IOnPremCluster} message OnPremCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OnPremCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OnPremCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.OnPremCluster} OnPremCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OnPremCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.OnPremCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                case 2:
                                    message.clusterMissing = reader.bool();
                                    break;
                                case 3:
                                    message.adminCluster = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OnPremCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.OnPremCluster} OnPremCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OnPremCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OnPremCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OnPremCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                if (typeof message.clusterMissing !== "boolean")
                                    return "clusterMissing: boolean expected";
                            if (message.adminCluster != null && message.hasOwnProperty("adminCluster"))
                                if (typeof message.adminCluster !== "boolean")
                                    return "adminCluster: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an OnPremCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.OnPremCluster} OnPremCluster
                         */
                        OnPremCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.OnPremCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.OnPremCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            if (object.clusterMissing != null)
                                message.clusterMissing = Boolean(object.clusterMissing);
                            if (object.adminCluster != null)
                                message.adminCluster = Boolean(object.adminCluster);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OnPremCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.OnPremCluster} message OnPremCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OnPremCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resourceLink = "";
                                object.clusterMissing = false;
                                object.adminCluster = false;
                            }
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                object.clusterMissing = message.clusterMissing;
                            if (message.adminCluster != null && message.hasOwnProperty("adminCluster"))
                                object.adminCluster = message.adminCluster;
                            return object;
                        };
    
                        /**
                         * Converts this OnPremCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.OnPremCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OnPremCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OnPremCluster;
                    })();
    
                    v1alpha2.MultiCloudCluster = (function() {
    
                        /**
                         * Properties of a MultiCloudCluster.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IMultiCloudCluster
                         * @property {string|null} [resourceLink] MultiCloudCluster resourceLink
                         * @property {boolean|null} [clusterMissing] MultiCloudCluster clusterMissing
                         */
    
                        /**
                         * Constructs a new MultiCloudCluster.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a MultiCloudCluster.
                         * @implements IMultiCloudCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IMultiCloudCluster=} [properties] Properties to set
                         */
                        function MultiCloudCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MultiCloudCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @instance
                         */
                        MultiCloudCluster.prototype.resourceLink = "";
    
                        /**
                         * MultiCloudCluster clusterMissing.
                         * @member {boolean} clusterMissing
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @instance
                         */
                        MultiCloudCluster.prototype.clusterMissing = false;
    
                        /**
                         * Creates a new MultiCloudCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMultiCloudCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.MultiCloudCluster} MultiCloudCluster instance
                         */
                        MultiCloudCluster.create = function create(properties) {
                            return new MultiCloudCluster(properties);
                        };
    
                        /**
                         * Encodes the specified MultiCloudCluster message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.MultiCloudCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMultiCloudCluster} message MultiCloudCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MultiCloudCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            if (message.clusterMissing != null && Object.hasOwnProperty.call(message, "clusterMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MultiCloudCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.MultiCloudCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMultiCloudCluster} message MultiCloudCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MultiCloudCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MultiCloudCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.MultiCloudCluster} MultiCloudCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MultiCloudCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                case 2:
                                    message.clusterMissing = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MultiCloudCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.MultiCloudCluster} MultiCloudCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MultiCloudCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MultiCloudCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MultiCloudCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                if (typeof message.clusterMissing !== "boolean")
                                    return "clusterMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a MultiCloudCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.MultiCloudCluster} MultiCloudCluster
                         */
                        MultiCloudCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.MultiCloudCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            if (object.clusterMissing != null)
                                message.clusterMissing = Boolean(object.clusterMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MultiCloudCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.MultiCloudCluster} message MultiCloudCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MultiCloudCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resourceLink = "";
                                object.clusterMissing = false;
                            }
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                object.clusterMissing = message.clusterMissing;
                            return object;
                        };
    
                        /**
                         * Converts this MultiCloudCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.MultiCloudCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MultiCloudCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MultiCloudCluster;
                    })();
    
                    v1alpha2.KubernetesMetadata = (function() {
    
                        /**
                         * Properties of a KubernetesMetadata.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IKubernetesMetadata
                         * @property {string|null} [kubernetesApiServerVersion] KubernetesMetadata kubernetesApiServerVersion
                         * @property {string|null} [nodeProviderId] KubernetesMetadata nodeProviderId
                         * @property {number|null} [nodeCount] KubernetesMetadata nodeCount
                         * @property {number|null} [vcpuCount] KubernetesMetadata vcpuCount
                         * @property {number|null} [memoryMb] KubernetesMetadata memoryMb
                         * @property {google.protobuf.ITimestamp|null} [updateTime] KubernetesMetadata updateTime
                         */
    
                        /**
                         * Constructs a new KubernetesMetadata.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a KubernetesMetadata.
                         * @implements IKubernetesMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesMetadata=} [properties] Properties to set
                         */
                        function KubernetesMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesMetadata kubernetesApiServerVersion.
                         * @member {string} kubernetesApiServerVersion
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.kubernetesApiServerVersion = "";
    
                        /**
                         * KubernetesMetadata nodeProviderId.
                         * @member {string} nodeProviderId
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.nodeProviderId = "";
    
                        /**
                         * KubernetesMetadata nodeCount.
                         * @member {number} nodeCount
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.nodeCount = 0;
    
                        /**
                         * KubernetesMetadata vcpuCount.
                         * @member {number} vcpuCount
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.vcpuCount = 0;
    
                        /**
                         * KubernetesMetadata memoryMb.
                         * @member {number} memoryMb
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.memoryMb = 0;
    
                        /**
                         * KubernetesMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new KubernetesMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesMetadata} KubernetesMetadata instance
                         */
                        KubernetesMetadata.create = function create(properties) {
                            return new KubernetesMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesMetadata message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.KubernetesMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesMetadata} message KubernetesMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kubernetesApiServerVersion != null && Object.hasOwnProperty.call(message, "kubernetesApiServerVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kubernetesApiServerVersion);
                            if (message.nodeProviderId != null && Object.hasOwnProperty.call(message, "nodeProviderId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nodeProviderId);
                            if (message.nodeCount != null && Object.hasOwnProperty.call(message, "nodeCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nodeCount);
                            if (message.vcpuCount != null && Object.hasOwnProperty.call(message, "vcpuCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.vcpuCount);
                            if (message.memoryMb != null && Object.hasOwnProperty.call(message, "memoryMb"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.memoryMb);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.KubernetesMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IKubernetesMetadata} message KubernetesMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesMetadata} KubernetesMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kubernetesApiServerVersion = reader.string();
                                    break;
                                case 2:
                                    message.nodeProviderId = reader.string();
                                    break;
                                case 3:
                                    message.nodeCount = reader.int32();
                                    break;
                                case 4:
                                    message.vcpuCount = reader.int32();
                                    break;
                                case 5:
                                    message.memoryMb = reader.int32();
                                    break;
                                case 100:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesMetadata} KubernetesMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kubernetesApiServerVersion != null && message.hasOwnProperty("kubernetesApiServerVersion"))
                                if (!$util.isString(message.kubernetesApiServerVersion))
                                    return "kubernetesApiServerVersion: string expected";
                            if (message.nodeProviderId != null && message.hasOwnProperty("nodeProviderId"))
                                if (!$util.isString(message.nodeProviderId))
                                    return "nodeProviderId: string expected";
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                if (!$util.isInteger(message.nodeCount))
                                    return "nodeCount: integer expected";
                            if (message.vcpuCount != null && message.hasOwnProperty("vcpuCount"))
                                if (!$util.isInteger(message.vcpuCount))
                                    return "vcpuCount: integer expected";
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                if (!$util.isInteger(message.memoryMb))
                                    return "memoryMb: integer expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.KubernetesMetadata} KubernetesMetadata
                         */
                        KubernetesMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.KubernetesMetadata();
                            if (object.kubernetesApiServerVersion != null)
                                message.kubernetesApiServerVersion = String(object.kubernetesApiServerVersion);
                            if (object.nodeProviderId != null)
                                message.nodeProviderId = String(object.nodeProviderId);
                            if (object.nodeCount != null)
                                message.nodeCount = object.nodeCount | 0;
                            if (object.vcpuCount != null)
                                message.vcpuCount = object.vcpuCount | 0;
                            if (object.memoryMb != null)
                                message.memoryMb = object.memoryMb | 0;
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.KubernetesMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.KubernetesMetadata} message KubernetesMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kubernetesApiServerVersion = "";
                                object.nodeProviderId = "";
                                object.nodeCount = 0;
                                object.vcpuCount = 0;
                                object.memoryMb = 0;
                                object.updateTime = null;
                            }
                            if (message.kubernetesApiServerVersion != null && message.hasOwnProperty("kubernetesApiServerVersion"))
                                object.kubernetesApiServerVersion = message.kubernetesApiServerVersion;
                            if (message.nodeProviderId != null && message.hasOwnProperty("nodeProviderId"))
                                object.nodeProviderId = message.nodeProviderId;
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                object.nodeCount = message.nodeCount;
                            if (message.vcpuCount != null && message.hasOwnProperty("vcpuCount"))
                                object.vcpuCount = message.vcpuCount;
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                object.memoryMb = message.memoryMb;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.KubernetesMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return KubernetesMetadata;
                    })();
    
                    v1alpha2.Authority = (function() {
    
                        /**
                         * Properties of an Authority.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IAuthority
                         * @property {string|null} [issuer] Authority issuer
                         * @property {Uint8Array|null} [oidcJwks] Authority oidcJwks
                         * @property {string|null} [identityProvider] Authority identityProvider
                         * @property {string|null} [workloadIdentityPool] Authority workloadIdentityPool
                         */
    
                        /**
                         * Constructs a new Authority.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents an Authority.
                         * @implements IAuthority
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IAuthority=} [properties] Properties to set
                         */
                        function Authority(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Authority issuer.
                         * @member {string} issuer
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @instance
                         */
                        Authority.prototype.issuer = "";
    
                        /**
                         * Authority oidcJwks.
                         * @member {Uint8Array} oidcJwks
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @instance
                         */
                        Authority.prototype.oidcJwks = $util.newBuffer([]);
    
                        /**
                         * Authority identityProvider.
                         * @member {string} identityProvider
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @instance
                         */
                        Authority.prototype.identityProvider = "";
    
                        /**
                         * Authority workloadIdentityPool.
                         * @member {string} workloadIdentityPool
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @instance
                         */
                        Authority.prototype.workloadIdentityPool = "";
    
                        /**
                         * Creates a new Authority instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IAuthority=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.Authority} Authority instance
                         */
                        Authority.create = function create(properties) {
                            return new Authority(properties);
                        };
    
                        /**
                         * Encodes the specified Authority message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.Authority.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IAuthority} message Authority message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Authority.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.issuer != null && Object.hasOwnProperty.call(message, "issuer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.issuer);
                            if (message.identityProvider != null && Object.hasOwnProperty.call(message, "identityProvider"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.identityProvider);
                            if (message.workloadIdentityPool != null && Object.hasOwnProperty.call(message, "workloadIdentityPool"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.workloadIdentityPool);
                            if (message.oidcJwks != null && Object.hasOwnProperty.call(message, "oidcJwks"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.oidcJwks);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Authority message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.Authority.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IAuthority} message Authority message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Authority.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Authority message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.Authority} Authority
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Authority.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.Authority();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.issuer = reader.string();
                                    break;
                                case 5:
                                    message.oidcJwks = reader.bytes();
                                    break;
                                case 3:
                                    message.identityProvider = reader.string();
                                    break;
                                case 4:
                                    message.workloadIdentityPool = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Authority message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.Authority} Authority
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Authority.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Authority message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Authority.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.issuer != null && message.hasOwnProperty("issuer"))
                                if (!$util.isString(message.issuer))
                                    return "issuer: string expected";
                            if (message.oidcJwks != null && message.hasOwnProperty("oidcJwks"))
                                if (!(message.oidcJwks && typeof message.oidcJwks.length === "number" || $util.isString(message.oidcJwks)))
                                    return "oidcJwks: buffer expected";
                            if (message.identityProvider != null && message.hasOwnProperty("identityProvider"))
                                if (!$util.isString(message.identityProvider))
                                    return "identityProvider: string expected";
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                if (!$util.isString(message.workloadIdentityPool))
                                    return "workloadIdentityPool: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an Authority message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.Authority} Authority
                         */
                        Authority.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.Authority)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.Authority();
                            if (object.issuer != null)
                                message.issuer = String(object.issuer);
                            if (object.oidcJwks != null)
                                if (typeof object.oidcJwks === "string")
                                    $util.base64.decode(object.oidcJwks, message.oidcJwks = $util.newBuffer($util.base64.length(object.oidcJwks)), 0);
                                else if (object.oidcJwks.length)
                                    message.oidcJwks = object.oidcJwks;
                            if (object.identityProvider != null)
                                message.identityProvider = String(object.identityProvider);
                            if (object.workloadIdentityPool != null)
                                message.workloadIdentityPool = String(object.workloadIdentityPool);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Authority message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.Authority} message Authority
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Authority.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.issuer = "";
                                object.identityProvider = "";
                                object.workloadIdentityPool = "";
                                if (options.bytes === String)
                                    object.oidcJwks = "";
                                else {
                                    object.oidcJwks = [];
                                    if (options.bytes !== Array)
                                        object.oidcJwks = $util.newBuffer(object.oidcJwks);
                                }
                            }
                            if (message.issuer != null && message.hasOwnProperty("issuer"))
                                object.issuer = message.issuer;
                            if (message.identityProvider != null && message.hasOwnProperty("identityProvider"))
                                object.identityProvider = message.identityProvider;
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                object.workloadIdentityPool = message.workloadIdentityPool;
                            if (message.oidcJwks != null && message.hasOwnProperty("oidcJwks"))
                                object.oidcJwks = options.bytes === String ? $util.base64.encode(message.oidcJwks, 0, message.oidcJwks.length) : options.bytes === Array ? Array.prototype.slice.call(message.oidcJwks) : message.oidcJwks;
                            return object;
                        };
    
                        /**
                         * Converts this Authority to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.Authority
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Authority.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Authority;
                    })();
    
                    v1alpha2.MembershipState = (function() {
    
                        /**
                         * Properties of a MembershipState.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IMembershipState
                         * @property {google.cloud.gkehub.v1alpha2.MembershipState.Code|null} [code] MembershipState code
                         */
    
                        /**
                         * Constructs a new MembershipState.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a MembershipState.
                         * @implements IMembershipState
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipState=} [properties] Properties to set
                         */
                        function MembershipState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipState code.
                         * @member {google.cloud.gkehub.v1alpha2.MembershipState.Code} code
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @instance
                         */
                        MembershipState.prototype.code = 0;
    
                        /**
                         * Creates a new MembershipState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipState} MembershipState instance
                         */
                        MembershipState.create = function create(properties) {
                            return new MembershipState(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.MembershipState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipState} message MembershipState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.MembershipState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IMembershipState} message MembershipState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipState} MembershipState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.MembershipState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipState} MembershipState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.MembershipState} MembershipState
                         */
                        MembershipState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.MembershipState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.MembershipState();
                            switch (object.code) {
                            case "CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.code = 1;
                                break;
                            case "READY":
                            case 2:
                                message.code = 2;
                                break;
                            case "DELETING":
                            case 3:
                                message.code = 3;
                                break;
                            case "UPDATING":
                            case 4:
                                message.code = 4;
                                break;
                            case "SERVICE_UPDATING":
                            case 5:
                                message.code = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.MembershipState} message MembershipState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.code = options.enums === String ? "CODE_UNSPECIFIED" : 0;
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.gkehub.v1alpha2.MembershipState.Code[message.code] : message.code;
                            return object;
                        };
    
                        /**
                         * Converts this MembershipState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.MembershipState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Code enum.
                         * @name google.cloud.gkehub.v1alpha2.MembershipState.Code
                         * @enum {number}
                         * @property {number} CODE_UNSPECIFIED=0 CODE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} READY=2 READY value
                         * @property {number} DELETING=3 DELETING value
                         * @property {number} UPDATING=4 UPDATING value
                         * @property {number} SERVICE_UPDATING=5 SERVICE_UPDATING value
                         */
                        MembershipState.Code = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "READY"] = 2;
                            values[valuesById[3] = "DELETING"] = 3;
                            values[valuesById[4] = "UPDATING"] = 4;
                            values[valuesById[5] = "SERVICE_UPDATING"] = 5;
                            return values;
                        })();
    
                        return MembershipState;
                    })();
    
                    v1alpha2.ListMembershipsRequest = (function() {
    
                        /**
                         * Properties of a ListMembershipsRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IListMembershipsRequest
                         * @property {string|null} [parent] ListMembershipsRequest parent
                         * @property {number|null} [pageSize] ListMembershipsRequest pageSize
                         * @property {string|null} [pageToken] ListMembershipsRequest pageToken
                         * @property {string|null} [filter] ListMembershipsRequest filter
                         * @property {string|null} [orderBy] ListMembershipsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListMembershipsRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a ListMembershipsRequest.
                         * @implements IListMembershipsRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsRequest=} [properties] Properties to set
                         */
                        function ListMembershipsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMembershipsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.parent = "";
    
                        /**
                         * ListMembershipsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMembershipsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.pageToken = "";
    
                        /**
                         * ListMembershipsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.filter = "";
    
                        /**
                         * ListMembershipsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListMembershipsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsRequest} ListMembershipsRequest instance
                         */
                        ListMembershipsRequest.create = function create(properties) {
                            return new ListMembershipsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMembershipsRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ListMembershipsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsRequest} message ListMembershipsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMembershipsRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ListMembershipsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsRequest} message ListMembershipsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMembershipsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsRequest} ListMembershipsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.ListMembershipsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.filter = reader.string();
                                    break;
                                case 5:
                                    message.orderBy = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMembershipsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsRequest} ListMembershipsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMembershipsRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMembershipsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMembershipsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsRequest} ListMembershipsRequest
                         */
                        ListMembershipsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.ListMembershipsRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.ListMembershipsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMembershipsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ListMembershipsRequest} message ListMembershipsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMembershipsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListMembershipsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMembershipsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListMembershipsRequest;
                    })();
    
                    v1alpha2.ListMembershipsResponse = (function() {
    
                        /**
                         * Properties of a ListMembershipsResponse.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IListMembershipsResponse
                         * @property {Array.<google.cloud.gkehub.v1alpha2.IMembership>|null} [resources] ListMembershipsResponse resources
                         * @property {string|null} [nextPageToken] ListMembershipsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListMembershipsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListMembershipsResponse.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a ListMembershipsResponse.
                         * @implements IListMembershipsResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsResponse=} [properties] Properties to set
                         */
                        function ListMembershipsResponse(properties) {
                            this.resources = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMembershipsResponse resources.
                         * @member {Array.<google.cloud.gkehub.v1alpha2.IMembership>} resources
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.resources = $util.emptyArray;
    
                        /**
                         * ListMembershipsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListMembershipsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListMembershipsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsResponse} ListMembershipsResponse instance
                         */
                        ListMembershipsResponse.create = function create(properties) {
                            return new ListMembershipsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMembershipsResponse message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ListMembershipsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsResponse} message ListMembershipsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resources != null && message.resources.length)
                                for (var i = 0; i < message.resources.length; ++i)
                                    $root.google.cloud.gkehub.v1alpha2.Membership.encode(message.resources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMembershipsResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ListMembershipsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IListMembershipsResponse} message ListMembershipsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMembershipsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsResponse} ListMembershipsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.ListMembershipsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.resources && message.resources.length))
                                        message.resources = [];
                                    message.resources.push($root.google.cloud.gkehub.v1alpha2.Membership.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    if (!(message.unreachable && message.unreachable.length))
                                        message.unreachable = [];
                                    message.unreachable.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMembershipsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsResponse} ListMembershipsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMembershipsResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMembershipsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                if (!Array.isArray(message.resources))
                                    return "resources: array expected";
                                for (var i = 0; i < message.resources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha2.Membership.verify(message.resources[i]);
                                    if (error)
                                        return "resources." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListMembershipsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.ListMembershipsResponse} ListMembershipsResponse
                         */
                        ListMembershipsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.ListMembershipsResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.ListMembershipsResponse();
                            if (object.resources) {
                                if (!Array.isArray(object.resources))
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.ListMembershipsResponse.resources: array expected");
                                message.resources = [];
                                for (var i = 0; i < object.resources.length; ++i) {
                                    if (typeof object.resources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha2.ListMembershipsResponse.resources: object expected");
                                    message.resources[i] = $root.google.cloud.gkehub.v1alpha2.Membership.fromObject(object.resources[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.ListMembershipsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMembershipsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ListMembershipsResponse} message ListMembershipsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMembershipsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.resources = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.resources && message.resources.length) {
                                object.resources = [];
                                for (var j = 0; j < message.resources.length; ++j)
                                    object.resources[j] = $root.google.cloud.gkehub.v1alpha2.Membership.toObject(message.resources[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListMembershipsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.ListMembershipsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMembershipsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListMembershipsResponse;
                    })();
    
                    v1alpha2.GetMembershipRequest = (function() {
    
                        /**
                         * Properties of a GetMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IGetMembershipRequest
                         * @property {string|null} [name] GetMembershipRequest name
                         */
    
                        /**
                         * Constructs a new GetMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a GetMembershipRequest.
                         * @implements IGetMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IGetMembershipRequest=} [properties] Properties to set
                         */
                        function GetMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @instance
                         */
                        GetMembershipRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGetMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.GetMembershipRequest} GetMembershipRequest instance
                         */
                        GetMembershipRequest.create = function create(properties) {
                            return new GetMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GetMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGetMembershipRequest} message GetMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GetMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGetMembershipRequest} message GetMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.GetMembershipRequest} GetMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.GetMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.GetMembershipRequest} GetMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.GetMembershipRequest} GetMembershipRequest
                         */
                        GetMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.GetMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.GetMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.GetMembershipRequest} message GetMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.GetMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetMembershipRequest;
                    })();
    
                    v1alpha2.CreateMembershipRequest = (function() {
    
                        /**
                         * Properties of a CreateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface ICreateMembershipRequest
                         * @property {string|null} [parent] CreateMembershipRequest parent
                         * @property {string|null} [membershipId] CreateMembershipRequest membershipId
                         * @property {google.cloud.gkehub.v1alpha2.IMembership|null} [resource] CreateMembershipRequest resource
                         */
    
                        /**
                         * Constructs a new CreateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a CreateMembershipRequest.
                         * @implements ICreateMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.ICreateMembershipRequest=} [properties] Properties to set
                         */
                        function CreateMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateMembershipRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.parent = "";
    
                        /**
                         * CreateMembershipRequest membershipId.
                         * @member {string} membershipId
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.membershipId = "";
    
                        /**
                         * CreateMembershipRequest resource.
                         * @member {google.cloud.gkehub.v1alpha2.IMembership|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.resource = null;
    
                        /**
                         * Creates a new CreateMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ICreateMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.CreateMembershipRequest} CreateMembershipRequest instance
                         */
                        CreateMembershipRequest.create = function create(properties) {
                            return new CreateMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.CreateMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ICreateMembershipRequest} message CreateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.membershipId != null && Object.hasOwnProperty.call(message, "membershipId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.membershipId);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1alpha2.Membership.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.CreateMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ICreateMembershipRequest} message CreateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.CreateMembershipRequest} CreateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.CreateMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.membershipId = reader.string();
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1alpha2.Membership.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.CreateMembershipRequest} CreateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.membershipId != null && message.hasOwnProperty("membershipId"))
                                if (!$util.isString(message.membershipId))
                                    return "membershipId: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.Membership.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CreateMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.CreateMembershipRequest} CreateMembershipRequest
                         */
                        CreateMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.CreateMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.CreateMembershipRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.membershipId != null)
                                message.membershipId = String(object.membershipId);
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.CreateMembershipRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1alpha2.Membership.fromObject(object.resource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.CreateMembershipRequest} message CreateMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.membershipId = "";
                                object.resource = null;
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.membershipId != null && message.hasOwnProperty("membershipId"))
                                object.membershipId = message.membershipId;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1alpha2.Membership.toObject(message.resource, options);
                            return object;
                        };
    
                        /**
                         * Converts this CreateMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.CreateMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateMembershipRequest;
                    })();
    
                    v1alpha2.DeleteMembershipRequest = (function() {
    
                        /**
                         * Properties of a DeleteMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IDeleteMembershipRequest
                         * @property {string|null} [name] DeleteMembershipRequest name
                         */
    
                        /**
                         * Constructs a new DeleteMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a DeleteMembershipRequest.
                         * @implements IDeleteMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IDeleteMembershipRequest=} [properties] Properties to set
                         */
                        function DeleteMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @instance
                         */
                        DeleteMembershipRequest.prototype.name = "";
    
                        /**
                         * Creates a new DeleteMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IDeleteMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.DeleteMembershipRequest} DeleteMembershipRequest instance
                         */
                        DeleteMembershipRequest.create = function create(properties) {
                            return new DeleteMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.DeleteMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IDeleteMembershipRequest} message DeleteMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.DeleteMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IDeleteMembershipRequest} message DeleteMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.DeleteMembershipRequest} DeleteMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.DeleteMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.DeleteMembershipRequest} DeleteMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.DeleteMembershipRequest} DeleteMembershipRequest
                         */
                        DeleteMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.DeleteMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.DeleteMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.DeleteMembershipRequest} message DeleteMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.DeleteMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteMembershipRequest;
                    })();
    
                    v1alpha2.UpdateMembershipRequest = (function() {
    
                        /**
                         * Properties of an UpdateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IUpdateMembershipRequest
                         * @property {string|null} [name] UpdateMembershipRequest name
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateMembershipRequest updateMask
                         * @property {google.cloud.gkehub.v1alpha2.IMembership|null} [resource] UpdateMembershipRequest resource
                         */
    
                        /**
                         * Constructs a new UpdateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents an UpdateMembershipRequest.
                         * @implements IUpdateMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IUpdateMembershipRequest=} [properties] Properties to set
                         */
                        function UpdateMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.name = "";
    
                        /**
                         * UpdateMembershipRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateMembershipRequest resource.
                         * @member {google.cloud.gkehub.v1alpha2.IMembership|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.resource = null;
    
                        /**
                         * Creates a new UpdateMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IUpdateMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.UpdateMembershipRequest} UpdateMembershipRequest instance
                         */
                        UpdateMembershipRequest.create = function create(properties) {
                            return new UpdateMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.UpdateMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IUpdateMembershipRequest} message UpdateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1alpha2.Membership.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.UpdateMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IUpdateMembershipRequest} message UpdateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.UpdateMembershipRequest} UpdateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.UpdateMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1alpha2.Membership.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.UpdateMembershipRequest} UpdateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.Membership.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates an UpdateMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.UpdateMembershipRequest} UpdateMembershipRequest
                         */
                        UpdateMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.UpdateMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.UpdateMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.UpdateMembershipRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.UpdateMembershipRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1alpha2.Membership.fromObject(object.resource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.UpdateMembershipRequest} message UpdateMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateMask = null;
                                object.resource = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1alpha2.Membership.toObject(message.resource, options);
                            return object;
                        };
    
                        /**
                         * Converts this UpdateMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.UpdateMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateMembershipRequest;
                    })();
    
                    v1alpha2.GenerateConnectManifestRequest = (function() {
    
                        /**
                         * Properties of a GenerateConnectManifestRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IGenerateConnectManifestRequest
                         * @property {string|null} [name] GenerateConnectManifestRequest name
                         * @property {string|null} [namespace] GenerateConnectManifestRequest namespace
                         * @property {Uint8Array|null} [proxy] GenerateConnectManifestRequest proxy
                         * @property {string|null} [version] GenerateConnectManifestRequest version
                         * @property {boolean|null} [isUpgrade] GenerateConnectManifestRequest isUpgrade
                         * @property {string|null} [registry] GenerateConnectManifestRequest registry
                         * @property {Uint8Array|null} [imagePullSecretContent] GenerateConnectManifestRequest imagePullSecretContent
                         */
    
                        /**
                         * Constructs a new GenerateConnectManifestRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a GenerateConnectManifestRequest.
                         * @implements IGenerateConnectManifestRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestRequest=} [properties] Properties to set
                         */
                        function GenerateConnectManifestRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateConnectManifestRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.name = "";
    
                        /**
                         * GenerateConnectManifestRequest namespace.
                         * @member {string} namespace
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.namespace = "";
    
                        /**
                         * GenerateConnectManifestRequest proxy.
                         * @member {Uint8Array} proxy
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.proxy = $util.newBuffer([]);
    
                        /**
                         * GenerateConnectManifestRequest version.
                         * @member {string} version
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.version = "";
    
                        /**
                         * GenerateConnectManifestRequest isUpgrade.
                         * @member {boolean} isUpgrade
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.isUpgrade = false;
    
                        /**
                         * GenerateConnectManifestRequest registry.
                         * @member {string} registry
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.registry = "";
    
                        /**
                         * GenerateConnectManifestRequest imagePullSecretContent.
                         * @member {Uint8Array} imagePullSecretContent
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.imagePullSecretContent = $util.newBuffer([]);
    
                        /**
                         * Creates a new GenerateConnectManifestRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest} GenerateConnectManifestRequest instance
                         */
                        GenerateConnectManifestRequest.create = function create(properties) {
                            return new GenerateConnectManifestRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestRequest} message GenerateConnectManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.namespace != null && Object.hasOwnProperty.call(message, "namespace"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.namespace);
                            if (message.proxy != null && Object.hasOwnProperty.call(message, "proxy"))
                                writer.uint32(/* id 3, wireType 2 =*/26).bytes(message.proxy);
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.version);
                            if (message.isUpgrade != null && Object.hasOwnProperty.call(message, "isUpgrade"))
                                writer.uint32(/* id 5, wireType 0 =*/40).bool(message.isUpgrade);
                            if (message.registry != null && Object.hasOwnProperty.call(message, "registry"))
                                writer.uint32(/* id 6, wireType 2 =*/50).string(message.registry);
                            if (message.imagePullSecretContent != null && Object.hasOwnProperty.call(message, "imagePullSecretContent"))
                                writer.uint32(/* id 7, wireType 2 =*/58).bytes(message.imagePullSecretContent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestRequest} message GenerateConnectManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.namespace = reader.string();
                                    break;
                                case 3:
                                    message.proxy = reader.bytes();
                                    break;
                                case 4:
                                    message.version = reader.string();
                                    break;
                                case 5:
                                    message.isUpgrade = reader.bool();
                                    break;
                                case 6:
                                    message.registry = reader.string();
                                    break;
                                case 7:
                                    message.imagePullSecretContent = reader.bytes();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateConnectManifestRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateConnectManifestRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.namespace != null && message.hasOwnProperty("namespace"))
                                if (!$util.isString(message.namespace))
                                    return "namespace: string expected";
                            if (message.proxy != null && message.hasOwnProperty("proxy"))
                                if (!(message.proxy && typeof message.proxy.length === "number" || $util.isString(message.proxy)))
                                    return "proxy: buffer expected";
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.isUpgrade != null && message.hasOwnProperty("isUpgrade"))
                                if (typeof message.isUpgrade !== "boolean")
                                    return "isUpgrade: boolean expected";
                            if (message.registry != null && message.hasOwnProperty("registry"))
                                if (!$util.isString(message.registry))
                                    return "registry: string expected";
                            if (message.imagePullSecretContent != null && message.hasOwnProperty("imagePullSecretContent"))
                                if (!(message.imagePullSecretContent && typeof message.imagePullSecretContent.length === "number" || $util.isString(message.imagePullSecretContent)))
                                    return "imagePullSecretContent: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateConnectManifestRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         */
                        GenerateConnectManifestRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.namespace != null)
                                message.namespace = String(object.namespace);
                            if (object.proxy != null)
                                if (typeof object.proxy === "string")
                                    $util.base64.decode(object.proxy, message.proxy = $util.newBuffer($util.base64.length(object.proxy)), 0);
                                else if (object.proxy.length)
                                    message.proxy = object.proxy;
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.isUpgrade != null)
                                message.isUpgrade = Boolean(object.isUpgrade);
                            if (object.registry != null)
                                message.registry = String(object.registry);
                            if (object.imagePullSecretContent != null)
                                if (typeof object.imagePullSecretContent === "string")
                                    $util.base64.decode(object.imagePullSecretContent, message.imagePullSecretContent = $util.newBuffer($util.base64.length(object.imagePullSecretContent)), 0);
                                else if (object.imagePullSecretContent.length)
                                    message.imagePullSecretContent = object.imagePullSecretContent;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateConnectManifestRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest} message GenerateConnectManifestRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateConnectManifestRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.namespace = "";
                                if (options.bytes === String)
                                    object.proxy = "";
                                else {
                                    object.proxy = [];
                                    if (options.bytes !== Array)
                                        object.proxy = $util.newBuffer(object.proxy);
                                }
                                object.version = "";
                                object.isUpgrade = false;
                                object.registry = "";
                                if (options.bytes === String)
                                    object.imagePullSecretContent = "";
                                else {
                                    object.imagePullSecretContent = [];
                                    if (options.bytes !== Array)
                                        object.imagePullSecretContent = $util.newBuffer(object.imagePullSecretContent);
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.namespace != null && message.hasOwnProperty("namespace"))
                                object.namespace = message.namespace;
                            if (message.proxy != null && message.hasOwnProperty("proxy"))
                                object.proxy = options.bytes === String ? $util.base64.encode(message.proxy, 0, message.proxy.length) : options.bytes === Array ? Array.prototype.slice.call(message.proxy) : message.proxy;
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.isUpgrade != null && message.hasOwnProperty("isUpgrade"))
                                object.isUpgrade = message.isUpgrade;
                            if (message.registry != null && message.hasOwnProperty("registry"))
                                object.registry = message.registry;
                            if (message.imagePullSecretContent != null && message.hasOwnProperty("imagePullSecretContent"))
                                object.imagePullSecretContent = options.bytes === String ? $util.base64.encode(message.imagePullSecretContent, 0, message.imagePullSecretContent.length) : options.bytes === Array ? Array.prototype.slice.call(message.imagePullSecretContent) : message.imagePullSecretContent;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateConnectManifestRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateConnectManifestRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateConnectManifestRequest;
                    })();
    
                    v1alpha2.GenerateConnectManifestResponse = (function() {
    
                        /**
                         * Properties of a GenerateConnectManifestResponse.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IGenerateConnectManifestResponse
                         * @property {Array.<google.cloud.gkehub.v1alpha2.IConnectAgentResource>|null} [manifest] GenerateConnectManifestResponse manifest
                         */
    
                        /**
                         * Constructs a new GenerateConnectManifestResponse.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a GenerateConnectManifestResponse.
                         * @implements IGenerateConnectManifestResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestResponse=} [properties] Properties to set
                         */
                        function GenerateConnectManifestResponse(properties) {
                            this.manifest = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateConnectManifestResponse manifest.
                         * @member {Array.<google.cloud.gkehub.v1alpha2.IConnectAgentResource>} manifest
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @instance
                         */
                        GenerateConnectManifestResponse.prototype.manifest = $util.emptyArray;
    
                        /**
                         * Creates a new GenerateConnectManifestResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse} GenerateConnectManifestResponse instance
                         */
                        GenerateConnectManifestResponse.create = function create(properties) {
                            return new GenerateConnectManifestResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestResponse message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestResponse} message GenerateConnectManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.manifest != null && message.manifest.length)
                                for (var i = 0; i < message.manifest.length; ++i)
                                    $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource.encode(message.manifest[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IGenerateConnectManifestResponse} message GenerateConnectManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.manifest && message.manifest.length))
                                        message.manifest = [];
                                    message.manifest.push($root.google.cloud.gkehub.v1alpha2.ConnectAgentResource.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateConnectManifestResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateConnectManifestResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.manifest != null && message.hasOwnProperty("manifest")) {
                                if (!Array.isArray(message.manifest))
                                    return "manifest: array expected";
                                for (var i = 0; i < message.manifest.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource.verify(message.manifest[i]);
                                    if (error)
                                        return "manifest." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateConnectManifestResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         */
                        GenerateConnectManifestResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse();
                            if (object.manifest) {
                                if (!Array.isArray(object.manifest))
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse.manifest: array expected");
                                message.manifest = [];
                                for (var i = 0; i < object.manifest.length; ++i) {
                                    if (typeof object.manifest[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse.manifest: object expected");
                                    message.manifest[i] = $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource.fromObject(object.manifest[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateConnectManifestResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse} message GenerateConnectManifestResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateConnectManifestResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.manifest = [];
                            if (message.manifest && message.manifest.length) {
                                object.manifest = [];
                                for (var j = 0; j < message.manifest.length; ++j)
                                    object.manifest[j] = $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource.toObject(message.manifest[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerateConnectManifestResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.GenerateConnectManifestResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateConnectManifestResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateConnectManifestResponse;
                    })();
    
                    v1alpha2.ConnectAgentResource = (function() {
    
                        /**
                         * Properties of a ConnectAgentResource.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IConnectAgentResource
                         * @property {google.cloud.gkehub.v1alpha2.ITypeMeta|null} [type] ConnectAgentResource type
                         * @property {string|null} [manifest] ConnectAgentResource manifest
                         */
    
                        /**
                         * Constructs a new ConnectAgentResource.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a ConnectAgentResource.
                         * @implements IConnectAgentResource
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IConnectAgentResource=} [properties] Properties to set
                         */
                        function ConnectAgentResource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConnectAgentResource type.
                         * @member {google.cloud.gkehub.v1alpha2.ITypeMeta|null|undefined} type
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @instance
                         */
                        ConnectAgentResource.prototype.type = null;
    
                        /**
                         * ConnectAgentResource manifest.
                         * @member {string} manifest
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @instance
                         */
                        ConnectAgentResource.prototype.manifest = "";
    
                        /**
                         * Creates a new ConnectAgentResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IConnectAgentResource=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.ConnectAgentResource} ConnectAgentResource instance
                         */
                        ConnectAgentResource.create = function create(properties) {
                            return new ConnectAgentResource(properties);
                        };
    
                        /**
                         * Encodes the specified ConnectAgentResource message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ConnectAgentResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IConnectAgentResource} message ConnectAgentResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgentResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                $root.google.cloud.gkehub.v1alpha2.TypeMeta.encode(message.type, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.manifest != null && Object.hasOwnProperty.call(message, "manifest"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.manifest);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConnectAgentResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ConnectAgentResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IConnectAgentResource} message ConnectAgentResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgentResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConnectAgentResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.ConnectAgentResource} ConnectAgentResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgentResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = $root.google.cloud.gkehub.v1alpha2.TypeMeta.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.manifest = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConnectAgentResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.ConnectAgentResource} ConnectAgentResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgentResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConnectAgentResource message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConnectAgentResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type")) {
                                var error = $root.google.cloud.gkehub.v1alpha2.TypeMeta.verify(message.type);
                                if (error)
                                    return "type." + error;
                            }
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                if (!$util.isString(message.manifest))
                                    return "manifest: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConnectAgentResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.ConnectAgentResource} ConnectAgentResource
                         */
                        ConnectAgentResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.ConnectAgentResource();
                            if (object.type != null) {
                                if (typeof object.type !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.ConnectAgentResource.type: object expected");
                                message.type = $root.google.cloud.gkehub.v1alpha2.TypeMeta.fromObject(object.type);
                            }
                            if (object.manifest != null)
                                message.manifest = String(object.manifest);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConnectAgentResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ConnectAgentResource} message ConnectAgentResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConnectAgentResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = null;
                                object.manifest = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = $root.google.cloud.gkehub.v1alpha2.TypeMeta.toObject(message.type, options);
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                object.manifest = message.manifest;
                            return object;
                        };
    
                        /**
                         * Converts this ConnectAgentResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.ConnectAgentResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConnectAgentResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ConnectAgentResource;
                    })();
    
                    v1alpha2.ResourceManifest = (function() {
    
                        /**
                         * Properties of a ResourceManifest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IResourceManifest
                         * @property {string|null} [manifest] ResourceManifest manifest
                         * @property {boolean|null} [clusterScoped] ResourceManifest clusterScoped
                         */
    
                        /**
                         * Constructs a new ResourceManifest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a ResourceManifest.
                         * @implements IResourceManifest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IResourceManifest=} [properties] Properties to set
                         */
                        function ResourceManifest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceManifest manifest.
                         * @member {string} manifest
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @instance
                         */
                        ResourceManifest.prototype.manifest = "";
    
                        /**
                         * ResourceManifest clusterScoped.
                         * @member {boolean} clusterScoped
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @instance
                         */
                        ResourceManifest.prototype.clusterScoped = false;
    
                        /**
                         * Creates a new ResourceManifest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IResourceManifest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceManifest} ResourceManifest instance
                         */
                        ResourceManifest.create = function create(properties) {
                            return new ResourceManifest(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceManifest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ResourceManifest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IResourceManifest} message ResourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceManifest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.manifest != null && Object.hasOwnProperty.call(message, "manifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.manifest);
                            if (message.clusterScoped != null && Object.hasOwnProperty.call(message, "clusterScoped"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterScoped);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceManifest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.ResourceManifest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IResourceManifest} message ResourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceManifest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceManifest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceManifest} ResourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceManifest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.ResourceManifest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.manifest = reader.string();
                                    break;
                                case 2:
                                    message.clusterScoped = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceManifest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceManifest} ResourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceManifest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceManifest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceManifest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                if (!$util.isString(message.manifest))
                                    return "manifest: string expected";
                            if (message.clusterScoped != null && message.hasOwnProperty("clusterScoped"))
                                if (typeof message.clusterScoped !== "boolean")
                                    return "clusterScoped: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceManifest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.ResourceManifest} ResourceManifest
                         */
                        ResourceManifest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.ResourceManifest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.ResourceManifest();
                            if (object.manifest != null)
                                message.manifest = String(object.manifest);
                            if (object.clusterScoped != null)
                                message.clusterScoped = Boolean(object.clusterScoped);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceManifest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ResourceManifest} message ResourceManifest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceManifest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.manifest = "";
                                object.clusterScoped = false;
                            }
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                object.manifest = message.manifest;
                            if (message.clusterScoped != null && message.hasOwnProperty("clusterScoped"))
                                object.clusterScoped = message.clusterScoped;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceManifest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.ResourceManifest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceManifest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResourceManifest;
                    })();
    
                    v1alpha2.TypeMeta = (function() {
    
                        /**
                         * Properties of a TypeMeta.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface ITypeMeta
                         * @property {string|null} [kind] TypeMeta kind
                         * @property {string|null} [apiVersion] TypeMeta apiVersion
                         */
    
                        /**
                         * Constructs a new TypeMeta.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents a TypeMeta.
                         * @implements ITypeMeta
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.ITypeMeta=} [properties] Properties to set
                         */
                        function TypeMeta(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TypeMeta kind.
                         * @member {string} kind
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @instance
                         */
                        TypeMeta.prototype.kind = "";
    
                        /**
                         * TypeMeta apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @instance
                         */
                        TypeMeta.prototype.apiVersion = "";
    
                        /**
                         * Creates a new TypeMeta instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ITypeMeta=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.TypeMeta} TypeMeta instance
                         */
                        TypeMeta.create = function create(properties) {
                            return new TypeMeta(properties);
                        };
    
                        /**
                         * Encodes the specified TypeMeta message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.TypeMeta.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ITypeMeta} message TypeMeta message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TypeMeta.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TypeMeta message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.TypeMeta.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.ITypeMeta} message TypeMeta message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TypeMeta.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TypeMeta message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.TypeMeta} TypeMeta
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TypeMeta.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.TypeMeta();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TypeMeta message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.TypeMeta} TypeMeta
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TypeMeta.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TypeMeta message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TypeMeta.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TypeMeta message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.TypeMeta} TypeMeta
                         */
                        TypeMeta.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.TypeMeta)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.TypeMeta();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TypeMeta message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.TypeMeta} message TypeMeta
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TypeMeta.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.apiVersion = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this TypeMeta to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.TypeMeta
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TypeMeta.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return TypeMeta;
                    })();
    
                    v1alpha2.InitializeHubRequest = (function() {
    
                        /**
                         * Properties of an InitializeHubRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IInitializeHubRequest
                         * @property {string|null} [project] InitializeHubRequest project
                         */
    
                        /**
                         * Constructs a new InitializeHubRequest.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents an InitializeHubRequest.
                         * @implements IInitializeHubRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubRequest=} [properties] Properties to set
                         */
                        function InitializeHubRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InitializeHubRequest project.
                         * @member {string} project
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @instance
                         */
                        InitializeHubRequest.prototype.project = "";
    
                        /**
                         * Creates a new InitializeHubRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubRequest} InitializeHubRequest instance
                         */
                        InitializeHubRequest.create = function create(properties) {
                            return new InitializeHubRequest(properties);
                        };
    
                        /**
                         * Encodes the specified InitializeHubRequest message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.InitializeHubRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubRequest} message InitializeHubRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InitializeHubRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.project != null && Object.hasOwnProperty.call(message, "project"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.project);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InitializeHubRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.InitializeHubRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubRequest} message InitializeHubRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InitializeHubRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InitializeHubRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubRequest} InitializeHubRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InitializeHubRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.InitializeHubRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.project = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InitializeHubRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubRequest} InitializeHubRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InitializeHubRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InitializeHubRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InitializeHubRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.project != null && message.hasOwnProperty("project"))
                                if (!$util.isString(message.project))
                                    return "project: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InitializeHubRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubRequest} InitializeHubRequest
                         */
                        InitializeHubRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.InitializeHubRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.InitializeHubRequest();
                            if (object.project != null)
                                message.project = String(object.project);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InitializeHubRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.InitializeHubRequest} message InitializeHubRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InitializeHubRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.project = "";
                            if (message.project != null && message.hasOwnProperty("project"))
                                object.project = message.project;
                            return object;
                        };
    
                        /**
                         * Converts this InitializeHubRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InitializeHubRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InitializeHubRequest;
                    })();
    
                    v1alpha2.InitializeHubResponse = (function() {
    
                        /**
                         * Properties of an InitializeHubResponse.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IInitializeHubResponse
                         * @property {string|null} [serviceIdentity] InitializeHubResponse serviceIdentity
                         * @property {string|null} [workloadIdentityPool] InitializeHubResponse workloadIdentityPool
                         */
    
                        /**
                         * Constructs a new InitializeHubResponse.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents an InitializeHubResponse.
                         * @implements IInitializeHubResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubResponse=} [properties] Properties to set
                         */
                        function InitializeHubResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * InitializeHubResponse serviceIdentity.
                         * @member {string} serviceIdentity
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @instance
                         */
                        InitializeHubResponse.prototype.serviceIdentity = "";
    
                        /**
                         * InitializeHubResponse workloadIdentityPool.
                         * @member {string} workloadIdentityPool
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @instance
                         */
                        InitializeHubResponse.prototype.workloadIdentityPool = "";
    
                        /**
                         * Creates a new InitializeHubResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubResponse} InitializeHubResponse instance
                         */
                        InitializeHubResponse.create = function create(properties) {
                            return new InitializeHubResponse(properties);
                        };
    
                        /**
                         * Encodes the specified InitializeHubResponse message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.InitializeHubResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubResponse} message InitializeHubResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InitializeHubResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.serviceIdentity != null && Object.hasOwnProperty.call(message, "serviceIdentity"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.serviceIdentity);
                            if (message.workloadIdentityPool != null && Object.hasOwnProperty.call(message, "workloadIdentityPool"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.workloadIdentityPool);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified InitializeHubResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.InitializeHubResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IInitializeHubResponse} message InitializeHubResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InitializeHubResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an InitializeHubResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubResponse} InitializeHubResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InitializeHubResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.InitializeHubResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.serviceIdentity = reader.string();
                                    break;
                                case 2:
                                    message.workloadIdentityPool = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an InitializeHubResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubResponse} InitializeHubResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InitializeHubResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an InitializeHubResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InitializeHubResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.serviceIdentity != null && message.hasOwnProperty("serviceIdentity"))
                                if (!$util.isString(message.serviceIdentity))
                                    return "serviceIdentity: string expected";
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                if (!$util.isString(message.workloadIdentityPool))
                                    return "workloadIdentityPool: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an InitializeHubResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.InitializeHubResponse} InitializeHubResponse
                         */
                        InitializeHubResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.InitializeHubResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.InitializeHubResponse();
                            if (object.serviceIdentity != null)
                                message.serviceIdentity = String(object.serviceIdentity);
                            if (object.workloadIdentityPool != null)
                                message.workloadIdentityPool = String(object.workloadIdentityPool);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an InitializeHubResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.InitializeHubResponse} message InitializeHubResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InitializeHubResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.serviceIdentity = "";
                                object.workloadIdentityPool = "";
                            }
                            if (message.serviceIdentity != null && message.hasOwnProperty("serviceIdentity"))
                                object.serviceIdentity = message.serviceIdentity;
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                object.workloadIdentityPool = message.workloadIdentityPool;
                            return object;
                        };
    
                        /**
                         * Converts this InitializeHubResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.InitializeHubResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InitializeHubResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return InitializeHubResponse;
                    })();
    
                    v1alpha2.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.gkehub.v1alpha2
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1alpha2.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1alpha2.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.gkehub.v1alpha2.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1alpha2.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1alpha2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1alpha2.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.target = reader.string();
                                    break;
                                case 4:
                                    message.verb = reader.string();
                                    break;
                                case 5:
                                    message.statusDetail = reader.string();
                                    break;
                                case 6:
                                    message.cancelRequested = reader.bool();
                                    break;
                                case 7:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1alpha2.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1alpha2.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1alpha2.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1alpha2.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1alpha2.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1alpha2.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1alpha2.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationMetadata;
                    })();
    
                    return v1alpha2;
                })();
    
                gkehub.v1beta = (function() {
    
                    /**
                     * Namespace v1beta.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var v1beta = {};
    
                    v1beta.Feature = (function() {
    
                        /**
                         * Properties of a Feature.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IFeature
                         * @property {string|null} [name] Feature name
                         * @property {Object.<string,string>|null} [labels] Feature labels
                         * @property {google.cloud.gkehub.v1beta.IFeatureResourceState|null} [resourceState] Feature resourceState
                         * @property {google.cloud.gkehub.v1beta.ICommonFeatureSpec|null} [spec] Feature spec
                         * @property {Object.<string,google.cloud.gkehub.v1beta.IMembershipFeatureSpec>|null} [membershipSpecs] Feature membershipSpecs
                         * @property {google.cloud.gkehub.v1beta.ICommonFeatureState|null} [state] Feature state
                         * @property {Object.<string,google.cloud.gkehub.v1beta.IMembershipFeatureState>|null} [membershipStates] Feature membershipStates
                         * @property {google.protobuf.ITimestamp|null} [createTime] Feature createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Feature updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Feature deleteTime
                         */
    
                        /**
                         * Constructs a new Feature.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a Feature.
                         * @implements IFeature
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IFeature=} [properties] Properties to set
                         */
                        function Feature(properties) {
                            this.labels = {};
                            this.membershipSpecs = {};
                            this.membershipStates = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Feature name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.name = "";
    
                        /**
                         * Feature labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.labels = $util.emptyObject;
    
                        /**
                         * Feature resourceState.
                         * @member {google.cloud.gkehub.v1beta.IFeatureResourceState|null|undefined} resourceState
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.resourceState = null;
    
                        /**
                         * Feature spec.
                         * @member {google.cloud.gkehub.v1beta.ICommonFeatureSpec|null|undefined} spec
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.spec = null;
    
                        /**
                         * Feature membershipSpecs.
                         * @member {Object.<string,google.cloud.gkehub.v1beta.IMembershipFeatureSpec>} membershipSpecs
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.membershipSpecs = $util.emptyObject;
    
                        /**
                         * Feature state.
                         * @member {google.cloud.gkehub.v1beta.ICommonFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.state = null;
    
                        /**
                         * Feature membershipStates.
                         * @member {Object.<string,google.cloud.gkehub.v1beta.IMembershipFeatureState>} membershipStates
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.membershipStates = $util.emptyObject;
    
                        /**
                         * Feature createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.createTime = null;
    
                        /**
                         * Feature updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.updateTime = null;
    
                        /**
                         * Feature deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         */
                        Feature.prototype.deleteTime = null;
    
                        /**
                         * Creates a new Feature instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeature=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.Feature} Feature instance
                         */
                        Feature.create = function create(properties) {
                            return new Feature(properties);
                        };
    
                        /**
                         * Encodes the specified Feature message. Does not implicitly {@link google.cloud.gkehub.v1beta.Feature.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeature} message Feature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Feature.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.resourceState != null && Object.hasOwnProperty.call(message, "resourceState"))
                                $root.google.cloud.gkehub.v1beta.FeatureResourceState.encode(message.resourceState, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.spec != null && Object.hasOwnProperty.call(message, "spec"))
                                $root.google.cloud.gkehub.v1beta.CommonFeatureSpec.encode(message.spec, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.membershipSpecs != null && Object.hasOwnProperty.call(message, "membershipSpecs"))
                                for (var keys = Object.keys(message.membershipSpecs), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 5, wireType 2 =*/42).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec.encode(message.membershipSpecs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1beta.CommonFeatureState.encode(message.state, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.membershipStates != null && Object.hasOwnProperty.call(message, "membershipStates"))
                                for (var keys = Object.keys(message.membershipStates), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 7, wireType 2 =*/58).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.google.cloud.gkehub.v1beta.MembershipFeatureState.encode(message.membershipStates[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Feature message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.Feature.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeature} message Feature message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Feature.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Feature message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.Feature} Feature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Feature.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.Feature(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                case 3:
                                    message.resourceState = $root.google.cloud.gkehub.v1beta.FeatureResourceState.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.spec = $root.google.cloud.gkehub.v1beta.CommonFeatureSpec.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    if (message.membershipSpecs === $util.emptyObject)
                                        message.membershipSpecs = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.membershipSpecs[key] = value;
                                    break;
                                case 6:
                                    message.state = $root.google.cloud.gkehub.v1beta.CommonFeatureState.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    if (message.membershipStates === $util.emptyObject)
                                        message.membershipStates = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = null;
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = $root.google.cloud.gkehub.v1beta.MembershipFeatureState.decode(reader, reader.uint32());
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.membershipStates[key] = value;
                                    break;
                                case 8:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Feature message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.Feature} Feature
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Feature.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Feature message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Feature.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.resourceState != null && message.hasOwnProperty("resourceState")) {
                                var error = $root.google.cloud.gkehub.v1beta.FeatureResourceState.verify(message.resourceState);
                                if (error)
                                    return "resourceState." + error;
                            }
                            if (message.spec != null && message.hasOwnProperty("spec")) {
                                var error = $root.google.cloud.gkehub.v1beta.CommonFeatureSpec.verify(message.spec);
                                if (error)
                                    return "spec." + error;
                            }
                            if (message.membershipSpecs != null && message.hasOwnProperty("membershipSpecs")) {
                                if (!$util.isObject(message.membershipSpecs))
                                    return "membershipSpecs: object expected";
                                var key = Object.keys(message.membershipSpecs);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec.verify(message.membershipSpecs[key[i]]);
                                    if (error)
                                        return "membershipSpecs." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1beta.CommonFeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            if (message.membershipStates != null && message.hasOwnProperty("membershipStates")) {
                                if (!$util.isObject(message.membershipStates))
                                    return "membershipStates: object expected";
                                var key = Object.keys(message.membershipStates);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta.MembershipFeatureState.verify(message.membershipStates[key[i]]);
                                    if (error)
                                        return "membershipStates." + error;
                                }
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a Feature message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.Feature} Feature
                         */
                        Feature.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.Feature)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.Feature();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.resourceState != null) {
                                if (typeof object.resourceState !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.resourceState: object expected");
                                message.resourceState = $root.google.cloud.gkehub.v1beta.FeatureResourceState.fromObject(object.resourceState);
                            }
                            if (object.spec != null) {
                                if (typeof object.spec !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.spec: object expected");
                                message.spec = $root.google.cloud.gkehub.v1beta.CommonFeatureSpec.fromObject(object.spec);
                            }
                            if (object.membershipSpecs) {
                                if (typeof object.membershipSpecs !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.membershipSpecs: object expected");
                                message.membershipSpecs = {};
                                for (var keys = Object.keys(object.membershipSpecs), i = 0; i < keys.length; ++i) {
                                    if (typeof object.membershipSpecs[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta.Feature.membershipSpecs: object expected");
                                    message.membershipSpecs[keys[i]] = $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec.fromObject(object.membershipSpecs[keys[i]]);
                                }
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1beta.CommonFeatureState.fromObject(object.state);
                            }
                            if (object.membershipStates) {
                                if (typeof object.membershipStates !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.membershipStates: object expected");
                                message.membershipStates = {};
                                for (var keys = Object.keys(object.membershipStates), i = 0; i < keys.length; ++i) {
                                    if (typeof object.membershipStates[keys[i]] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta.Feature.membershipStates: object expected");
                                    message.membershipStates[keys[i]] = $root.google.cloud.gkehub.v1beta.MembershipFeatureState.fromObject(object.membershipStates[keys[i]]);
                                }
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.Feature.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Feature message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @static
                         * @param {google.cloud.gkehub.v1beta.Feature} message Feature
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Feature.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.labels = {};
                                object.membershipSpecs = {};
                                object.membershipStates = {};
                            }
                            if (options.defaults) {
                                object.name = "";
                                object.resourceState = null;
                                object.spec = null;
                                object.state = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.resourceState != null && message.hasOwnProperty("resourceState"))
                                object.resourceState = $root.google.cloud.gkehub.v1beta.FeatureResourceState.toObject(message.resourceState, options);
                            if (message.spec != null && message.hasOwnProperty("spec"))
                                object.spec = $root.google.cloud.gkehub.v1beta.CommonFeatureSpec.toObject(message.spec, options);
                            if (message.membershipSpecs && (keys2 = Object.keys(message.membershipSpecs)).length) {
                                object.membershipSpecs = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.membershipSpecs[keys2[j]] = $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec.toObject(message.membershipSpecs[keys2[j]], options);
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1beta.CommonFeatureState.toObject(message.state, options);
                            if (message.membershipStates && (keys2 = Object.keys(message.membershipStates)).length) {
                                object.membershipStates = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.membershipStates[keys2[j]] = $root.google.cloud.gkehub.v1beta.MembershipFeatureState.toObject(message.membershipStates[keys2[j]], options);
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this Feature to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.Feature
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Feature.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Feature;
                    })();
    
                    v1beta.FeatureResourceState = (function() {
    
                        /**
                         * Properties of a FeatureResourceState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IFeatureResourceState
                         * @property {google.cloud.gkehub.v1beta.FeatureResourceState.State|null} [state] FeatureResourceState state
                         */
    
                        /**
                         * Constructs a new FeatureResourceState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a FeatureResourceState.
                         * @implements IFeatureResourceState
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IFeatureResourceState=} [properties] Properties to set
                         */
                        function FeatureResourceState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FeatureResourceState state.
                         * @member {google.cloud.gkehub.v1beta.FeatureResourceState.State} state
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @instance
                         */
                        FeatureResourceState.prototype.state = 0;
    
                        /**
                         * Creates a new FeatureResourceState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeatureResourceState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.FeatureResourceState} FeatureResourceState instance
                         */
                        FeatureResourceState.create = function create(properties) {
                            return new FeatureResourceState(properties);
                        };
    
                        /**
                         * Encodes the specified FeatureResourceState message. Does not implicitly {@link google.cloud.gkehub.v1beta.FeatureResourceState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeatureResourceState} message FeatureResourceState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureResourceState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.state);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FeatureResourceState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.FeatureResourceState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeatureResourceState} message FeatureResourceState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureResourceState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FeatureResourceState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.FeatureResourceState} FeatureResourceState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureResourceState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.FeatureResourceState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.state = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FeatureResourceState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.FeatureResourceState} FeatureResourceState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureResourceState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FeatureResourceState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FeatureResourceState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state"))
                                switch (message.state) {
                                default:
                                    return "state: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a FeatureResourceState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.FeatureResourceState} FeatureResourceState
                         */
                        FeatureResourceState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.FeatureResourceState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.FeatureResourceState();
                            switch (object.state) {
                            case "STATE_UNSPECIFIED":
                            case 0:
                                message.state = 0;
                                break;
                            case "ENABLING":
                            case 1:
                                message.state = 1;
                                break;
                            case "ACTIVE":
                            case 2:
                                message.state = 2;
                                break;
                            case "DISABLING":
                            case 3:
                                message.state = 3;
                                break;
                            case "UPDATING":
                            case 4:
                                message.state = 4;
                                break;
                            case "SERVICE_UPDATING":
                            case 5:
                                message.state = 5;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FeatureResourceState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.FeatureResourceState} message FeatureResourceState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FeatureResourceState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = options.enums === String ? "STATE_UNSPECIFIED" : 0;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = options.enums === String ? $root.google.cloud.gkehub.v1beta.FeatureResourceState.State[message.state] : message.state;
                            return object;
                        };
    
                        /**
                         * Converts this FeatureResourceState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.FeatureResourceState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FeatureResourceState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * State enum.
                         * @name google.cloud.gkehub.v1beta.FeatureResourceState.State
                         * @enum {number}
                         * @property {number} STATE_UNSPECIFIED=0 STATE_UNSPECIFIED value
                         * @property {number} ENABLING=1 ENABLING value
                         * @property {number} ACTIVE=2 ACTIVE value
                         * @property {number} DISABLING=3 DISABLING value
                         * @property {number} UPDATING=4 UPDATING value
                         * @property {number} SERVICE_UPDATING=5 SERVICE_UPDATING value
                         */
                        FeatureResourceState.State = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "STATE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ENABLING"] = 1;
                            values[valuesById[2] = "ACTIVE"] = 2;
                            values[valuesById[3] = "DISABLING"] = 3;
                            values[valuesById[4] = "UPDATING"] = 4;
                            values[valuesById[5] = "SERVICE_UPDATING"] = 5;
                            return values;
                        })();
    
                        return FeatureResourceState;
                    })();
    
                    v1beta.FeatureState = (function() {
    
                        /**
                         * Properties of a FeatureState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IFeatureState
                         * @property {google.cloud.gkehub.v1beta.FeatureState.Code|null} [code] FeatureState code
                         * @property {string|null} [description] FeatureState description
                         * @property {google.protobuf.ITimestamp|null} [updateTime] FeatureState updateTime
                         */
    
                        /**
                         * Constructs a new FeatureState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a FeatureState.
                         * @implements IFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IFeatureState=} [properties] Properties to set
                         */
                        function FeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * FeatureState code.
                         * @member {google.cloud.gkehub.v1beta.FeatureState.Code} code
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.code = 0;
    
                        /**
                         * FeatureState description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.description = "";
    
                        /**
                         * FeatureState updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @instance
                         */
                        FeatureState.prototype.updateTime = null;
    
                        /**
                         * Creates a new FeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.FeatureState} FeatureState instance
                         */
                        FeatureState.create = function create(properties) {
                            return new FeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified FeatureState message. Does not implicitly {@link google.cloud.gkehub.v1beta.FeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeatureState} message FeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified FeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.FeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IFeatureState} message FeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a FeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.FeatureState} FeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.FeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                case 2:
                                    message.description = reader.string();
                                    break;
                                case 3:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a FeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.FeatureState} FeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a FeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a FeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.FeatureState} FeatureState
                         */
                        FeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.FeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.FeatureState();
                            switch (object.code) {
                            case "CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "OK":
                            case 1:
                                message.code = 1;
                                break;
                            case "WARNING":
                            case 2:
                                message.code = 2;
                                break;
                            case "ERROR":
                            case 3:
                                message.code = 3;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.FeatureState.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a FeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.FeatureState} message FeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.code = options.enums === String ? "CODE_UNSPECIFIED" : 0;
                                object.description = "";
                                object.updateTime = null;
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.gkehub.v1beta.FeatureState.Code[message.code] : message.code;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this FeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.FeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Code enum.
                         * @name google.cloud.gkehub.v1beta.FeatureState.Code
                         * @enum {number}
                         * @property {number} CODE_UNSPECIFIED=0 CODE_UNSPECIFIED value
                         * @property {number} OK=1 OK value
                         * @property {number} WARNING=2 WARNING value
                         * @property {number} ERROR=3 ERROR value
                         */
                        FeatureState.Code = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "OK"] = 1;
                            values[valuesById[2] = "WARNING"] = 2;
                            values[valuesById[3] = "ERROR"] = 3;
                            return values;
                        })();
    
                        return FeatureState;
                    })();
    
                    v1beta.CommonFeatureSpec = (function() {
    
                        /**
                         * Properties of a CommonFeatureSpec.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface ICommonFeatureSpec
                         * @property {google.cloud.gkehub.multiclusteringress.v1beta.IFeatureSpec|null} [multiclusteringress] CommonFeatureSpec multiclusteringress
                         */
    
                        /**
                         * Constructs a new CommonFeatureSpec.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a CommonFeatureSpec.
                         * @implements ICommonFeatureSpec
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureSpec=} [properties] Properties to set
                         */
                        function CommonFeatureSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonFeatureSpec multiclusteringress.
                         * @member {google.cloud.gkehub.multiclusteringress.v1beta.IFeatureSpec|null|undefined} multiclusteringress
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @instance
                         */
                        CommonFeatureSpec.prototype.multiclusteringress = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * CommonFeatureSpec featureSpec.
                         * @member {"multiclusteringress"|undefined} featureSpec
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @instance
                         */
                        Object.defineProperty(CommonFeatureSpec.prototype, "featureSpec", {
                            get: $util.oneOfGetter($oneOfFields = ["multiclusteringress"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new CommonFeatureSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureSpec=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureSpec} CommonFeatureSpec instance
                         */
                        CommonFeatureSpec.create = function create(properties) {
                            return new CommonFeatureSpec(properties);
                        };
    
                        /**
                         * Encodes the specified CommonFeatureSpec message. Does not implicitly {@link google.cloud.gkehub.v1beta.CommonFeatureSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureSpec} message CommonFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.multiclusteringress != null && Object.hasOwnProperty.call(message, "multiclusteringress"))
                                $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.encode(message.multiclusteringress, writer.uint32(/* id 102, wireType 2 =*/818).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonFeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.CommonFeatureSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureSpec} message CommonFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonFeatureSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureSpec} CommonFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.CommonFeatureSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 102:
                                    message.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonFeatureSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureSpec} CommonFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonFeatureSpec message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonFeatureSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.multiclusteringress != null && message.hasOwnProperty("multiclusteringress")) {
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.verify(message.multiclusteringress);
                                    if (error)
                                        return "multiclusteringress." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonFeatureSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureSpec} CommonFeatureSpec
                         */
                        CommonFeatureSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.CommonFeatureSpec)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.CommonFeatureSpec();
                            if (object.multiclusteringress != null) {
                                if (typeof object.multiclusteringress !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.CommonFeatureSpec.multiclusteringress: object expected");
                                message.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.fromObject(object.multiclusteringress);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonFeatureSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.CommonFeatureSpec} message CommonFeatureSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonFeatureSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.multiclusteringress != null && message.hasOwnProperty("multiclusteringress")) {
                                object.multiclusteringress = $root.google.cloud.gkehub.multiclusteringress.v1beta.FeatureSpec.toObject(message.multiclusteringress, options);
                                if (options.oneofs)
                                    object.featureSpec = "multiclusteringress";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this CommonFeatureSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonFeatureSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CommonFeatureSpec;
                    })();
    
                    v1beta.CommonFeatureState = (function() {
    
                        /**
                         * Properties of a CommonFeatureState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface ICommonFeatureState
                         * @property {google.cloud.gkehub.v1beta.IFeatureState|null} [state] CommonFeatureState state
                         */
    
                        /**
                         * Constructs a new CommonFeatureState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a CommonFeatureState.
                         * @implements ICommonFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureState=} [properties] Properties to set
                         */
                        function CommonFeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CommonFeatureState state.
                         * @member {google.cloud.gkehub.v1beta.IFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @instance
                         */
                        CommonFeatureState.prototype.state = null;
    
                        /**
                         * Creates a new CommonFeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureState} CommonFeatureState instance
                         */
                        CommonFeatureState.create = function create(properties) {
                            return new CommonFeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified CommonFeatureState message. Does not implicitly {@link google.cloud.gkehub.v1beta.CommonFeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureState} message CommonFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1beta.FeatureState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CommonFeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.CommonFeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICommonFeatureState} message CommonFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommonFeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CommonFeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureState} CommonFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.CommonFeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.state = $root.google.cloud.gkehub.v1beta.FeatureState.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CommonFeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureState} CommonFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommonFeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CommonFeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommonFeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1beta.FeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a CommonFeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.CommonFeatureState} CommonFeatureState
                         */
                        CommonFeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.CommonFeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.CommonFeatureState();
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.CommonFeatureState.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1beta.FeatureState.fromObject(object.state);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CommonFeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.CommonFeatureState} message CommonFeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommonFeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = null;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1beta.FeatureState.toObject(message.state, options);
                            return object;
                        };
    
                        /**
                         * Converts this CommonFeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.CommonFeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommonFeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CommonFeatureState;
                    })();
    
                    v1beta.MembershipFeatureSpec = (function() {
    
                        /**
                         * Properties of a MembershipFeatureSpec.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IMembershipFeatureSpec
                         * @property {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec|null} [configmanagement] MembershipFeatureSpec configmanagement
                         */
    
                        /**
                         * Constructs a new MembershipFeatureSpec.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a MembershipFeatureSpec.
                         * @implements IMembershipFeatureSpec
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureSpec=} [properties] Properties to set
                         */
                        function MembershipFeatureSpec(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipFeatureSpec configmanagement.
                         * @member {google.cloud.gkehub.configmanagement.v1beta.IMembershipSpec|null|undefined} configmanagement
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @instance
                         */
                        MembershipFeatureSpec.prototype.configmanagement = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipFeatureSpec featureSpec.
                         * @member {"configmanagement"|undefined} featureSpec
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @instance
                         */
                        Object.defineProperty(MembershipFeatureSpec.prototype, "featureSpec", {
                            get: $util.oneOfGetter($oneOfFields = ["configmanagement"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipFeatureSpec instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureSpec=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureSpec} MembershipFeatureSpec instance
                         */
                        MembershipFeatureSpec.create = function create(properties) {
                            return new MembershipFeatureSpec(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureSpec message. Does not implicitly {@link google.cloud.gkehub.v1beta.MembershipFeatureSpec.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureSpec} message MembershipFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureSpec.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.configmanagement != null && Object.hasOwnProperty.call(message, "configmanagement"))
                                $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.encode(message.configmanagement, writer.uint32(/* id 106, wireType 2 =*/850).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureSpec message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.MembershipFeatureSpec.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureSpec} message MembershipFeatureSpec message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureSpec.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipFeatureSpec message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureSpec} MembershipFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureSpec.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 106:
                                    message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipFeatureSpec message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureSpec} MembershipFeatureSpec
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureSpec.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipFeatureSpec message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipFeatureSpec.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                properties.featureSpec = 1;
                                {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.verify(message.configmanagement);
                                    if (error)
                                        return "configmanagement." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipFeatureSpec message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureSpec} MembershipFeatureSpec
                         */
                        MembershipFeatureSpec.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.MembershipFeatureSpec();
                            if (object.configmanagement != null) {
                                if (typeof object.configmanagement !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.MembershipFeatureSpec.configmanagement: object expected");
                                message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.fromObject(object.configmanagement);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipFeatureSpec message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @static
                         * @param {google.cloud.gkehub.v1beta.MembershipFeatureSpec} message MembershipFeatureSpec
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipFeatureSpec.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                object.configmanagement = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipSpec.toObject(message.configmanagement, options);
                                if (options.oneofs)
                                    object.featureSpec = "configmanagement";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipFeatureSpec to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureSpec
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipFeatureSpec.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipFeatureSpec;
                    })();
    
                    v1beta.MembershipFeatureState = (function() {
    
                        /**
                         * Properties of a MembershipFeatureState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IMembershipFeatureState
                         * @property {google.cloud.gkehub.metering.v1beta.IMembershipState|null} [metering] MembershipFeatureState metering
                         * @property {google.cloud.gkehub.configmanagement.v1beta.IMembershipState|null} [configmanagement] MembershipFeatureState configmanagement
                         * @property {google.cloud.gkehub.v1beta.IFeatureState|null} [state] MembershipFeatureState state
                         */
    
                        /**
                         * Constructs a new MembershipFeatureState.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a MembershipFeatureState.
                         * @implements IMembershipFeatureState
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureState=} [properties] Properties to set
                         */
                        function MembershipFeatureState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipFeatureState metering.
                         * @member {google.cloud.gkehub.metering.v1beta.IMembershipState|null|undefined} metering
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.metering = null;
    
                        /**
                         * MembershipFeatureState configmanagement.
                         * @member {google.cloud.gkehub.configmanagement.v1beta.IMembershipState|null|undefined} configmanagement
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.configmanagement = null;
    
                        /**
                         * MembershipFeatureState state.
                         * @member {google.cloud.gkehub.v1beta.IFeatureState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @instance
                         */
                        MembershipFeatureState.prototype.state = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipFeatureState featureState.
                         * @member {"metering"|"configmanagement"|undefined} featureState
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @instance
                         */
                        Object.defineProperty(MembershipFeatureState.prototype, "featureState", {
                            get: $util.oneOfGetter($oneOfFields = ["metering", "configmanagement"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipFeatureState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureState} MembershipFeatureState instance
                         */
                        MembershipFeatureState.create = function create(properties) {
                            return new MembershipFeatureState(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureState message. Does not implicitly {@link google.cloud.gkehub.v1beta.MembershipFeatureState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureState} message MembershipFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1beta.FeatureState.encode(message.state, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.metering != null && Object.hasOwnProperty.call(message, "metering"))
                                $root.google.cloud.gkehub.metering.v1beta.MembershipState.encode(message.metering, writer.uint32(/* id 104, wireType 2 =*/834).fork()).ldelim();
                            if (message.configmanagement != null && Object.hasOwnProperty.call(message, "configmanagement"))
                                $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState.encode(message.configmanagement, writer.uint32(/* id 106, wireType 2 =*/850).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipFeatureState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.MembershipFeatureState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IMembershipFeatureState} message MembershipFeatureState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipFeatureState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipFeatureState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureState} MembershipFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.MembershipFeatureState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 104:
                                    message.metering = $root.google.cloud.gkehub.metering.v1beta.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 106:
                                    message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 1:
                                    message.state = $root.google.cloud.gkehub.v1beta.FeatureState.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipFeatureState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureState} MembershipFeatureState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipFeatureState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipFeatureState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipFeatureState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.metering != null && message.hasOwnProperty("metering")) {
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.metering.v1beta.MembershipState.verify(message.metering);
                                    if (error)
                                        return "metering." + error;
                                }
                            }
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                if (properties.featureState === 1)
                                    return "featureState: multiple values";
                                properties.featureState = 1;
                                {
                                    var error = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState.verify(message.configmanagement);
                                    if (error)
                                        return "configmanagement." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1beta.FeatureState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipFeatureState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.MembershipFeatureState} MembershipFeatureState
                         */
                        MembershipFeatureState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.MembershipFeatureState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.MembershipFeatureState();
                            if (object.metering != null) {
                                if (typeof object.metering !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.MembershipFeatureState.metering: object expected");
                                message.metering = $root.google.cloud.gkehub.metering.v1beta.MembershipState.fromObject(object.metering);
                            }
                            if (object.configmanagement != null) {
                                if (typeof object.configmanagement !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.MembershipFeatureState.configmanagement: object expected");
                                message.configmanagement = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState.fromObject(object.configmanagement);
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.MembershipFeatureState.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1beta.FeatureState.fromObject(object.state);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipFeatureState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @static
                         * @param {google.cloud.gkehub.v1beta.MembershipFeatureState} message MembershipFeatureState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipFeatureState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.state = null;
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1beta.FeatureState.toObject(message.state, options);
                            if (message.metering != null && message.hasOwnProperty("metering")) {
                                object.metering = $root.google.cloud.gkehub.metering.v1beta.MembershipState.toObject(message.metering, options);
                                if (options.oneofs)
                                    object.featureState = "metering";
                            }
                            if (message.configmanagement != null && message.hasOwnProperty("configmanagement")) {
                                object.configmanagement = $root.google.cloud.gkehub.configmanagement.v1beta.MembershipState.toObject(message.configmanagement, options);
                                if (options.oneofs)
                                    object.featureState = "configmanagement";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipFeatureState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.MembershipFeatureState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipFeatureState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipFeatureState;
                    })();
    
                    v1beta.GkeHub = (function() {
    
                        /**
                         * Constructs a new GkeHub service.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a GkeHub
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GkeHub(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GkeHub.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GkeHub;
    
                        /**
                         * Creates new GkeHub service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GkeHub} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GkeHub.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta.GkeHub#listFeatures}.
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @typedef ListFeaturesCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta.ListFeaturesResponse} [response] ListFeaturesResponse
                         */
    
                        /**
                         * Calls ListFeatures.
                         * @function listFeatures
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesRequest} request ListFeaturesRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta.GkeHub.ListFeaturesCallback} callback Node-style callback called with the error, if any, and ListFeaturesResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.listFeatures = function listFeatures(request, callback) {
                            return this.rpcCall(listFeatures, $root.google.cloud.gkehub.v1beta.ListFeaturesRequest, $root.google.cloud.gkehub.v1beta.ListFeaturesResponse, request, callback);
                        }, "name", { value: "ListFeatures" });
    
                        /**
                         * Calls ListFeatures.
                         * @function listFeatures
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesRequest} request ListFeaturesRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta.ListFeaturesResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta.GkeHub#getFeature}.
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @typedef GetFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta.Feature} [response] Feature
                         */
    
                        /**
                         * Calls GetFeature.
                         * @function getFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IGetFeatureRequest} request GetFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta.GkeHub.GetFeatureCallback} callback Node-style callback called with the error, if any, and Feature
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.getFeature = function getFeature(request, callback) {
                            return this.rpcCall(getFeature, $root.google.cloud.gkehub.v1beta.GetFeatureRequest, $root.google.cloud.gkehub.v1beta.Feature, request, callback);
                        }, "name", { value: "GetFeature" });
    
                        /**
                         * Calls GetFeature.
                         * @function getFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IGetFeatureRequest} request GetFeatureRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta.Feature>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta.GkeHub#createFeature}.
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @typedef CreateFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateFeature.
                         * @function createFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.ICreateFeatureRequest} request CreateFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta.GkeHub.CreateFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.createFeature = function createFeature(request, callback) {
                            return this.rpcCall(createFeature, $root.google.cloud.gkehub.v1beta.CreateFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateFeature" });
    
                        /**
                         * Calls CreateFeature.
                         * @function createFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.ICreateFeatureRequest} request CreateFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta.GkeHub#deleteFeature}.
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @typedef DeleteFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteFeature.
                         * @function deleteFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IDeleteFeatureRequest} request DeleteFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta.GkeHub.DeleteFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.deleteFeature = function deleteFeature(request, callback) {
                            return this.rpcCall(deleteFeature, $root.google.cloud.gkehub.v1beta.DeleteFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteFeature" });
    
                        /**
                         * Calls DeleteFeature.
                         * @function deleteFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IDeleteFeatureRequest} request DeleteFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta.GkeHub#updateFeature}.
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @typedef UpdateFeatureCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateFeature.
                         * @function updateFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IUpdateFeatureRequest} request UpdateFeatureRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta.GkeHub.UpdateFeatureCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHub.prototype.updateFeature = function updateFeature(request, callback) {
                            return this.rpcCall(updateFeature, $root.google.cloud.gkehub.v1beta.UpdateFeatureRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateFeature" });
    
                        /**
                         * Calls UpdateFeature.
                         * @function updateFeature
                         * @memberof google.cloud.gkehub.v1beta.GkeHub
                         * @instance
                         * @param {google.cloud.gkehub.v1beta.IUpdateFeatureRequest} request UpdateFeatureRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        return GkeHub;
                    })();
    
                    v1beta.ListFeaturesRequest = (function() {
    
                        /**
                         * Properties of a ListFeaturesRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IListFeaturesRequest
                         * @property {string|null} [parent] ListFeaturesRequest parent
                         * @property {number|null} [pageSize] ListFeaturesRequest pageSize
                         * @property {string|null} [pageToken] ListFeaturesRequest pageToken
                         * @property {string|null} [filter] ListFeaturesRequest filter
                         * @property {string|null} [orderBy] ListFeaturesRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListFeaturesRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a ListFeaturesRequest.
                         * @implements IListFeaturesRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesRequest=} [properties] Properties to set
                         */
                        function ListFeaturesRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFeaturesRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.parent = "";
    
                        /**
                         * ListFeaturesRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.pageSize = 0;
    
                        /**
                         * ListFeaturesRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.pageToken = "";
    
                        /**
                         * ListFeaturesRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.filter = "";
    
                        /**
                         * ListFeaturesRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @instance
                         */
                        ListFeaturesRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListFeaturesRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesRequest} ListFeaturesRequest instance
                         */
                        ListFeaturesRequest.create = function create(properties) {
                            return new ListFeaturesRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListFeaturesRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta.ListFeaturesRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesRequest} message ListFeaturesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFeaturesRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.ListFeaturesRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesRequest} message ListFeaturesRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFeaturesRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesRequest} ListFeaturesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.ListFeaturesRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.filter = reader.string();
                                    break;
                                case 5:
                                    message.orderBy = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFeaturesRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesRequest} ListFeaturesRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFeaturesRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFeaturesRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFeaturesRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesRequest} ListFeaturesRequest
                         */
                        ListFeaturesRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.ListFeaturesRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.ListFeaturesRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFeaturesRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ListFeaturesRequest} message ListFeaturesRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFeaturesRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListFeaturesRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFeaturesRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListFeaturesRequest;
                    })();
    
                    v1beta.ListFeaturesResponse = (function() {
    
                        /**
                         * Properties of a ListFeaturesResponse.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IListFeaturesResponse
                         * @property {Array.<google.cloud.gkehub.v1beta.IFeature>|null} [resources] ListFeaturesResponse resources
                         * @property {string|null} [nextPageToken] ListFeaturesResponse nextPageToken
                         */
    
                        /**
                         * Constructs a new ListFeaturesResponse.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a ListFeaturesResponse.
                         * @implements IListFeaturesResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesResponse=} [properties] Properties to set
                         */
                        function ListFeaturesResponse(properties) {
                            this.resources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListFeaturesResponse resources.
                         * @member {Array.<google.cloud.gkehub.v1beta.IFeature>} resources
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @instance
                         */
                        ListFeaturesResponse.prototype.resources = $util.emptyArray;
    
                        /**
                         * ListFeaturesResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @instance
                         */
                        ListFeaturesResponse.prototype.nextPageToken = "";
    
                        /**
                         * Creates a new ListFeaturesResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesResponse} ListFeaturesResponse instance
                         */
                        ListFeaturesResponse.create = function create(properties) {
                            return new ListFeaturesResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListFeaturesResponse message. Does not implicitly {@link google.cloud.gkehub.v1beta.ListFeaturesResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesResponse} message ListFeaturesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resources != null && message.resources.length)
                                for (var i = 0; i < message.resources.length; ++i)
                                    $root.google.cloud.gkehub.v1beta.Feature.encode(message.resources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListFeaturesResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.ListFeaturesResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IListFeaturesResponse} message ListFeaturesResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListFeaturesResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListFeaturesResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesResponse} ListFeaturesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.ListFeaturesResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.resources && message.resources.length))
                                        message.resources = [];
                                    message.resources.push($root.google.cloud.gkehub.v1beta.Feature.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListFeaturesResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesResponse} ListFeaturesResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListFeaturesResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListFeaturesResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListFeaturesResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                if (!Array.isArray(message.resources))
                                    return "resources: array expected";
                                for (var i = 0; i < message.resources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta.Feature.verify(message.resources[i]);
                                    if (error)
                                        return "resources." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListFeaturesResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.ListFeaturesResponse} ListFeaturesResponse
                         */
                        ListFeaturesResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.ListFeaturesResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.ListFeaturesResponse();
                            if (object.resources) {
                                if (!Array.isArray(object.resources))
                                    throw TypeError(".google.cloud.gkehub.v1beta.ListFeaturesResponse.resources: array expected");
                                message.resources = [];
                                for (var i = 0; i < object.resources.length; ++i) {
                                    if (typeof object.resources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta.ListFeaturesResponse.resources: object expected");
                                    message.resources[i] = $root.google.cloud.gkehub.v1beta.Feature.fromObject(object.resources[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListFeaturesResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ListFeaturesResponse} message ListFeaturesResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListFeaturesResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.resources = [];
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.resources && message.resources.length) {
                                object.resources = [];
                                for (var j = 0; j < message.resources.length; ++j)
                                    object.resources[j] = $root.google.cloud.gkehub.v1beta.Feature.toObject(message.resources[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            return object;
                        };
    
                        /**
                         * Converts this ListFeaturesResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.ListFeaturesResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListFeaturesResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListFeaturesResponse;
                    })();
    
                    v1beta.GetFeatureRequest = (function() {
    
                        /**
                         * Properties of a GetFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IGetFeatureRequest
                         * @property {string|null} [name] GetFeatureRequest name
                         */
    
                        /**
                         * Constructs a new GetFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a GetFeatureRequest.
                         * @implements IGetFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IGetFeatureRequest=} [properties] Properties to set
                         */
                        function GetFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @instance
                         */
                        GetFeatureRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IGetFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.GetFeatureRequest} GetFeatureRequest instance
                         */
                        GetFeatureRequest.create = function create(properties) {
                            return new GetFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta.GetFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IGetFeatureRequest} message GetFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.GetFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IGetFeatureRequest} message GetFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.GetFeatureRequest} GetFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.GetFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.GetFeatureRequest} GetFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.GetFeatureRequest} GetFeatureRequest
                         */
                        GetFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.GetFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.GetFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.GetFeatureRequest} message GetFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.GetFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetFeatureRequest;
                    })();
    
                    v1beta.CreateFeatureRequest = (function() {
    
                        /**
                         * Properties of a CreateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface ICreateFeatureRequest
                         * @property {string|null} [parent] CreateFeatureRequest parent
                         * @property {string|null} [featureId] CreateFeatureRequest featureId
                         * @property {google.cloud.gkehub.v1beta.IFeature|null} [resource] CreateFeatureRequest resource
                         * @property {string|null} [requestId] CreateFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a CreateFeatureRequest.
                         * @implements ICreateFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.ICreateFeatureRequest=} [properties] Properties to set
                         */
                        function CreateFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateFeatureRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.parent = "";
    
                        /**
                         * CreateFeatureRequest featureId.
                         * @member {string} featureId
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.featureId = "";
    
                        /**
                         * CreateFeatureRequest resource.
                         * @member {google.cloud.gkehub.v1beta.IFeature|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.resource = null;
    
                        /**
                         * CreateFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @instance
                         */
                        CreateFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICreateFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.CreateFeatureRequest} CreateFeatureRequest instance
                         */
                        CreateFeatureRequest.create = function create(properties) {
                            return new CreateFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta.CreateFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICreateFeatureRequest} message CreateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.featureId != null && Object.hasOwnProperty.call(message, "featureId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.featureId);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1beta.Feature.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.CreateFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.ICreateFeatureRequest} message CreateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.CreateFeatureRequest} CreateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.CreateFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.featureId = reader.string();
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1beta.Feature.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.CreateFeatureRequest} CreateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.featureId != null && message.hasOwnProperty("featureId"))
                                if (!$util.isString(message.featureId))
                                    return "featureId: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1beta.Feature.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.CreateFeatureRequest} CreateFeatureRequest
                         */
                        CreateFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.CreateFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.CreateFeatureRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.featureId != null)
                                message.featureId = String(object.featureId);
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.CreateFeatureRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1beta.Feature.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.CreateFeatureRequest} message CreateFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.featureId = "";
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.featureId != null && message.hasOwnProperty("featureId"))
                                object.featureId = message.featureId;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1beta.Feature.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.CreateFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateFeatureRequest;
                    })();
    
                    v1beta.DeleteFeatureRequest = (function() {
    
                        /**
                         * Properties of a DeleteFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IDeleteFeatureRequest
                         * @property {string|null} [name] DeleteFeatureRequest name
                         * @property {boolean|null} [force] DeleteFeatureRequest force
                         * @property {string|null} [requestId] DeleteFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents a DeleteFeatureRequest.
                         * @implements IDeleteFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IDeleteFeatureRequest=} [properties] Properties to set
                         */
                        function DeleteFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.name = "";
    
                        /**
                         * DeleteFeatureRequest force.
                         * @member {boolean} force
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.force = false;
    
                        /**
                         * DeleteFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @instance
                         */
                        DeleteFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IDeleteFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.DeleteFeatureRequest} DeleteFeatureRequest instance
                         */
                        DeleteFeatureRequest.create = function create(properties) {
                            return new DeleteFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta.DeleteFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IDeleteFeatureRequest} message DeleteFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.force != null && Object.hasOwnProperty.call(message, "force"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.force);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.DeleteFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IDeleteFeatureRequest} message DeleteFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.DeleteFeatureRequest} DeleteFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.DeleteFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.force = reader.bool();
                                    break;
                                case 3:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.DeleteFeatureRequest} DeleteFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.force != null && message.hasOwnProperty("force"))
                                if (typeof message.force !== "boolean")
                                    return "force: boolean expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.DeleteFeatureRequest} DeleteFeatureRequest
                         */
                        DeleteFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.DeleteFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.DeleteFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.force != null)
                                message.force = Boolean(object.force);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.DeleteFeatureRequest} message DeleteFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.force = false;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.force != null && message.hasOwnProperty("force"))
                                object.force = message.force;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.DeleteFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteFeatureRequest;
                    })();
    
                    v1beta.UpdateFeatureRequest = (function() {
    
                        /**
                         * Properties of an UpdateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IUpdateFeatureRequest
                         * @property {string|null} [name] UpdateFeatureRequest name
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateFeatureRequest updateMask
                         * @property {google.cloud.gkehub.v1beta.IFeature|null} [resource] UpdateFeatureRequest resource
                         * @property {string|null} [requestId] UpdateFeatureRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateFeatureRequest.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents an UpdateFeatureRequest.
                         * @implements IUpdateFeatureRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IUpdateFeatureRequest=} [properties] Properties to set
                         */
                        function UpdateFeatureRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateFeatureRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.name = "";
    
                        /**
                         * UpdateFeatureRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateFeatureRequest resource.
                         * @member {google.cloud.gkehub.v1beta.IFeature|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.resource = null;
    
                        /**
                         * UpdateFeatureRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @instance
                         */
                        UpdateFeatureRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateFeatureRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IUpdateFeatureRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.UpdateFeatureRequest} UpdateFeatureRequest instance
                         */
                        UpdateFeatureRequest.create = function create(properties) {
                            return new UpdateFeatureRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateFeatureRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta.UpdateFeatureRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IUpdateFeatureRequest} message UpdateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFeatureRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1beta.Feature.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateFeatureRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.UpdateFeatureRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IUpdateFeatureRequest} message UpdateFeatureRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateFeatureRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateFeatureRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.UpdateFeatureRequest} UpdateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFeatureRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.UpdateFeatureRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1beta.Feature.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateFeatureRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.UpdateFeatureRequest} UpdateFeatureRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateFeatureRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateFeatureRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateFeatureRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1beta.Feature.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateFeatureRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.UpdateFeatureRequest} UpdateFeatureRequest
                         */
                        UpdateFeatureRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.UpdateFeatureRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.UpdateFeatureRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.UpdateFeatureRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.UpdateFeatureRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1beta.Feature.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateFeatureRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta.UpdateFeatureRequest} message UpdateFeatureRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateFeatureRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateMask = null;
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1beta.Feature.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateFeatureRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.UpdateFeatureRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateFeatureRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateFeatureRequest;
                    })();
    
                    v1beta.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.gkehub.v1beta
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.gkehub.v1beta
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.gkehub.v1beta.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.target = reader.string();
                                    break;
                                case 4:
                                    message.verb = reader.string();
                                    break;
                                case 5:
                                    message.statusDetail = reader.string();
                                    break;
                                case 6:
                                    message.cancelRequested = reader.bool();
                                    break;
                                case 7:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationMetadata;
                    })();
    
                    return v1beta;
                })();
    
                gkehub.v1beta1 = (function() {
    
                    /**
                     * Namespace v1beta1.
                     * @memberof google.cloud.gkehub
                     * @namespace
                     */
                    var v1beta1 = {};
    
                    v1beta1.GkeHubMembershipService = (function() {
    
                        /**
                         * Constructs a new GkeHubMembershipService service.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GkeHubMembershipService
                         * @extends $protobuf.rpc.Service
                         * @constructor
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         */
                        function GkeHubMembershipService(rpcImpl, requestDelimited, responseDelimited) {
                            $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                        }
    
                        (GkeHubMembershipService.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = GkeHubMembershipService;
    
                        /**
                         * Creates new GkeHubMembershipService service using the specified rpc implementation.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @static
                         * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                         * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                         * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                         * @returns {GkeHubMembershipService} RPC service. Useful where requests and/or responses are streamed.
                         */
                        GkeHubMembershipService.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                            return new this(rpcImpl, requestDelimited, responseDelimited);
                        };
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#listMemberships}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef ListMembershipsCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta1.ListMembershipsResponse} [response] ListMembershipsResponse
                         */
    
                        /**
                         * Calls ListMemberships.
                         * @function listMemberships
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsRequest} request ListMembershipsRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.ListMembershipsCallback} callback Node-style callback called with the error, if any, and ListMembershipsResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.listMemberships = function listMemberships(request, callback) {
                            return this.rpcCall(listMemberships, $root.google.cloud.gkehub.v1beta1.ListMembershipsRequest, $root.google.cloud.gkehub.v1beta1.ListMembershipsResponse, request, callback);
                        }, "name", { value: "ListMemberships" });
    
                        /**
                         * Calls ListMemberships.
                         * @function listMemberships
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsRequest} request ListMembershipsRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta1.ListMembershipsResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#getMembership}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef GetMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta1.Membership} [response] Membership
                         */
    
                        /**
                         * Calls GetMembership.
                         * @function getMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IGetMembershipRequest} request GetMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.GetMembershipCallback} callback Node-style callback called with the error, if any, and Membership
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.getMembership = function getMembership(request, callback) {
                            return this.rpcCall(getMembership, $root.google.cloud.gkehub.v1beta1.GetMembershipRequest, $root.google.cloud.gkehub.v1beta1.Membership, request, callback);
                        }, "name", { value: "GetMembership" });
    
                        /**
                         * Calls GetMembership.
                         * @function getMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IGetMembershipRequest} request GetMembershipRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta1.Membership>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#createMembership}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef CreateMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls CreateMembership.
                         * @function createMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.ICreateMembershipRequest} request CreateMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.CreateMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.createMembership = function createMembership(request, callback) {
                            return this.rpcCall(createMembership, $root.google.cloud.gkehub.v1beta1.CreateMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "CreateMembership" });
    
                        /**
                         * Calls CreateMembership.
                         * @function createMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.ICreateMembershipRequest} request CreateMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#deleteMembership}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef DeleteMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls DeleteMembership.
                         * @function deleteMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IDeleteMembershipRequest} request DeleteMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.DeleteMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.deleteMembership = function deleteMembership(request, callback) {
                            return this.rpcCall(deleteMembership, $root.google.cloud.gkehub.v1beta1.DeleteMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "DeleteMembership" });
    
                        /**
                         * Calls DeleteMembership.
                         * @function deleteMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IDeleteMembershipRequest} request DeleteMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#updateMembership}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef UpdateMembershipCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.longrunning.Operation} [response] Operation
                         */
    
                        /**
                         * Calls UpdateMembership.
                         * @function updateMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IUpdateMembershipRequest} request UpdateMembershipRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.UpdateMembershipCallback} callback Node-style callback called with the error, if any, and Operation
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.updateMembership = function updateMembership(request, callback) {
                            return this.rpcCall(updateMembership, $root.google.cloud.gkehub.v1beta1.UpdateMembershipRequest, $root.google.longrunning.Operation, request, callback);
                        }, "name", { value: "UpdateMembership" });
    
                        /**
                         * Calls UpdateMembership.
                         * @function updateMembership
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IUpdateMembershipRequest} request UpdateMembershipRequest message or plain object
                         * @returns {Promise<google.longrunning.Operation>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#generateConnectManifest}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef GenerateConnectManifestCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse} [response] GenerateConnectManifestResponse
                         */
    
                        /**
                         * Calls GenerateConnectManifest.
                         * @function generateConnectManifest
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestRequest} request GenerateConnectManifestRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.GenerateConnectManifestCallback} callback Node-style callback called with the error, if any, and GenerateConnectManifestResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.generateConnectManifest = function generateConnectManifest(request, callback) {
                            return this.rpcCall(generateConnectManifest, $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest, $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse, request, callback);
                        }, "name", { value: "GenerateConnectManifest" });
    
                        /**
                         * Calls GenerateConnectManifest.
                         * @function generateConnectManifest
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestRequest} request GenerateConnectManifestRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#validateExclusivity}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef ValidateExclusivityCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta1.ValidateExclusivityResponse} [response] ValidateExclusivityResponse
                         */
    
                        /**
                         * Calls ValidateExclusivity.
                         * @function validateExclusivity
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityRequest} request ValidateExclusivityRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.ValidateExclusivityCallback} callback Node-style callback called with the error, if any, and ValidateExclusivityResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.validateExclusivity = function validateExclusivity(request, callback) {
                            return this.rpcCall(validateExclusivity, $root.google.cloud.gkehub.v1beta1.ValidateExclusivityRequest, $root.google.cloud.gkehub.v1beta1.ValidateExclusivityResponse, request, callback);
                        }, "name", { value: "ValidateExclusivity" });
    
                        /**
                         * Calls ValidateExclusivity.
                         * @function validateExclusivity
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityRequest} request ValidateExclusivityRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta1.ValidateExclusivityResponse>} Promise
                         * @variation 2
                         */
    
                        /**
                         * Callback as used by {@link google.cloud.gkehub.v1beta1.GkeHubMembershipService#generateExclusivityManifest}.
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @typedef GenerateExclusivityManifestCallback
                         * @type {function}
                         * @param {Error|null} error Error, if any
                         * @param {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse} [response] GenerateExclusivityManifestResponse
                         */
    
                        /**
                         * Calls GenerateExclusivityManifest.
                         * @function generateExclusivityManifest
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestRequest} request GenerateExclusivityManifestRequest message or plain object
                         * @param {google.cloud.gkehub.v1beta1.GkeHubMembershipService.GenerateExclusivityManifestCallback} callback Node-style callback called with the error, if any, and GenerateExclusivityManifestResponse
                         * @returns {undefined}
                         * @variation 1
                         */
                        Object.defineProperty(GkeHubMembershipService.prototype.generateExclusivityManifest = function generateExclusivityManifest(request, callback) {
                            return this.rpcCall(generateExclusivityManifest, $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest, $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse, request, callback);
                        }, "name", { value: "GenerateExclusivityManifest" });
    
                        /**
                         * Calls GenerateExclusivityManifest.
                         * @function generateExclusivityManifest
                         * @memberof google.cloud.gkehub.v1beta1.GkeHubMembershipService
                         * @instance
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestRequest} request GenerateExclusivityManifestRequest message or plain object
                         * @returns {Promise<google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse>} Promise
                         * @variation 2
                         */
    
                        return GkeHubMembershipService;
                    })();
    
                    v1beta1.Membership = (function() {
    
                        /**
                         * Properties of a Membership.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IMembership
                         * @property {string|null} [name] Membership name
                         * @property {Object.<string,string>|null} [labels] Membership labels
                         * @property {string|null} [description] Membership description
                         * @property {google.cloud.gkehub.v1beta1.IMembershipEndpoint|null} [endpoint] Membership endpoint
                         * @property {google.cloud.gkehub.v1beta1.IMembershipState|null} [state] Membership state
                         * @property {google.cloud.gkehub.v1beta1.IAuthority|null} [authority] Membership authority
                         * @property {google.protobuf.ITimestamp|null} [createTime] Membership createTime
                         * @property {google.protobuf.ITimestamp|null} [updateTime] Membership updateTime
                         * @property {google.protobuf.ITimestamp|null} [deleteTime] Membership deleteTime
                         * @property {string|null} [externalId] Membership externalId
                         * @property {google.protobuf.ITimestamp|null} [lastConnectionTime] Membership lastConnectionTime
                         * @property {string|null} [uniqueId] Membership uniqueId
                         * @property {google.cloud.gkehub.v1beta1.Membership.InfrastructureType|null} [infrastructureType] Membership infrastructureType
                         */
    
                        /**
                         * Constructs a new Membership.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a Membership.
                         * @implements IMembership
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IMembership=} [properties] Properties to set
                         */
                        function Membership(properties) {
                            this.labels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Membership name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.name = "";
    
                        /**
                         * Membership labels.
                         * @member {Object.<string,string>} labels
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.labels = $util.emptyObject;
    
                        /**
                         * Membership description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.description = "";
    
                        /**
                         * Membership endpoint.
                         * @member {google.cloud.gkehub.v1beta1.IMembershipEndpoint|null|undefined} endpoint
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.endpoint = null;
    
                        /**
                         * Membership state.
                         * @member {google.cloud.gkehub.v1beta1.IMembershipState|null|undefined} state
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.state = null;
    
                        /**
                         * Membership authority.
                         * @member {google.cloud.gkehub.v1beta1.IAuthority|null|undefined} authority
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.authority = null;
    
                        /**
                         * Membership createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.createTime = null;
    
                        /**
                         * Membership updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.updateTime = null;
    
                        /**
                         * Membership deleteTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} deleteTime
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.deleteTime = null;
    
                        /**
                         * Membership externalId.
                         * @member {string} externalId
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.externalId = "";
    
                        /**
                         * Membership lastConnectionTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} lastConnectionTime
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.lastConnectionTime = null;
    
                        /**
                         * Membership uniqueId.
                         * @member {string} uniqueId
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.uniqueId = "";
    
                        /**
                         * Membership infrastructureType.
                         * @member {google.cloud.gkehub.v1beta1.Membership.InfrastructureType} infrastructureType
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Membership.prototype.infrastructureType = 0;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * Membership type.
                         * @member {"endpoint"|undefined} type
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         */
                        Object.defineProperty(Membership.prototype, "type", {
                            get: $util.oneOfGetter($oneOfFields = ["endpoint"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new Membership instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembership=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.Membership} Membership instance
                         */
                        Membership.create = function create(properties) {
                            return new Membership(properties);
                        };
    
                        /**
                         * Encodes the specified Membership message. Does not implicitly {@link google.cloud.gkehub.v1beta1.Membership.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembership} message Membership message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Membership.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.labels != null && Object.hasOwnProperty.call(message, "labels"))
                                for (var keys = Object.keys(message.labels), i = 0; i < keys.length; ++i)
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]).uint32(/* id 2, wireType 2 =*/18).string(message.labels[keys[i]]).ldelim();
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.description);
                            if (message.endpoint != null && Object.hasOwnProperty.call(message, "endpoint"))
                                $root.google.cloud.gkehub.v1beta1.MembershipEndpoint.encode(message.endpoint, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.state != null && Object.hasOwnProperty.call(message, "state"))
                                $root.google.cloud.gkehub.v1beta1.MembershipState.encode(message.state, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.deleteTime != null && Object.hasOwnProperty.call(message, "deleteTime"))
                                $root.google.protobuf.Timestamp.encode(message.deleteTime, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.authority != null && Object.hasOwnProperty.call(message, "authority"))
                                $root.google.cloud.gkehub.v1beta1.Authority.encode(message.authority, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.externalId != null && Object.hasOwnProperty.call(message, "externalId"))
                                writer.uint32(/* id 10, wireType 2 =*/82).string(message.externalId);
                            if (message.lastConnectionTime != null && Object.hasOwnProperty.call(message, "lastConnectionTime"))
                                $root.google.protobuf.Timestamp.encode(message.lastConnectionTime, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.uniqueId != null && Object.hasOwnProperty.call(message, "uniqueId"))
                                writer.uint32(/* id 12, wireType 2 =*/98).string(message.uniqueId);
                            if (message.infrastructureType != null && Object.hasOwnProperty.call(message, "infrastructureType"))
                                writer.uint32(/* id 13, wireType 0 =*/104).int32(message.infrastructureType);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Membership message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.Membership.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembership} message Membership message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Membership.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a Membership message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.Membership} Membership
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Membership.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.Membership(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    if (message.labels === $util.emptyObject)
                                        message.labels = {};
                                    var end2 = reader.uint32() + reader.pos;
                                    key = "";
                                    value = "";
                                    while (reader.pos < end2) {
                                        var tag2 = reader.uint32();
                                        switch (tag2 >>> 3) {
                                        case 1:
                                            key = reader.string();
                                            break;
                                        case 2:
                                            value = reader.string();
                                            break;
                                        default:
                                            reader.skipType(tag2 & 7);
                                            break;
                                        }
                                    }
                                    message.labels[key] = value;
                                    break;
                                case 3:
                                    message.description = reader.string();
                                    break;
                                case 4:
                                    message.endpoint = $root.google.cloud.gkehub.v1beta1.MembershipEndpoint.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.state = $root.google.cloud.gkehub.v1beta1.MembershipState.decode(reader, reader.uint32());
                                    break;
                                case 9:
                                    message.authority = $root.google.cloud.gkehub.v1beta1.Authority.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.deleteTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 10:
                                    message.externalId = reader.string();
                                    break;
                                case 11:
                                    message.lastConnectionTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 12:
                                    message.uniqueId = reader.string();
                                    break;
                                case 13:
                                    message.infrastructureType = reader.int32();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a Membership message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.Membership} Membership
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Membership.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a Membership message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Membership.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.labels != null && message.hasOwnProperty("labels")) {
                                if (!$util.isObject(message.labels))
                                    return "labels: object expected";
                                var key = Object.keys(message.labels);
                                for (var i = 0; i < key.length; ++i)
                                    if (!$util.isString(message.labels[key[i]]))
                                        return "labels: string{k:string} expected";
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.endpoint != null && message.hasOwnProperty("endpoint")) {
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1beta1.MembershipEndpoint.verify(message.endpoint);
                                    if (error)
                                        return "endpoint." + error;
                                }
                            }
                            if (message.state != null && message.hasOwnProperty("state")) {
                                var error = $root.google.cloud.gkehub.v1beta1.MembershipState.verify(message.state);
                                if (error)
                                    return "state." + error;
                            }
                            if (message.authority != null && message.hasOwnProperty("authority")) {
                                var error = $root.google.cloud.gkehub.v1beta1.Authority.verify(message.authority);
                                if (error)
                                    return "authority." + error;
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.deleteTime);
                                if (error)
                                    return "deleteTime." + error;
                            }
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                if (!$util.isString(message.externalId))
                                    return "externalId: string expected";
                            if (message.lastConnectionTime != null && message.hasOwnProperty("lastConnectionTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.lastConnectionTime);
                                if (error)
                                    return "lastConnectionTime." + error;
                            }
                            if (message.uniqueId != null && message.hasOwnProperty("uniqueId"))
                                if (!$util.isString(message.uniqueId))
                                    return "uniqueId: string expected";
                            if (message.infrastructureType != null && message.hasOwnProperty("infrastructureType"))
                                switch (message.infrastructureType) {
                                default:
                                    return "infrastructureType: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            return null;
                        };
    
                        /**
                         * Creates a Membership message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.Membership} Membership
                         */
                        Membership.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.Membership)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.Membership();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.labels) {
                                if (typeof object.labels !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.labels: object expected");
                                message.labels = {};
                                for (var keys = Object.keys(object.labels), i = 0; i < keys.length; ++i)
                                    message.labels[keys[i]] = String(object.labels[keys[i]]);
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.endpoint != null) {
                                if (typeof object.endpoint !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.endpoint: object expected");
                                message.endpoint = $root.google.cloud.gkehub.v1beta1.MembershipEndpoint.fromObject(object.endpoint);
                            }
                            if (object.state != null) {
                                if (typeof object.state !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.state: object expected");
                                message.state = $root.google.cloud.gkehub.v1beta1.MembershipState.fromObject(object.state);
                            }
                            if (object.authority != null) {
                                if (typeof object.authority !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.authority: object expected");
                                message.authority = $root.google.cloud.gkehub.v1beta1.Authority.fromObject(object.authority);
                            }
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            if (object.deleteTime != null) {
                                if (typeof object.deleteTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.deleteTime: object expected");
                                message.deleteTime = $root.google.protobuf.Timestamp.fromObject(object.deleteTime);
                            }
                            if (object.externalId != null)
                                message.externalId = String(object.externalId);
                            if (object.lastConnectionTime != null) {
                                if (typeof object.lastConnectionTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.Membership.lastConnectionTime: object expected");
                                message.lastConnectionTime = $root.google.protobuf.Timestamp.fromObject(object.lastConnectionTime);
                            }
                            if (object.uniqueId != null)
                                message.uniqueId = String(object.uniqueId);
                            switch (object.infrastructureType) {
                            case "INFRASTRUCTURE_TYPE_UNSPECIFIED":
                            case 0:
                                message.infrastructureType = 0;
                                break;
                            case "ON_PREM":
                            case 1:
                                message.infrastructureType = 1;
                                break;
                            case "MULTI_CLOUD":
                            case 2:
                                message.infrastructureType = 2;
                                break;
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a Membership message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.Membership} message Membership
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Membership.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.labels = {};
                            if (options.defaults) {
                                object.name = "";
                                object.description = "";
                                object.state = null;
                                object.createTime = null;
                                object.updateTime = null;
                                object.deleteTime = null;
                                object.authority = null;
                                object.externalId = "";
                                object.lastConnectionTime = null;
                                object.uniqueId = "";
                                object.infrastructureType = options.enums === String ? "INFRASTRUCTURE_TYPE_UNSPECIFIED" : 0;
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            var keys2;
                            if (message.labels && (keys2 = Object.keys(message.labels)).length) {
                                object.labels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.labels[keys2[j]] = message.labels[keys2[j]];
                            }
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.endpoint != null && message.hasOwnProperty("endpoint")) {
                                object.endpoint = $root.google.cloud.gkehub.v1beta1.MembershipEndpoint.toObject(message.endpoint, options);
                                if (options.oneofs)
                                    object.type = "endpoint";
                            }
                            if (message.state != null && message.hasOwnProperty("state"))
                                object.state = $root.google.cloud.gkehub.v1beta1.MembershipState.toObject(message.state, options);
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            if (message.deleteTime != null && message.hasOwnProperty("deleteTime"))
                                object.deleteTime = $root.google.protobuf.Timestamp.toObject(message.deleteTime, options);
                            if (message.authority != null && message.hasOwnProperty("authority"))
                                object.authority = $root.google.cloud.gkehub.v1beta1.Authority.toObject(message.authority, options);
                            if (message.externalId != null && message.hasOwnProperty("externalId"))
                                object.externalId = message.externalId;
                            if (message.lastConnectionTime != null && message.hasOwnProperty("lastConnectionTime"))
                                object.lastConnectionTime = $root.google.protobuf.Timestamp.toObject(message.lastConnectionTime, options);
                            if (message.uniqueId != null && message.hasOwnProperty("uniqueId"))
                                object.uniqueId = message.uniqueId;
                            if (message.infrastructureType != null && message.hasOwnProperty("infrastructureType"))
                                object.infrastructureType = options.enums === String ? $root.google.cloud.gkehub.v1beta1.Membership.InfrastructureType[message.infrastructureType] : message.infrastructureType;
                            return object;
                        };
    
                        /**
                         * Converts this Membership to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.Membership
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Membership.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * InfrastructureType enum.
                         * @name google.cloud.gkehub.v1beta1.Membership.InfrastructureType
                         * @enum {number}
                         * @property {number} INFRASTRUCTURE_TYPE_UNSPECIFIED=0 INFRASTRUCTURE_TYPE_UNSPECIFIED value
                         * @property {number} ON_PREM=1 ON_PREM value
                         * @property {number} MULTI_CLOUD=2 MULTI_CLOUD value
                         */
                        Membership.InfrastructureType = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "INFRASTRUCTURE_TYPE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "ON_PREM"] = 1;
                            values[valuesById[2] = "MULTI_CLOUD"] = 2;
                            return values;
                        })();
    
                        return Membership;
                    })();
    
                    v1beta1.MembershipEndpoint = (function() {
    
                        /**
                         * Properties of a MembershipEndpoint.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IMembershipEndpoint
                         * @property {google.cloud.gkehub.v1beta1.IGkeCluster|null} [gkeCluster] MembershipEndpoint gkeCluster
                         * @property {google.cloud.gkehub.v1beta1.IOnPremCluster|null} [onPremCluster] MembershipEndpoint onPremCluster
                         * @property {google.cloud.gkehub.v1beta1.IMultiCloudCluster|null} [multiCloudCluster] MembershipEndpoint multiCloudCluster
                         * @property {google.cloud.gkehub.v1beta1.IKubernetesMetadata|null} [kubernetesMetadata] MembershipEndpoint kubernetesMetadata
                         * @property {google.cloud.gkehub.v1beta1.IKubernetesResource|null} [kubernetesResource] MembershipEndpoint kubernetesResource
                         */
    
                        /**
                         * Constructs a new MembershipEndpoint.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a MembershipEndpoint.
                         * @implements IMembershipEndpoint
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IMembershipEndpoint=} [properties] Properties to set
                         */
                        function MembershipEndpoint(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipEndpoint gkeCluster.
                         * @member {google.cloud.gkehub.v1beta1.IGkeCluster|null|undefined} gkeCluster
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.gkeCluster = null;
    
                        /**
                         * MembershipEndpoint onPremCluster.
                         * @member {google.cloud.gkehub.v1beta1.IOnPremCluster|null|undefined} onPremCluster
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.onPremCluster = null;
    
                        /**
                         * MembershipEndpoint multiCloudCluster.
                         * @member {google.cloud.gkehub.v1beta1.IMultiCloudCluster|null|undefined} multiCloudCluster
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.multiCloudCluster = null;
    
                        /**
                         * MembershipEndpoint kubernetesMetadata.
                         * @member {google.cloud.gkehub.v1beta1.IKubernetesMetadata|null|undefined} kubernetesMetadata
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.kubernetesMetadata = null;
    
                        /**
                         * MembershipEndpoint kubernetesResource.
                         * @member {google.cloud.gkehub.v1beta1.IKubernetesResource|null|undefined} kubernetesResource
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         */
                        MembershipEndpoint.prototype.kubernetesResource = null;
    
                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;
    
                        /**
                         * MembershipEndpoint type.
                         * @member {"gkeCluster"|"onPremCluster"|"multiCloudCluster"|undefined} type
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         */
                        Object.defineProperty(MembershipEndpoint.prototype, "type", {
                            get: $util.oneOfGetter($oneOfFields = ["gkeCluster", "onPremCluster", "multiCloudCluster"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });
    
                        /**
                         * Creates a new MembershipEndpoint instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembershipEndpoint=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.MembershipEndpoint} MembershipEndpoint instance
                         */
                        MembershipEndpoint.create = function create(properties) {
                            return new MembershipEndpoint(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipEndpoint message. Does not implicitly {@link google.cloud.gkehub.v1beta1.MembershipEndpoint.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembershipEndpoint} message MembershipEndpoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipEndpoint.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gkeCluster != null && Object.hasOwnProperty.call(message, "gkeCluster"))
                                $root.google.cloud.gkehub.v1beta1.GkeCluster.encode(message.gkeCluster, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.kubernetesMetadata != null && Object.hasOwnProperty.call(message, "kubernetesMetadata"))
                                $root.google.cloud.gkehub.v1beta1.KubernetesMetadata.encode(message.kubernetesMetadata, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.kubernetesResource != null && Object.hasOwnProperty.call(message, "kubernetesResource"))
                                $root.google.cloud.gkehub.v1beta1.KubernetesResource.encode(message.kubernetesResource, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.onPremCluster != null && Object.hasOwnProperty.call(message, "onPremCluster"))
                                $root.google.cloud.gkehub.v1beta1.OnPremCluster.encode(message.onPremCluster, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.multiCloudCluster != null && Object.hasOwnProperty.call(message, "multiCloudCluster"))
                                $root.google.cloud.gkehub.v1beta1.MultiCloudCluster.encode(message.multiCloudCluster, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipEndpoint message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.MembershipEndpoint.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembershipEndpoint} message MembershipEndpoint message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipEndpoint.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipEndpoint message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.MembershipEndpoint} MembershipEndpoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipEndpoint.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.MembershipEndpoint();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 4:
                                    message.gkeCluster = $root.google.cloud.gkehub.v1beta1.GkeCluster.decode(reader, reader.uint32());
                                    break;
                                case 7:
                                    message.onPremCluster = $root.google.cloud.gkehub.v1beta1.OnPremCluster.decode(reader, reader.uint32());
                                    break;
                                case 8:
                                    message.multiCloudCluster = $root.google.cloud.gkehub.v1beta1.MultiCloudCluster.decode(reader, reader.uint32());
                                    break;
                                case 5:
                                    message.kubernetesMetadata = $root.google.cloud.gkehub.v1beta1.KubernetesMetadata.decode(reader, reader.uint32());
                                    break;
                                case 6:
                                    message.kubernetesResource = $root.google.cloud.gkehub.v1beta1.KubernetesResource.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipEndpoint message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.MembershipEndpoint} MembershipEndpoint
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipEndpoint.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipEndpoint message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipEndpoint.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.gkeCluster != null && message.hasOwnProperty("gkeCluster")) {
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1beta1.GkeCluster.verify(message.gkeCluster);
                                    if (error)
                                        return "gkeCluster." + error;
                                }
                            }
                            if (message.onPremCluster != null && message.hasOwnProperty("onPremCluster")) {
                                if (properties.type === 1)
                                    return "type: multiple values";
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1beta1.OnPremCluster.verify(message.onPremCluster);
                                    if (error)
                                        return "onPremCluster." + error;
                                }
                            }
                            if (message.multiCloudCluster != null && message.hasOwnProperty("multiCloudCluster")) {
                                if (properties.type === 1)
                                    return "type: multiple values";
                                properties.type = 1;
                                {
                                    var error = $root.google.cloud.gkehub.v1beta1.MultiCloudCluster.verify(message.multiCloudCluster);
                                    if (error)
                                        return "multiCloudCluster." + error;
                                }
                            }
                            if (message.kubernetesMetadata != null && message.hasOwnProperty("kubernetesMetadata")) {
                                var error = $root.google.cloud.gkehub.v1beta1.KubernetesMetadata.verify(message.kubernetesMetadata);
                                if (error)
                                    return "kubernetesMetadata." + error;
                            }
                            if (message.kubernetesResource != null && message.hasOwnProperty("kubernetesResource")) {
                                var error = $root.google.cloud.gkehub.v1beta1.KubernetesResource.verify(message.kubernetesResource);
                                if (error)
                                    return "kubernetesResource." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipEndpoint message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.MembershipEndpoint} MembershipEndpoint
                         */
                        MembershipEndpoint.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.MembershipEndpoint)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.MembershipEndpoint();
                            if (object.gkeCluster != null) {
                                if (typeof object.gkeCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.MembershipEndpoint.gkeCluster: object expected");
                                message.gkeCluster = $root.google.cloud.gkehub.v1beta1.GkeCluster.fromObject(object.gkeCluster);
                            }
                            if (object.onPremCluster != null) {
                                if (typeof object.onPremCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.MembershipEndpoint.onPremCluster: object expected");
                                message.onPremCluster = $root.google.cloud.gkehub.v1beta1.OnPremCluster.fromObject(object.onPremCluster);
                            }
                            if (object.multiCloudCluster != null) {
                                if (typeof object.multiCloudCluster !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.MembershipEndpoint.multiCloudCluster: object expected");
                                message.multiCloudCluster = $root.google.cloud.gkehub.v1beta1.MultiCloudCluster.fromObject(object.multiCloudCluster);
                            }
                            if (object.kubernetesMetadata != null) {
                                if (typeof object.kubernetesMetadata !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.MembershipEndpoint.kubernetesMetadata: object expected");
                                message.kubernetesMetadata = $root.google.cloud.gkehub.v1beta1.KubernetesMetadata.fromObject(object.kubernetesMetadata);
                            }
                            if (object.kubernetesResource != null) {
                                if (typeof object.kubernetesResource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.MembershipEndpoint.kubernetesResource: object expected");
                                message.kubernetesResource = $root.google.cloud.gkehub.v1beta1.KubernetesResource.fromObject(object.kubernetesResource);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipEndpoint message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.MembershipEndpoint} message MembershipEndpoint
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipEndpoint.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kubernetesMetadata = null;
                                object.kubernetesResource = null;
                            }
                            if (message.gkeCluster != null && message.hasOwnProperty("gkeCluster")) {
                                object.gkeCluster = $root.google.cloud.gkehub.v1beta1.GkeCluster.toObject(message.gkeCluster, options);
                                if (options.oneofs)
                                    object.type = "gkeCluster";
                            }
                            if (message.kubernetesMetadata != null && message.hasOwnProperty("kubernetesMetadata"))
                                object.kubernetesMetadata = $root.google.cloud.gkehub.v1beta1.KubernetesMetadata.toObject(message.kubernetesMetadata, options);
                            if (message.kubernetesResource != null && message.hasOwnProperty("kubernetesResource"))
                                object.kubernetesResource = $root.google.cloud.gkehub.v1beta1.KubernetesResource.toObject(message.kubernetesResource, options);
                            if (message.onPremCluster != null && message.hasOwnProperty("onPremCluster")) {
                                object.onPremCluster = $root.google.cloud.gkehub.v1beta1.OnPremCluster.toObject(message.onPremCluster, options);
                                if (options.oneofs)
                                    object.type = "onPremCluster";
                            }
                            if (message.multiCloudCluster != null && message.hasOwnProperty("multiCloudCluster")) {
                                object.multiCloudCluster = $root.google.cloud.gkehub.v1beta1.MultiCloudCluster.toObject(message.multiCloudCluster, options);
                                if (options.oneofs)
                                    object.type = "multiCloudCluster";
                            }
                            return object;
                        };
    
                        /**
                         * Converts this MembershipEndpoint to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.MembershipEndpoint
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipEndpoint.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MembershipEndpoint;
                    })();
    
                    v1beta1.KubernetesResource = (function() {
    
                        /**
                         * Properties of a KubernetesResource.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IKubernetesResource
                         * @property {string|null} [membershipCrManifest] KubernetesResource membershipCrManifest
                         * @property {Array.<google.cloud.gkehub.v1beta1.IResourceManifest>|null} [membershipResources] KubernetesResource membershipResources
                         * @property {Array.<google.cloud.gkehub.v1beta1.IResourceManifest>|null} [connectResources] KubernetesResource connectResources
                         * @property {google.cloud.gkehub.v1beta1.IResourceOptions|null} [resourceOptions] KubernetesResource resourceOptions
                         */
    
                        /**
                         * Constructs a new KubernetesResource.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a KubernetesResource.
                         * @implements IKubernetesResource
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesResource=} [properties] Properties to set
                         */
                        function KubernetesResource(properties) {
                            this.membershipResources = [];
                            this.connectResources = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesResource membershipCrManifest.
                         * @member {string} membershipCrManifest
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.membershipCrManifest = "";
    
                        /**
                         * KubernetesResource membershipResources.
                         * @member {Array.<google.cloud.gkehub.v1beta1.IResourceManifest>} membershipResources
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.membershipResources = $util.emptyArray;
    
                        /**
                         * KubernetesResource connectResources.
                         * @member {Array.<google.cloud.gkehub.v1beta1.IResourceManifest>} connectResources
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.connectResources = $util.emptyArray;
    
                        /**
                         * KubernetesResource resourceOptions.
                         * @member {google.cloud.gkehub.v1beta1.IResourceOptions|null|undefined} resourceOptions
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @instance
                         */
                        KubernetesResource.prototype.resourceOptions = null;
    
                        /**
                         * Creates a new KubernetesResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesResource=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesResource} KubernetesResource instance
                         */
                        KubernetesResource.create = function create(properties) {
                            return new KubernetesResource(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesResource message. Does not implicitly {@link google.cloud.gkehub.v1beta1.KubernetesResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesResource} message KubernetesResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.membershipCrManifest != null && Object.hasOwnProperty.call(message, "membershipCrManifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.membershipCrManifest);
                            if (message.membershipResources != null && message.membershipResources.length)
                                for (var i = 0; i < message.membershipResources.length; ++i)
                                    $root.google.cloud.gkehub.v1beta1.ResourceManifest.encode(message.membershipResources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.connectResources != null && message.connectResources.length)
                                for (var i = 0; i < message.connectResources.length; ++i)
                                    $root.google.cloud.gkehub.v1beta1.ResourceManifest.encode(message.connectResources[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.resourceOptions != null && Object.hasOwnProperty.call(message, "resourceOptions"))
                                $root.google.cloud.gkehub.v1beta1.ResourceOptions.encode(message.resourceOptions, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.KubernetesResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesResource} message KubernetesResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesResource} KubernetesResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.KubernetesResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.membershipCrManifest = reader.string();
                                    break;
                                case 2:
                                    if (!(message.membershipResources && message.membershipResources.length))
                                        message.membershipResources = [];
                                    message.membershipResources.push($root.google.cloud.gkehub.v1beta1.ResourceManifest.decode(reader, reader.uint32()));
                                    break;
                                case 3:
                                    if (!(message.connectResources && message.connectResources.length))
                                        message.connectResources = [];
                                    message.connectResources.push($root.google.cloud.gkehub.v1beta1.ResourceManifest.decode(reader, reader.uint32()));
                                    break;
                                case 4:
                                    message.resourceOptions = $root.google.cloud.gkehub.v1beta1.ResourceOptions.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesResource} KubernetesResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesResource message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.membershipCrManifest != null && message.hasOwnProperty("membershipCrManifest"))
                                if (!$util.isString(message.membershipCrManifest))
                                    return "membershipCrManifest: string expected";
                            if (message.membershipResources != null && message.hasOwnProperty("membershipResources")) {
                                if (!Array.isArray(message.membershipResources))
                                    return "membershipResources: array expected";
                                for (var i = 0; i < message.membershipResources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta1.ResourceManifest.verify(message.membershipResources[i]);
                                    if (error)
                                        return "membershipResources." + error;
                                }
                            }
                            if (message.connectResources != null && message.hasOwnProperty("connectResources")) {
                                if (!Array.isArray(message.connectResources))
                                    return "connectResources: array expected";
                                for (var i = 0; i < message.connectResources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta1.ResourceManifest.verify(message.connectResources[i]);
                                    if (error)
                                        return "connectResources." + error;
                                }
                            }
                            if (message.resourceOptions != null && message.hasOwnProperty("resourceOptions")) {
                                var error = $root.google.cloud.gkehub.v1beta1.ResourceOptions.verify(message.resourceOptions);
                                if (error)
                                    return "resourceOptions." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesResource} KubernetesResource
                         */
                        KubernetesResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.KubernetesResource)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.KubernetesResource();
                            if (object.membershipCrManifest != null)
                                message.membershipCrManifest = String(object.membershipCrManifest);
                            if (object.membershipResources) {
                                if (!Array.isArray(object.membershipResources))
                                    throw TypeError(".google.cloud.gkehub.v1beta1.KubernetesResource.membershipResources: array expected");
                                message.membershipResources = [];
                                for (var i = 0; i < object.membershipResources.length; ++i) {
                                    if (typeof object.membershipResources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta1.KubernetesResource.membershipResources: object expected");
                                    message.membershipResources[i] = $root.google.cloud.gkehub.v1beta1.ResourceManifest.fromObject(object.membershipResources[i]);
                                }
                            }
                            if (object.connectResources) {
                                if (!Array.isArray(object.connectResources))
                                    throw TypeError(".google.cloud.gkehub.v1beta1.KubernetesResource.connectResources: array expected");
                                message.connectResources = [];
                                for (var i = 0; i < object.connectResources.length; ++i) {
                                    if (typeof object.connectResources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta1.KubernetesResource.connectResources: object expected");
                                    message.connectResources[i] = $root.google.cloud.gkehub.v1beta1.ResourceManifest.fromObject(object.connectResources[i]);
                                }
                            }
                            if (object.resourceOptions != null) {
                                if (typeof object.resourceOptions !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.KubernetesResource.resourceOptions: object expected");
                                message.resourceOptions = $root.google.cloud.gkehub.v1beta1.ResourceOptions.fromObject(object.resourceOptions);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.KubernetesResource} message KubernetesResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.membershipResources = [];
                                object.connectResources = [];
                            }
                            if (options.defaults) {
                                object.membershipCrManifest = "";
                                object.resourceOptions = null;
                            }
                            if (message.membershipCrManifest != null && message.hasOwnProperty("membershipCrManifest"))
                                object.membershipCrManifest = message.membershipCrManifest;
                            if (message.membershipResources && message.membershipResources.length) {
                                object.membershipResources = [];
                                for (var j = 0; j < message.membershipResources.length; ++j)
                                    object.membershipResources[j] = $root.google.cloud.gkehub.v1beta1.ResourceManifest.toObject(message.membershipResources[j], options);
                            }
                            if (message.connectResources && message.connectResources.length) {
                                object.connectResources = [];
                                for (var j = 0; j < message.connectResources.length; ++j)
                                    object.connectResources[j] = $root.google.cloud.gkehub.v1beta1.ResourceManifest.toObject(message.connectResources[j], options);
                            }
                            if (message.resourceOptions != null && message.hasOwnProperty("resourceOptions"))
                                object.resourceOptions = $root.google.cloud.gkehub.v1beta1.ResourceOptions.toObject(message.resourceOptions, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return KubernetesResource;
                    })();
    
                    v1beta1.ResourceOptions = (function() {
    
                        /**
                         * Properties of a ResourceOptions.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IResourceOptions
                         * @property {string|null} [connectVersion] ResourceOptions connectVersion
                         * @property {boolean|null} [v1beta1Crd] ResourceOptions v1beta1Crd
                         * @property {string|null} [k8sVersion] ResourceOptions k8sVersion
                         */
    
                        /**
                         * Constructs a new ResourceOptions.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ResourceOptions.
                         * @implements IResourceOptions
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IResourceOptions=} [properties] Properties to set
                         */
                        function ResourceOptions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceOptions connectVersion.
                         * @member {string} connectVersion
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.connectVersion = "";
    
                        /**
                         * ResourceOptions v1beta1Crd.
                         * @member {boolean} v1beta1Crd
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.v1beta1Crd = false;
    
                        /**
                         * ResourceOptions k8sVersion.
                         * @member {string} k8sVersion
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @instance
                         */
                        ResourceOptions.prototype.k8sVersion = "";
    
                        /**
                         * Creates a new ResourceOptions instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IResourceOptions=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ResourceOptions} ResourceOptions instance
                         */
                        ResourceOptions.create = function create(properties) {
                            return new ResourceOptions(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceOptions message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ResourceOptions.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IResourceOptions} message ResourceOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceOptions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.connectVersion != null && Object.hasOwnProperty.call(message, "connectVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.connectVersion);
                            if (message.v1beta1Crd != null && Object.hasOwnProperty.call(message, "v1beta1Crd"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.v1beta1Crd);
                            if (message.k8sVersion != null && Object.hasOwnProperty.call(message, "k8sVersion"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.k8sVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceOptions message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ResourceOptions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IResourceOptions} message ResourceOptions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceOptions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceOptions message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ResourceOptions} ResourceOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceOptions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ResourceOptions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.connectVersion = reader.string();
                                    break;
                                case 2:
                                    message.v1beta1Crd = reader.bool();
                                    break;
                                case 3:
                                    message.k8sVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceOptions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ResourceOptions} ResourceOptions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceOptions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceOptions message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceOptions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.connectVersion != null && message.hasOwnProperty("connectVersion"))
                                if (!$util.isString(message.connectVersion))
                                    return "connectVersion: string expected";
                            if (message.v1beta1Crd != null && message.hasOwnProperty("v1beta1Crd"))
                                if (typeof message.v1beta1Crd !== "boolean")
                                    return "v1beta1Crd: boolean expected";
                            if (message.k8sVersion != null && message.hasOwnProperty("k8sVersion"))
                                if (!$util.isString(message.k8sVersion))
                                    return "k8sVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceOptions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ResourceOptions} ResourceOptions
                         */
                        ResourceOptions.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ResourceOptions)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ResourceOptions();
                            if (object.connectVersion != null)
                                message.connectVersion = String(object.connectVersion);
                            if (object.v1beta1Crd != null)
                                message.v1beta1Crd = Boolean(object.v1beta1Crd);
                            if (object.k8sVersion != null)
                                message.k8sVersion = String(object.k8sVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceOptions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ResourceOptions} message ResourceOptions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceOptions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.connectVersion = "";
                                object.v1beta1Crd = false;
                                object.k8sVersion = "";
                            }
                            if (message.connectVersion != null && message.hasOwnProperty("connectVersion"))
                                object.connectVersion = message.connectVersion;
                            if (message.v1beta1Crd != null && message.hasOwnProperty("v1beta1Crd"))
                                object.v1beta1Crd = message.v1beta1Crd;
                            if (message.k8sVersion != null && message.hasOwnProperty("k8sVersion"))
                                object.k8sVersion = message.k8sVersion;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceOptions to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ResourceOptions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceOptions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResourceOptions;
                    })();
    
                    v1beta1.ResourceManifest = (function() {
    
                        /**
                         * Properties of a ResourceManifest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IResourceManifest
                         * @property {string|null} [manifest] ResourceManifest manifest
                         * @property {boolean|null} [clusterScoped] ResourceManifest clusterScoped
                         */
    
                        /**
                         * Constructs a new ResourceManifest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ResourceManifest.
                         * @implements IResourceManifest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IResourceManifest=} [properties] Properties to set
                         */
                        function ResourceManifest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ResourceManifest manifest.
                         * @member {string} manifest
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @instance
                         */
                        ResourceManifest.prototype.manifest = "";
    
                        /**
                         * ResourceManifest clusterScoped.
                         * @member {boolean} clusterScoped
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @instance
                         */
                        ResourceManifest.prototype.clusterScoped = false;
    
                        /**
                         * Creates a new ResourceManifest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IResourceManifest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ResourceManifest} ResourceManifest instance
                         */
                        ResourceManifest.create = function create(properties) {
                            return new ResourceManifest(properties);
                        };
    
                        /**
                         * Encodes the specified ResourceManifest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ResourceManifest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IResourceManifest} message ResourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceManifest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.manifest != null && Object.hasOwnProperty.call(message, "manifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.manifest);
                            if (message.clusterScoped != null && Object.hasOwnProperty.call(message, "clusterScoped"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterScoped);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ResourceManifest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ResourceManifest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IResourceManifest} message ResourceManifest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ResourceManifest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ResourceManifest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ResourceManifest} ResourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceManifest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ResourceManifest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.manifest = reader.string();
                                    break;
                                case 2:
                                    message.clusterScoped = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ResourceManifest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ResourceManifest} ResourceManifest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ResourceManifest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ResourceManifest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ResourceManifest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                if (!$util.isString(message.manifest))
                                    return "manifest: string expected";
                            if (message.clusterScoped != null && message.hasOwnProperty("clusterScoped"))
                                if (typeof message.clusterScoped !== "boolean")
                                    return "clusterScoped: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a ResourceManifest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ResourceManifest} ResourceManifest
                         */
                        ResourceManifest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ResourceManifest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ResourceManifest();
                            if (object.manifest != null)
                                message.manifest = String(object.manifest);
                            if (object.clusterScoped != null)
                                message.clusterScoped = Boolean(object.clusterScoped);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ResourceManifest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ResourceManifest} message ResourceManifest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ResourceManifest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.manifest = "";
                                object.clusterScoped = false;
                            }
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                object.manifest = message.manifest;
                            if (message.clusterScoped != null && message.hasOwnProperty("clusterScoped"))
                                object.clusterScoped = message.clusterScoped;
                            return object;
                        };
    
                        /**
                         * Converts this ResourceManifest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ResourceManifest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ResourceManifest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ResourceManifest;
                    })();
    
                    v1beta1.GkeCluster = (function() {
    
                        /**
                         * Properties of a GkeCluster.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IGkeCluster
                         * @property {string|null} [resourceLink] GkeCluster resourceLink
                         * @property {boolean|null} [clusterMissing] GkeCluster clusterMissing
                         */
    
                        /**
                         * Constructs a new GkeCluster.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GkeCluster.
                         * @implements IGkeCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IGkeCluster=} [properties] Properties to set
                         */
                        function GkeCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GkeCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.resourceLink = "";
    
                        /**
                         * GkeCluster clusterMissing.
                         * @member {boolean} clusterMissing
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @instance
                         */
                        GkeCluster.prototype.clusterMissing = false;
    
                        /**
                         * Creates a new GkeCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGkeCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.GkeCluster} GkeCluster instance
                         */
                        GkeCluster.create = function create(properties) {
                            return new GkeCluster(properties);
                        };
    
                        /**
                         * Encodes the specified GkeCluster message. Does not implicitly {@link google.cloud.gkehub.v1beta1.GkeCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            if (message.clusterMissing != null && Object.hasOwnProperty.call(message, "clusterMissing"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.clusterMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GkeCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.GkeCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGkeCluster} message GkeCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GkeCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.GkeCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                case 3:
                                    message.clusterMissing = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GkeCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.GkeCluster} GkeCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GkeCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GkeCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GkeCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                if (typeof message.clusterMissing !== "boolean")
                                    return "clusterMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a GkeCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.GkeCluster} GkeCluster
                         */
                        GkeCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.GkeCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.GkeCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            if (object.clusterMissing != null)
                                message.clusterMissing = Boolean(object.clusterMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GkeCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.GkeCluster} message GkeCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GkeCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resourceLink = "";
                                object.clusterMissing = false;
                            }
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                object.clusterMissing = message.clusterMissing;
                            return object;
                        };
    
                        /**
                         * Converts this GkeCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.GkeCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GkeCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GkeCluster;
                    })();
    
                    v1beta1.OnPremCluster = (function() {
    
                        /**
                         * Properties of an OnPremCluster.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IOnPremCluster
                         * @property {string|null} [resourceLink] OnPremCluster resourceLink
                         * @property {boolean|null} [clusterMissing] OnPremCluster clusterMissing
                         * @property {boolean|null} [adminCluster] OnPremCluster adminCluster
                         */
    
                        /**
                         * Constructs a new OnPremCluster.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents an OnPremCluster.
                         * @implements IOnPremCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IOnPremCluster=} [properties] Properties to set
                         */
                        function OnPremCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OnPremCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @instance
                         */
                        OnPremCluster.prototype.resourceLink = "";
    
                        /**
                         * OnPremCluster clusterMissing.
                         * @member {boolean} clusterMissing
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @instance
                         */
                        OnPremCluster.prototype.clusterMissing = false;
    
                        /**
                         * OnPremCluster adminCluster.
                         * @member {boolean} adminCluster
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @instance
                         */
                        OnPremCluster.prototype.adminCluster = false;
    
                        /**
                         * Creates a new OnPremCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IOnPremCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.OnPremCluster} OnPremCluster instance
                         */
                        OnPremCluster.create = function create(properties) {
                            return new OnPremCluster(properties);
                        };
    
                        /**
                         * Encodes the specified OnPremCluster message. Does not implicitly {@link google.cloud.gkehub.v1beta1.OnPremCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IOnPremCluster} message OnPremCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OnPremCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            if (message.clusterMissing != null && Object.hasOwnProperty.call(message, "clusterMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterMissing);
                            if (message.adminCluster != null && Object.hasOwnProperty.call(message, "adminCluster"))
                                writer.uint32(/* id 3, wireType 0 =*/24).bool(message.adminCluster);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OnPremCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.OnPremCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IOnPremCluster} message OnPremCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OnPremCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OnPremCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.OnPremCluster} OnPremCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OnPremCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.OnPremCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                case 2:
                                    message.clusterMissing = reader.bool();
                                    break;
                                case 3:
                                    message.adminCluster = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OnPremCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.OnPremCluster} OnPremCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OnPremCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OnPremCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OnPremCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                if (typeof message.clusterMissing !== "boolean")
                                    return "clusterMissing: boolean expected";
                            if (message.adminCluster != null && message.hasOwnProperty("adminCluster"))
                                if (typeof message.adminCluster !== "boolean")
                                    return "adminCluster: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates an OnPremCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.OnPremCluster} OnPremCluster
                         */
                        OnPremCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.OnPremCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.OnPremCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            if (object.clusterMissing != null)
                                message.clusterMissing = Boolean(object.clusterMissing);
                            if (object.adminCluster != null)
                                message.adminCluster = Boolean(object.adminCluster);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OnPremCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.OnPremCluster} message OnPremCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OnPremCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resourceLink = "";
                                object.clusterMissing = false;
                                object.adminCluster = false;
                            }
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                object.clusterMissing = message.clusterMissing;
                            if (message.adminCluster != null && message.hasOwnProperty("adminCluster"))
                                object.adminCluster = message.adminCluster;
                            return object;
                        };
    
                        /**
                         * Converts this OnPremCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.OnPremCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OnPremCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OnPremCluster;
                    })();
    
                    v1beta1.MultiCloudCluster = (function() {
    
                        /**
                         * Properties of a MultiCloudCluster.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IMultiCloudCluster
                         * @property {string|null} [resourceLink] MultiCloudCluster resourceLink
                         * @property {boolean|null} [clusterMissing] MultiCloudCluster clusterMissing
                         */
    
                        /**
                         * Constructs a new MultiCloudCluster.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a MultiCloudCluster.
                         * @implements IMultiCloudCluster
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IMultiCloudCluster=} [properties] Properties to set
                         */
                        function MultiCloudCluster(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MultiCloudCluster resourceLink.
                         * @member {string} resourceLink
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @instance
                         */
                        MultiCloudCluster.prototype.resourceLink = "";
    
                        /**
                         * MultiCloudCluster clusterMissing.
                         * @member {boolean} clusterMissing
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @instance
                         */
                        MultiCloudCluster.prototype.clusterMissing = false;
    
                        /**
                         * Creates a new MultiCloudCluster instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMultiCloudCluster=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.MultiCloudCluster} MultiCloudCluster instance
                         */
                        MultiCloudCluster.create = function create(properties) {
                            return new MultiCloudCluster(properties);
                        };
    
                        /**
                         * Encodes the specified MultiCloudCluster message. Does not implicitly {@link google.cloud.gkehub.v1beta1.MultiCloudCluster.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMultiCloudCluster} message MultiCloudCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MultiCloudCluster.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resourceLink != null && Object.hasOwnProperty.call(message, "resourceLink"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.resourceLink);
                            if (message.clusterMissing != null && Object.hasOwnProperty.call(message, "clusterMissing"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.clusterMissing);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MultiCloudCluster message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.MultiCloudCluster.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMultiCloudCluster} message MultiCloudCluster message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MultiCloudCluster.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MultiCloudCluster message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.MultiCloudCluster} MultiCloudCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MultiCloudCluster.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.MultiCloudCluster();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.resourceLink = reader.string();
                                    break;
                                case 2:
                                    message.clusterMissing = reader.bool();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MultiCloudCluster message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.MultiCloudCluster} MultiCloudCluster
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MultiCloudCluster.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MultiCloudCluster message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MultiCloudCluster.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                if (!$util.isString(message.resourceLink))
                                    return "resourceLink: string expected";
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                if (typeof message.clusterMissing !== "boolean")
                                    return "clusterMissing: boolean expected";
                            return null;
                        };
    
                        /**
                         * Creates a MultiCloudCluster message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.MultiCloudCluster} MultiCloudCluster
                         */
                        MultiCloudCluster.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.MultiCloudCluster)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.MultiCloudCluster();
                            if (object.resourceLink != null)
                                message.resourceLink = String(object.resourceLink);
                            if (object.clusterMissing != null)
                                message.clusterMissing = Boolean(object.clusterMissing);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MultiCloudCluster message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.MultiCloudCluster} message MultiCloudCluster
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MultiCloudCluster.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.resourceLink = "";
                                object.clusterMissing = false;
                            }
                            if (message.resourceLink != null && message.hasOwnProperty("resourceLink"))
                                object.resourceLink = message.resourceLink;
                            if (message.clusterMissing != null && message.hasOwnProperty("clusterMissing"))
                                object.clusterMissing = message.clusterMissing;
                            return object;
                        };
    
                        /**
                         * Converts this MultiCloudCluster to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.MultiCloudCluster
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MultiCloudCluster.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return MultiCloudCluster;
                    })();
    
                    v1beta1.KubernetesMetadata = (function() {
    
                        /**
                         * Properties of a KubernetesMetadata.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IKubernetesMetadata
                         * @property {string|null} [kubernetesApiServerVersion] KubernetesMetadata kubernetesApiServerVersion
                         * @property {string|null} [nodeProviderId] KubernetesMetadata nodeProviderId
                         * @property {number|null} [nodeCount] KubernetesMetadata nodeCount
                         * @property {number|null} [vcpuCount] KubernetesMetadata vcpuCount
                         * @property {number|null} [memoryMb] KubernetesMetadata memoryMb
                         * @property {google.protobuf.ITimestamp|null} [updateTime] KubernetesMetadata updateTime
                         */
    
                        /**
                         * Constructs a new KubernetesMetadata.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a KubernetesMetadata.
                         * @implements IKubernetesMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesMetadata=} [properties] Properties to set
                         */
                        function KubernetesMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * KubernetesMetadata kubernetesApiServerVersion.
                         * @member {string} kubernetesApiServerVersion
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.kubernetesApiServerVersion = "";
    
                        /**
                         * KubernetesMetadata nodeProviderId.
                         * @member {string} nodeProviderId
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.nodeProviderId = "";
    
                        /**
                         * KubernetesMetadata nodeCount.
                         * @member {number} nodeCount
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.nodeCount = 0;
    
                        /**
                         * KubernetesMetadata vcpuCount.
                         * @member {number} vcpuCount
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.vcpuCount = 0;
    
                        /**
                         * KubernetesMetadata memoryMb.
                         * @member {number} memoryMb
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.memoryMb = 0;
    
                        /**
                         * KubernetesMetadata updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         */
                        KubernetesMetadata.prototype.updateTime = null;
    
                        /**
                         * Creates a new KubernetesMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesMetadata} KubernetesMetadata instance
                         */
                        KubernetesMetadata.create = function create(properties) {
                            return new KubernetesMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified KubernetesMetadata message. Does not implicitly {@link google.cloud.gkehub.v1beta1.KubernetesMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesMetadata} message KubernetesMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kubernetesApiServerVersion != null && Object.hasOwnProperty.call(message, "kubernetesApiServerVersion"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kubernetesApiServerVersion);
                            if (message.nodeProviderId != null && Object.hasOwnProperty.call(message, "nodeProviderId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nodeProviderId);
                            if (message.nodeCount != null && Object.hasOwnProperty.call(message, "nodeCount"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.nodeCount);
                            if (message.vcpuCount != null && Object.hasOwnProperty.call(message, "vcpuCount"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.vcpuCount);
                            if (message.memoryMb != null && Object.hasOwnProperty.call(message, "memoryMb"))
                                writer.uint32(/* id 5, wireType 0 =*/40).int32(message.memoryMb);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 100, wireType 2 =*/802).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified KubernetesMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.KubernetesMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IKubernetesMetadata} message KubernetesMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        KubernetesMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a KubernetesMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesMetadata} KubernetesMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.KubernetesMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kubernetesApiServerVersion = reader.string();
                                    break;
                                case 2:
                                    message.nodeProviderId = reader.string();
                                    break;
                                case 3:
                                    message.nodeCount = reader.int32();
                                    break;
                                case 4:
                                    message.vcpuCount = reader.int32();
                                    break;
                                case 5:
                                    message.memoryMb = reader.int32();
                                    break;
                                case 100:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a KubernetesMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesMetadata} KubernetesMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        KubernetesMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a KubernetesMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        KubernetesMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kubernetesApiServerVersion != null && message.hasOwnProperty("kubernetesApiServerVersion"))
                                if (!$util.isString(message.kubernetesApiServerVersion))
                                    return "kubernetesApiServerVersion: string expected";
                            if (message.nodeProviderId != null && message.hasOwnProperty("nodeProviderId"))
                                if (!$util.isString(message.nodeProviderId))
                                    return "nodeProviderId: string expected";
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                if (!$util.isInteger(message.nodeCount))
                                    return "nodeCount: integer expected";
                            if (message.vcpuCount != null && message.hasOwnProperty("vcpuCount"))
                                if (!$util.isInteger(message.vcpuCount))
                                    return "vcpuCount: integer expected";
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                if (!$util.isInteger(message.memoryMb))
                                    return "memoryMb: integer expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a KubernetesMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.KubernetesMetadata} KubernetesMetadata
                         */
                        KubernetesMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.KubernetesMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.KubernetesMetadata();
                            if (object.kubernetesApiServerVersion != null)
                                message.kubernetesApiServerVersion = String(object.kubernetesApiServerVersion);
                            if (object.nodeProviderId != null)
                                message.nodeProviderId = String(object.nodeProviderId);
                            if (object.nodeCount != null)
                                message.nodeCount = object.nodeCount | 0;
                            if (object.vcpuCount != null)
                                message.vcpuCount = object.vcpuCount | 0;
                            if (object.memoryMb != null)
                                message.memoryMb = object.memoryMb | 0;
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.KubernetesMetadata.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a KubernetesMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.KubernetesMetadata} message KubernetesMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        KubernetesMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kubernetesApiServerVersion = "";
                                object.nodeProviderId = "";
                                object.nodeCount = 0;
                                object.vcpuCount = 0;
                                object.memoryMb = 0;
                                object.updateTime = null;
                            }
                            if (message.kubernetesApiServerVersion != null && message.hasOwnProperty("kubernetesApiServerVersion"))
                                object.kubernetesApiServerVersion = message.kubernetesApiServerVersion;
                            if (message.nodeProviderId != null && message.hasOwnProperty("nodeProviderId"))
                                object.nodeProviderId = message.nodeProviderId;
                            if (message.nodeCount != null && message.hasOwnProperty("nodeCount"))
                                object.nodeCount = message.nodeCount;
                            if (message.vcpuCount != null && message.hasOwnProperty("vcpuCount"))
                                object.vcpuCount = message.vcpuCount;
                            if (message.memoryMb != null && message.hasOwnProperty("memoryMb"))
                                object.memoryMb = message.memoryMb;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this KubernetesMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.KubernetesMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        KubernetesMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return KubernetesMetadata;
                    })();
    
                    v1beta1.Authority = (function() {
    
                        /**
                         * Properties of an Authority.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IAuthority
                         * @property {string|null} [issuer] Authority issuer
                         * @property {string|null} [workloadIdentityPool] Authority workloadIdentityPool
                         * @property {string|null} [identityProvider] Authority identityProvider
                         * @property {Uint8Array|null} [oidcJwks] Authority oidcJwks
                         */
    
                        /**
                         * Constructs a new Authority.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents an Authority.
                         * @implements IAuthority
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IAuthority=} [properties] Properties to set
                         */
                        function Authority(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * Authority issuer.
                         * @member {string} issuer
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @instance
                         */
                        Authority.prototype.issuer = "";
    
                        /**
                         * Authority workloadIdentityPool.
                         * @member {string} workloadIdentityPool
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @instance
                         */
                        Authority.prototype.workloadIdentityPool = "";
    
                        /**
                         * Authority identityProvider.
                         * @member {string} identityProvider
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @instance
                         */
                        Authority.prototype.identityProvider = "";
    
                        /**
                         * Authority oidcJwks.
                         * @member {Uint8Array} oidcJwks
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @instance
                         */
                        Authority.prototype.oidcJwks = $util.newBuffer([]);
    
                        /**
                         * Creates a new Authority instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IAuthority=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.Authority} Authority instance
                         */
                        Authority.create = function create(properties) {
                            return new Authority(properties);
                        };
    
                        /**
                         * Encodes the specified Authority message. Does not implicitly {@link google.cloud.gkehub.v1beta1.Authority.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IAuthority} message Authority message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Authority.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.issuer != null && Object.hasOwnProperty.call(message, "issuer"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.issuer);
                            if (message.workloadIdentityPool != null && Object.hasOwnProperty.call(message, "workloadIdentityPool"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.workloadIdentityPool);
                            if (message.identityProvider != null && Object.hasOwnProperty.call(message, "identityProvider"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.identityProvider);
                            if (message.oidcJwks != null && Object.hasOwnProperty.call(message, "oidcJwks"))
                                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.oidcJwks);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified Authority message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.Authority.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IAuthority} message Authority message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Authority.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an Authority message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.Authority} Authority
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Authority.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.Authority();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.issuer = reader.string();
                                    break;
                                case 2:
                                    message.workloadIdentityPool = reader.string();
                                    break;
                                case 3:
                                    message.identityProvider = reader.string();
                                    break;
                                case 4:
                                    message.oidcJwks = reader.bytes();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an Authority message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.Authority} Authority
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Authority.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an Authority message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Authority.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.issuer != null && message.hasOwnProperty("issuer"))
                                if (!$util.isString(message.issuer))
                                    return "issuer: string expected";
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                if (!$util.isString(message.workloadIdentityPool))
                                    return "workloadIdentityPool: string expected";
                            if (message.identityProvider != null && message.hasOwnProperty("identityProvider"))
                                if (!$util.isString(message.identityProvider))
                                    return "identityProvider: string expected";
                            if (message.oidcJwks != null && message.hasOwnProperty("oidcJwks"))
                                if (!(message.oidcJwks && typeof message.oidcJwks.length === "number" || $util.isString(message.oidcJwks)))
                                    return "oidcJwks: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates an Authority message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.Authority} Authority
                         */
                        Authority.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.Authority)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.Authority();
                            if (object.issuer != null)
                                message.issuer = String(object.issuer);
                            if (object.workloadIdentityPool != null)
                                message.workloadIdentityPool = String(object.workloadIdentityPool);
                            if (object.identityProvider != null)
                                message.identityProvider = String(object.identityProvider);
                            if (object.oidcJwks != null)
                                if (typeof object.oidcJwks === "string")
                                    $util.base64.decode(object.oidcJwks, message.oidcJwks = $util.newBuffer($util.base64.length(object.oidcJwks)), 0);
                                else if (object.oidcJwks.length)
                                    message.oidcJwks = object.oidcJwks;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an Authority message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.Authority} message Authority
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Authority.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.issuer = "";
                                object.workloadIdentityPool = "";
                                object.identityProvider = "";
                                if (options.bytes === String)
                                    object.oidcJwks = "";
                                else {
                                    object.oidcJwks = [];
                                    if (options.bytes !== Array)
                                        object.oidcJwks = $util.newBuffer(object.oidcJwks);
                                }
                            }
                            if (message.issuer != null && message.hasOwnProperty("issuer"))
                                object.issuer = message.issuer;
                            if (message.workloadIdentityPool != null && message.hasOwnProperty("workloadIdentityPool"))
                                object.workloadIdentityPool = message.workloadIdentityPool;
                            if (message.identityProvider != null && message.hasOwnProperty("identityProvider"))
                                object.identityProvider = message.identityProvider;
                            if (message.oidcJwks != null && message.hasOwnProperty("oidcJwks"))
                                object.oidcJwks = options.bytes === String ? $util.base64.encode(message.oidcJwks, 0, message.oidcJwks.length) : options.bytes === Array ? Array.prototype.slice.call(message.oidcJwks) : message.oidcJwks;
                            return object;
                        };
    
                        /**
                         * Converts this Authority to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.Authority
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Authority.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return Authority;
                    })();
    
                    v1beta1.MembershipState = (function() {
    
                        /**
                         * Properties of a MembershipState.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IMembershipState
                         * @property {google.cloud.gkehub.v1beta1.MembershipState.Code|null} [code] MembershipState code
                         * @property {string|null} [description] MembershipState description
                         * @property {google.protobuf.ITimestamp|null} [updateTime] MembershipState updateTime
                         */
    
                        /**
                         * Constructs a new MembershipState.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a MembershipState.
                         * @implements IMembershipState
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IMembershipState=} [properties] Properties to set
                         */
                        function MembershipState(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * MembershipState code.
                         * @member {google.cloud.gkehub.v1beta1.MembershipState.Code} code
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @instance
                         */
                        MembershipState.prototype.code = 0;
    
                        /**
                         * MembershipState description.
                         * @member {string} description
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @instance
                         */
                        MembershipState.prototype.description = "";
    
                        /**
                         * MembershipState updateTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} updateTime
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @instance
                         */
                        MembershipState.prototype.updateTime = null;
    
                        /**
                         * Creates a new MembershipState instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembershipState=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.MembershipState} MembershipState instance
                         */
                        MembershipState.create = function create(properties) {
                            return new MembershipState(properties);
                        };
    
                        /**
                         * Encodes the specified MembershipState message. Does not implicitly {@link google.cloud.gkehub.v1beta1.MembershipState.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembershipState} message MembershipState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipState.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                            if (message.description != null && Object.hasOwnProperty.call(message, "description"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);
                            if (message.updateTime != null && Object.hasOwnProperty.call(message, "updateTime"))
                                $root.google.protobuf.Timestamp.encode(message.updateTime, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified MembershipState message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.MembershipState.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IMembershipState} message MembershipState message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        MembershipState.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a MembershipState message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.MembershipState} MembershipState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipState.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.MembershipState();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.code = reader.int32();
                                    break;
                                case 2:
                                    message.description = reader.string();
                                    break;
                                case 3:
                                    message.updateTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a MembershipState message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.MembershipState} MembershipState
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        MembershipState.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a MembershipState message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        MembershipState.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.code != null && message.hasOwnProperty("code"))
                                switch (message.code) {
                                default:
                                    return "code: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                case 5:
                                    break;
                                }
                            if (message.description != null && message.hasOwnProperty("description"))
                                if (!$util.isString(message.description))
                                    return "description: string expected";
                            if (message.updateTime != null && message.hasOwnProperty("updateTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.updateTime);
                                if (error)
                                    return "updateTime." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a MembershipState message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.MembershipState} MembershipState
                         */
                        MembershipState.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.MembershipState)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.MembershipState();
                            switch (object.code) {
                            case "CODE_UNSPECIFIED":
                            case 0:
                                message.code = 0;
                                break;
                            case "CREATING":
                            case 1:
                                message.code = 1;
                                break;
                            case "READY":
                            case 2:
                                message.code = 2;
                                break;
                            case "DELETING":
                            case 3:
                                message.code = 3;
                                break;
                            case "UPDATING":
                            case 4:
                                message.code = 4;
                                break;
                            case "SERVICE_UPDATING":
                            case 5:
                                message.code = 5;
                                break;
                            }
                            if (object.description != null)
                                message.description = String(object.description);
                            if (object.updateTime != null) {
                                if (typeof object.updateTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.MembershipState.updateTime: object expected");
                                message.updateTime = $root.google.protobuf.Timestamp.fromObject(object.updateTime);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a MembershipState message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.MembershipState} message MembershipState
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        MembershipState.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.code = options.enums === String ? "CODE_UNSPECIFIED" : 0;
                                object.description = "";
                                object.updateTime = null;
                            }
                            if (message.code != null && message.hasOwnProperty("code"))
                                object.code = options.enums === String ? $root.google.cloud.gkehub.v1beta1.MembershipState.Code[message.code] : message.code;
                            if (message.description != null && message.hasOwnProperty("description"))
                                object.description = message.description;
                            if (message.updateTime != null && message.hasOwnProperty("updateTime"))
                                object.updateTime = $root.google.protobuf.Timestamp.toObject(message.updateTime, options);
                            return object;
                        };
    
                        /**
                         * Converts this MembershipState to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.MembershipState
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        MembershipState.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        /**
                         * Code enum.
                         * @name google.cloud.gkehub.v1beta1.MembershipState.Code
                         * @enum {number}
                         * @property {number} CODE_UNSPECIFIED=0 CODE_UNSPECIFIED value
                         * @property {number} CREATING=1 CREATING value
                         * @property {number} READY=2 READY value
                         * @property {number} DELETING=3 DELETING value
                         * @property {number} UPDATING=4 UPDATING value
                         * @property {number} SERVICE_UPDATING=5 SERVICE_UPDATING value
                         */
                        MembershipState.Code = (function() {
                            var valuesById = {}, values = Object.create(valuesById);
                            values[valuesById[0] = "CODE_UNSPECIFIED"] = 0;
                            values[valuesById[1] = "CREATING"] = 1;
                            values[valuesById[2] = "READY"] = 2;
                            values[valuesById[3] = "DELETING"] = 3;
                            values[valuesById[4] = "UPDATING"] = 4;
                            values[valuesById[5] = "SERVICE_UPDATING"] = 5;
                            return values;
                        })();
    
                        return MembershipState;
                    })();
    
                    v1beta1.ListMembershipsRequest = (function() {
    
                        /**
                         * Properties of a ListMembershipsRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IListMembershipsRequest
                         * @property {string|null} [parent] ListMembershipsRequest parent
                         * @property {number|null} [pageSize] ListMembershipsRequest pageSize
                         * @property {string|null} [pageToken] ListMembershipsRequest pageToken
                         * @property {string|null} [filter] ListMembershipsRequest filter
                         * @property {string|null} [orderBy] ListMembershipsRequest orderBy
                         */
    
                        /**
                         * Constructs a new ListMembershipsRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ListMembershipsRequest.
                         * @implements IListMembershipsRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsRequest=} [properties] Properties to set
                         */
                        function ListMembershipsRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMembershipsRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.parent = "";
    
                        /**
                         * ListMembershipsRequest pageSize.
                         * @member {number} pageSize
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.pageSize = 0;
    
                        /**
                         * ListMembershipsRequest pageToken.
                         * @member {string} pageToken
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.pageToken = "";
    
                        /**
                         * ListMembershipsRequest filter.
                         * @member {string} filter
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.filter = "";
    
                        /**
                         * ListMembershipsRequest orderBy.
                         * @member {string} orderBy
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @instance
                         */
                        ListMembershipsRequest.prototype.orderBy = "";
    
                        /**
                         * Creates a new ListMembershipsRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsRequest} ListMembershipsRequest instance
                         */
                        ListMembershipsRequest.create = function create(properties) {
                            return new ListMembershipsRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ListMembershipsRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ListMembershipsRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsRequest} message ListMembershipsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                            if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                            if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.filter);
                            if (message.orderBy != null && Object.hasOwnProperty.call(message, "orderBy"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.orderBy);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMembershipsRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ListMembershipsRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsRequest} message ListMembershipsRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMembershipsRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsRequest} ListMembershipsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ListMembershipsRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.pageSize = reader.int32();
                                    break;
                                case 3:
                                    message.pageToken = reader.string();
                                    break;
                                case 4:
                                    message.filter = reader.string();
                                    break;
                                case 5:
                                    message.orderBy = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMembershipsRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsRequest} ListMembershipsRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMembershipsRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMembershipsRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                if (!$util.isInteger(message.pageSize))
                                    return "pageSize: integer expected";
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                if (!$util.isString(message.pageToken))
                                    return "pageToken: string expected";
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                if (!$util.isString(message.filter))
                                    return "filter: string expected";
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                if (!$util.isString(message.orderBy))
                                    return "orderBy: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ListMembershipsRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsRequest} ListMembershipsRequest
                         */
                        ListMembershipsRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ListMembershipsRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ListMembershipsRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.pageSize != null)
                                message.pageSize = object.pageSize | 0;
                            if (object.pageToken != null)
                                message.pageToken = String(object.pageToken);
                            if (object.filter != null)
                                message.filter = String(object.filter);
                            if (object.orderBy != null)
                                message.orderBy = String(object.orderBy);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMembershipsRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ListMembershipsRequest} message ListMembershipsRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMembershipsRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.pageSize = 0;
                                object.pageToken = "";
                                object.filter = "";
                                object.orderBy = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                                object.pageSize = message.pageSize;
                            if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                                object.pageToken = message.pageToken;
                            if (message.filter != null && message.hasOwnProperty("filter"))
                                object.filter = message.filter;
                            if (message.orderBy != null && message.hasOwnProperty("orderBy"))
                                object.orderBy = message.orderBy;
                            return object;
                        };
    
                        /**
                         * Converts this ListMembershipsRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMembershipsRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListMembershipsRequest;
                    })();
    
                    v1beta1.ListMembershipsResponse = (function() {
    
                        /**
                         * Properties of a ListMembershipsResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IListMembershipsResponse
                         * @property {Array.<google.cloud.gkehub.v1beta1.IMembership>|null} [resources] ListMembershipsResponse resources
                         * @property {string|null} [nextPageToken] ListMembershipsResponse nextPageToken
                         * @property {Array.<string>|null} [unreachable] ListMembershipsResponse unreachable
                         */
    
                        /**
                         * Constructs a new ListMembershipsResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ListMembershipsResponse.
                         * @implements IListMembershipsResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsResponse=} [properties] Properties to set
                         */
                        function ListMembershipsResponse(properties) {
                            this.resources = [];
                            this.unreachable = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ListMembershipsResponse resources.
                         * @member {Array.<google.cloud.gkehub.v1beta1.IMembership>} resources
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.resources = $util.emptyArray;
    
                        /**
                         * ListMembershipsResponse nextPageToken.
                         * @member {string} nextPageToken
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.nextPageToken = "";
    
                        /**
                         * ListMembershipsResponse unreachable.
                         * @member {Array.<string>} unreachable
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @instance
                         */
                        ListMembershipsResponse.prototype.unreachable = $util.emptyArray;
    
                        /**
                         * Creates a new ListMembershipsResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsResponse} ListMembershipsResponse instance
                         */
                        ListMembershipsResponse.create = function create(properties) {
                            return new ListMembershipsResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ListMembershipsResponse message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ListMembershipsResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsResponse} message ListMembershipsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.resources != null && message.resources.length)
                                for (var i = 0; i < message.resources.length; ++i)
                                    $root.google.cloud.gkehub.v1beta1.Membership.encode(message.resources[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                            if (message.unreachable != null && message.unreachable.length)
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.unreachable[i]);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ListMembershipsResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ListMembershipsResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IListMembershipsResponse} message ListMembershipsResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ListMembershipsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ListMembershipsResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsResponse} ListMembershipsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ListMembershipsResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.resources && message.resources.length))
                                        message.resources = [];
                                    message.resources.push($root.google.cloud.gkehub.v1beta1.Membership.decode(reader, reader.uint32()));
                                    break;
                                case 2:
                                    message.nextPageToken = reader.string();
                                    break;
                                case 3:
                                    if (!(message.unreachable && message.unreachable.length))
                                        message.unreachable = [];
                                    message.unreachable.push(reader.string());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ListMembershipsResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsResponse} ListMembershipsResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ListMembershipsResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ListMembershipsResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ListMembershipsResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.resources != null && message.hasOwnProperty("resources")) {
                                if (!Array.isArray(message.resources))
                                    return "resources: array expected";
                                for (var i = 0; i < message.resources.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta1.Membership.verify(message.resources[i]);
                                    if (error)
                                        return "resources." + error;
                                }
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                if (!$util.isString(message.nextPageToken))
                                    return "nextPageToken: string expected";
                            if (message.unreachable != null && message.hasOwnProperty("unreachable")) {
                                if (!Array.isArray(message.unreachable))
                                    return "unreachable: array expected";
                                for (var i = 0; i < message.unreachable.length; ++i)
                                    if (!$util.isString(message.unreachable[i]))
                                        return "unreachable: string[] expected";
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ListMembershipsResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ListMembershipsResponse} ListMembershipsResponse
                         */
                        ListMembershipsResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ListMembershipsResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ListMembershipsResponse();
                            if (object.resources) {
                                if (!Array.isArray(object.resources))
                                    throw TypeError(".google.cloud.gkehub.v1beta1.ListMembershipsResponse.resources: array expected");
                                message.resources = [];
                                for (var i = 0; i < object.resources.length; ++i) {
                                    if (typeof object.resources[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta1.ListMembershipsResponse.resources: object expected");
                                    message.resources[i] = $root.google.cloud.gkehub.v1beta1.Membership.fromObject(object.resources[i]);
                                }
                            }
                            if (object.nextPageToken != null)
                                message.nextPageToken = String(object.nextPageToken);
                            if (object.unreachable) {
                                if (!Array.isArray(object.unreachable))
                                    throw TypeError(".google.cloud.gkehub.v1beta1.ListMembershipsResponse.unreachable: array expected");
                                message.unreachable = [];
                                for (var i = 0; i < object.unreachable.length; ++i)
                                    message.unreachable[i] = String(object.unreachable[i]);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ListMembershipsResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ListMembershipsResponse} message ListMembershipsResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ListMembershipsResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.resources = [];
                                object.unreachable = [];
                            }
                            if (options.defaults)
                                object.nextPageToken = "";
                            if (message.resources && message.resources.length) {
                                object.resources = [];
                                for (var j = 0; j < message.resources.length; ++j)
                                    object.resources[j] = $root.google.cloud.gkehub.v1beta1.Membership.toObject(message.resources[j], options);
                            }
                            if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                                object.nextPageToken = message.nextPageToken;
                            if (message.unreachable && message.unreachable.length) {
                                object.unreachable = [];
                                for (var j = 0; j < message.unreachable.length; ++j)
                                    object.unreachable[j] = message.unreachable[j];
                            }
                            return object;
                        };
    
                        /**
                         * Converts this ListMembershipsResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ListMembershipsResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ListMembershipsResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ListMembershipsResponse;
                    })();
    
                    v1beta1.GetMembershipRequest = (function() {
    
                        /**
                         * Properties of a GetMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IGetMembershipRequest
                         * @property {string|null} [name] GetMembershipRequest name
                         */
    
                        /**
                         * Constructs a new GetMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GetMembershipRequest.
                         * @implements IGetMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IGetMembershipRequest=} [properties] Properties to set
                         */
                        function GetMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GetMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @instance
                         */
                        GetMembershipRequest.prototype.name = "";
    
                        /**
                         * Creates a new GetMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGetMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.GetMembershipRequest} GetMembershipRequest instance
                         */
                        GetMembershipRequest.create = function create(properties) {
                            return new GetMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GetMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.GetMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGetMembershipRequest} message GetMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GetMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.GetMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGetMembershipRequest} message GetMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GetMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GetMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.GetMembershipRequest} GetMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.GetMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GetMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.GetMembershipRequest} GetMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GetMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GetMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GetMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GetMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.GetMembershipRequest} GetMembershipRequest
                         */
                        GetMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.GetMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.GetMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GetMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.GetMembershipRequest} message GetMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GetMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.name = "";
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            return object;
                        };
    
                        /**
                         * Converts this GetMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.GetMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GetMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GetMembershipRequest;
                    })();
    
                    v1beta1.CreateMembershipRequest = (function() {
    
                        /**
                         * Properties of a CreateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface ICreateMembershipRequest
                         * @property {string|null} [parent] CreateMembershipRequest parent
                         * @property {string|null} [membershipId] CreateMembershipRequest membershipId
                         * @property {google.cloud.gkehub.v1beta1.IMembership|null} [resource] CreateMembershipRequest resource
                         * @property {string|null} [requestId] CreateMembershipRequest requestId
                         */
    
                        /**
                         * Constructs a new CreateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a CreateMembershipRequest.
                         * @implements ICreateMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.ICreateMembershipRequest=} [properties] Properties to set
                         */
                        function CreateMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * CreateMembershipRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.parent = "";
    
                        /**
                         * CreateMembershipRequest membershipId.
                         * @member {string} membershipId
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.membershipId = "";
    
                        /**
                         * CreateMembershipRequest resource.
                         * @member {google.cloud.gkehub.v1beta1.IMembership|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.resource = null;
    
                        /**
                         * CreateMembershipRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @instance
                         */
                        CreateMembershipRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new CreateMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ICreateMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.CreateMembershipRequest} CreateMembershipRequest instance
                         */
                        CreateMembershipRequest.create = function create(properties) {
                            return new CreateMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified CreateMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.CreateMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ICreateMembershipRequest} message CreateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.membershipId != null && Object.hasOwnProperty.call(message, "membershipId"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.membershipId);
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1beta1.Membership.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified CreateMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.CreateMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ICreateMembershipRequest} message CreateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CreateMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a CreateMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.CreateMembershipRequest} CreateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.CreateMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.membershipId = reader.string();
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1beta1.Membership.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a CreateMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.CreateMembershipRequest} CreateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CreateMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a CreateMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CreateMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.membershipId != null && message.hasOwnProperty("membershipId"))
                                if (!$util.isString(message.membershipId))
                                    return "membershipId: string expected";
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1beta1.Membership.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a CreateMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.CreateMembershipRequest} CreateMembershipRequest
                         */
                        CreateMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.CreateMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.CreateMembershipRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.membershipId != null)
                                message.membershipId = String(object.membershipId);
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.CreateMembershipRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1beta1.Membership.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a CreateMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.CreateMembershipRequest} message CreateMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CreateMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.membershipId = "";
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.membershipId != null && message.hasOwnProperty("membershipId"))
                                object.membershipId = message.membershipId;
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1beta1.Membership.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this CreateMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.CreateMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CreateMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return CreateMembershipRequest;
                    })();
    
                    v1beta1.DeleteMembershipRequest = (function() {
    
                        /**
                         * Properties of a DeleteMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IDeleteMembershipRequest
                         * @property {string|null} [name] DeleteMembershipRequest name
                         * @property {string|null} [requestId] DeleteMembershipRequest requestId
                         */
    
                        /**
                         * Constructs a new DeleteMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a DeleteMembershipRequest.
                         * @implements IDeleteMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IDeleteMembershipRequest=} [properties] Properties to set
                         */
                        function DeleteMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * DeleteMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @instance
                         */
                        DeleteMembershipRequest.prototype.name = "";
    
                        /**
                         * DeleteMembershipRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @instance
                         */
                        DeleteMembershipRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new DeleteMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IDeleteMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.DeleteMembershipRequest} DeleteMembershipRequest instance
                         */
                        DeleteMembershipRequest.create = function create(properties) {
                            return new DeleteMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified DeleteMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.DeleteMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IDeleteMembershipRequest} message DeleteMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified DeleteMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.DeleteMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IDeleteMembershipRequest} message DeleteMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DeleteMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a DeleteMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.DeleteMembershipRequest} DeleteMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.DeleteMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a DeleteMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.DeleteMembershipRequest} DeleteMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DeleteMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a DeleteMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DeleteMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a DeleteMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.DeleteMembershipRequest} DeleteMembershipRequest
                         */
                        DeleteMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.DeleteMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.DeleteMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a DeleteMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.DeleteMembershipRequest} message DeleteMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DeleteMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this DeleteMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.DeleteMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DeleteMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return DeleteMembershipRequest;
                    })();
    
                    v1beta1.UpdateMembershipRequest = (function() {
    
                        /**
                         * Properties of an UpdateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IUpdateMembershipRequest
                         * @property {string|null} [name] UpdateMembershipRequest name
                         * @property {google.protobuf.IFieldMask|null} [updateMask] UpdateMembershipRequest updateMask
                         * @property {google.cloud.gkehub.v1beta1.IMembership|null} [resource] UpdateMembershipRequest resource
                         * @property {string|null} [requestId] UpdateMembershipRequest requestId
                         */
    
                        /**
                         * Constructs a new UpdateMembershipRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents an UpdateMembershipRequest.
                         * @implements IUpdateMembershipRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IUpdateMembershipRequest=} [properties] Properties to set
                         */
                        function UpdateMembershipRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * UpdateMembershipRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.name = "";
    
                        /**
                         * UpdateMembershipRequest updateMask.
                         * @member {google.protobuf.IFieldMask|null|undefined} updateMask
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.updateMask = null;
    
                        /**
                         * UpdateMembershipRequest resource.
                         * @member {google.cloud.gkehub.v1beta1.IMembership|null|undefined} resource
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.resource = null;
    
                        /**
                         * UpdateMembershipRequest requestId.
                         * @member {string} requestId
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @instance
                         */
                        UpdateMembershipRequest.prototype.requestId = "";
    
                        /**
                         * Creates a new UpdateMembershipRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IUpdateMembershipRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.UpdateMembershipRequest} UpdateMembershipRequest instance
                         */
                        UpdateMembershipRequest.create = function create(properties) {
                            return new UpdateMembershipRequest(properties);
                        };
    
                        /**
                         * Encodes the specified UpdateMembershipRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.UpdateMembershipRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IUpdateMembershipRequest} message UpdateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMembershipRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.updateMask != null && Object.hasOwnProperty.call(message, "updateMask"))
                                $root.google.protobuf.FieldMask.encode(message.updateMask, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.resource != null && Object.hasOwnProperty.call(message, "resource"))
                                $root.google.cloud.gkehub.v1beta1.Membership.encode(message.resource, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.requestId != null && Object.hasOwnProperty.call(message, "requestId"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.requestId);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified UpdateMembershipRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.UpdateMembershipRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IUpdateMembershipRequest} message UpdateMembershipRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UpdateMembershipRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an UpdateMembershipRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.UpdateMembershipRequest} UpdateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMembershipRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.UpdateMembershipRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.updateMask = $root.google.protobuf.FieldMask.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.resource = $root.google.cloud.gkehub.v1beta1.Membership.decode(reader, reader.uint32());
                                    break;
                                case 4:
                                    message.requestId = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an UpdateMembershipRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.UpdateMembershipRequest} UpdateMembershipRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UpdateMembershipRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an UpdateMembershipRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UpdateMembershipRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.updateMask != null && message.hasOwnProperty("updateMask")) {
                                var error = $root.google.protobuf.FieldMask.verify(message.updateMask);
                                if (error)
                                    return "updateMask." + error;
                            }
                            if (message.resource != null && message.hasOwnProperty("resource")) {
                                var error = $root.google.cloud.gkehub.v1beta1.Membership.verify(message.resource);
                                if (error)
                                    return "resource." + error;
                            }
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                if (!$util.isString(message.requestId))
                                    return "requestId: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an UpdateMembershipRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.UpdateMembershipRequest} UpdateMembershipRequest
                         */
                        UpdateMembershipRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.UpdateMembershipRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.UpdateMembershipRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.updateMask != null) {
                                if (typeof object.updateMask !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.UpdateMembershipRequest.updateMask: object expected");
                                message.updateMask = $root.google.protobuf.FieldMask.fromObject(object.updateMask);
                            }
                            if (object.resource != null) {
                                if (typeof object.resource !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.UpdateMembershipRequest.resource: object expected");
                                message.resource = $root.google.cloud.gkehub.v1beta1.Membership.fromObject(object.resource);
                            }
                            if (object.requestId != null)
                                message.requestId = String(object.requestId);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an UpdateMembershipRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.UpdateMembershipRequest} message UpdateMembershipRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UpdateMembershipRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.updateMask = null;
                                object.resource = null;
                                object.requestId = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.updateMask != null && message.hasOwnProperty("updateMask"))
                                object.updateMask = $root.google.protobuf.FieldMask.toObject(message.updateMask, options);
                            if (message.resource != null && message.hasOwnProperty("resource"))
                                object.resource = $root.google.cloud.gkehub.v1beta1.Membership.toObject(message.resource, options);
                            if (message.requestId != null && message.hasOwnProperty("requestId"))
                                object.requestId = message.requestId;
                            return object;
                        };
    
                        /**
                         * Converts this UpdateMembershipRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.UpdateMembershipRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UpdateMembershipRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return UpdateMembershipRequest;
                    })();
    
                    v1beta1.GenerateConnectManifestRequest = (function() {
    
                        /**
                         * Properties of a GenerateConnectManifestRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IGenerateConnectManifestRequest
                         * @property {string|null} [name] GenerateConnectManifestRequest name
                         * @property {google.cloud.gkehub.v1beta1.IConnectAgent|null} [connectAgent] GenerateConnectManifestRequest connectAgent
                         * @property {string|null} [version] GenerateConnectManifestRequest version
                         * @property {boolean|null} [isUpgrade] GenerateConnectManifestRequest isUpgrade
                         * @property {string|null} [registry] GenerateConnectManifestRequest registry
                         * @property {Uint8Array|null} [imagePullSecretContent] GenerateConnectManifestRequest imagePullSecretContent
                         */
    
                        /**
                         * Constructs a new GenerateConnectManifestRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GenerateConnectManifestRequest.
                         * @implements IGenerateConnectManifestRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestRequest=} [properties] Properties to set
                         */
                        function GenerateConnectManifestRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateConnectManifestRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.name = "";
    
                        /**
                         * GenerateConnectManifestRequest connectAgent.
                         * @member {google.cloud.gkehub.v1beta1.IConnectAgent|null|undefined} connectAgent
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.connectAgent = null;
    
                        /**
                         * GenerateConnectManifestRequest version.
                         * @member {string} version
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.version = "";
    
                        /**
                         * GenerateConnectManifestRequest isUpgrade.
                         * @member {boolean} isUpgrade
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.isUpgrade = false;
    
                        /**
                         * GenerateConnectManifestRequest registry.
                         * @member {string} registry
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.registry = "";
    
                        /**
                         * GenerateConnectManifestRequest imagePullSecretContent.
                         * @member {Uint8Array} imagePullSecretContent
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         */
                        GenerateConnectManifestRequest.prototype.imagePullSecretContent = $util.newBuffer([]);
    
                        /**
                         * Creates a new GenerateConnectManifestRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest} GenerateConnectManifestRequest instance
                         */
                        GenerateConnectManifestRequest.create = function create(properties) {
                            return new GenerateConnectManifestRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestRequest} message GenerateConnectManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.connectAgent != null && Object.hasOwnProperty.call(message, "connectAgent"))
                                $root.google.cloud.gkehub.v1beta1.ConnectAgent.encode(message.connectAgent, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.version != null && Object.hasOwnProperty.call(message, "version"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.version);
                            if (message.isUpgrade != null && Object.hasOwnProperty.call(message, "isUpgrade"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.isUpgrade);
                            if (message.registry != null && Object.hasOwnProperty.call(message, "registry"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.registry);
                            if (message.imagePullSecretContent != null && Object.hasOwnProperty.call(message, "imagePullSecretContent"))
                                writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.imagePullSecretContent);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestRequest} message GenerateConnectManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.connectAgent = $root.google.cloud.gkehub.v1beta1.ConnectAgent.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.version = reader.string();
                                    break;
                                case 4:
                                    message.isUpgrade = reader.bool();
                                    break;
                                case 5:
                                    message.registry = reader.string();
                                    break;
                                case 6:
                                    message.imagePullSecretContent = reader.bytes();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateConnectManifestRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateConnectManifestRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.connectAgent != null && message.hasOwnProperty("connectAgent")) {
                                var error = $root.google.cloud.gkehub.v1beta1.ConnectAgent.verify(message.connectAgent);
                                if (error)
                                    return "connectAgent." + error;
                            }
                            if (message.version != null && message.hasOwnProperty("version"))
                                if (!$util.isString(message.version))
                                    return "version: string expected";
                            if (message.isUpgrade != null && message.hasOwnProperty("isUpgrade"))
                                if (typeof message.isUpgrade !== "boolean")
                                    return "isUpgrade: boolean expected";
                            if (message.registry != null && message.hasOwnProperty("registry"))
                                if (!$util.isString(message.registry))
                                    return "registry: string expected";
                            if (message.imagePullSecretContent != null && message.hasOwnProperty("imagePullSecretContent"))
                                if (!(message.imagePullSecretContent && typeof message.imagePullSecretContent.length === "number" || $util.isString(message.imagePullSecretContent)))
                                    return "imagePullSecretContent: buffer expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateConnectManifestRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest} GenerateConnectManifestRequest
                         */
                        GenerateConnectManifestRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.connectAgent != null) {
                                if (typeof object.connectAgent !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest.connectAgent: object expected");
                                message.connectAgent = $root.google.cloud.gkehub.v1beta1.ConnectAgent.fromObject(object.connectAgent);
                            }
                            if (object.version != null)
                                message.version = String(object.version);
                            if (object.isUpgrade != null)
                                message.isUpgrade = Boolean(object.isUpgrade);
                            if (object.registry != null)
                                message.registry = String(object.registry);
                            if (object.imagePullSecretContent != null)
                                if (typeof object.imagePullSecretContent === "string")
                                    $util.base64.decode(object.imagePullSecretContent, message.imagePullSecretContent = $util.newBuffer($util.base64.length(object.imagePullSecretContent)), 0);
                                else if (object.imagePullSecretContent.length)
                                    message.imagePullSecretContent = object.imagePullSecretContent;
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateConnectManifestRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest} message GenerateConnectManifestRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateConnectManifestRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.connectAgent = null;
                                object.version = "";
                                object.isUpgrade = false;
                                object.registry = "";
                                if (options.bytes === String)
                                    object.imagePullSecretContent = "";
                                else {
                                    object.imagePullSecretContent = [];
                                    if (options.bytes !== Array)
                                        object.imagePullSecretContent = $util.newBuffer(object.imagePullSecretContent);
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.connectAgent != null && message.hasOwnProperty("connectAgent"))
                                object.connectAgent = $root.google.cloud.gkehub.v1beta1.ConnectAgent.toObject(message.connectAgent, options);
                            if (message.version != null && message.hasOwnProperty("version"))
                                object.version = message.version;
                            if (message.isUpgrade != null && message.hasOwnProperty("isUpgrade"))
                                object.isUpgrade = message.isUpgrade;
                            if (message.registry != null && message.hasOwnProperty("registry"))
                                object.registry = message.registry;
                            if (message.imagePullSecretContent != null && message.hasOwnProperty("imagePullSecretContent"))
                                object.imagePullSecretContent = options.bytes === String ? $util.base64.encode(message.imagePullSecretContent, 0, message.imagePullSecretContent.length) : options.bytes === Array ? Array.prototype.slice.call(message.imagePullSecretContent) : message.imagePullSecretContent;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateConnectManifestRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateConnectManifestRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateConnectManifestRequest;
                    })();
    
                    v1beta1.GenerateConnectManifestResponse = (function() {
    
                        /**
                         * Properties of a GenerateConnectManifestResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IGenerateConnectManifestResponse
                         * @property {Array.<google.cloud.gkehub.v1beta1.IConnectAgentResource>|null} [manifest] GenerateConnectManifestResponse manifest
                         */
    
                        /**
                         * Constructs a new GenerateConnectManifestResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GenerateConnectManifestResponse.
                         * @implements IGenerateConnectManifestResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestResponse=} [properties] Properties to set
                         */
                        function GenerateConnectManifestResponse(properties) {
                            this.manifest = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateConnectManifestResponse manifest.
                         * @member {Array.<google.cloud.gkehub.v1beta1.IConnectAgentResource>} manifest
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @instance
                         */
                        GenerateConnectManifestResponse.prototype.manifest = $util.emptyArray;
    
                        /**
                         * Creates a new GenerateConnectManifestResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse} GenerateConnectManifestResponse instance
                         */
                        GenerateConnectManifestResponse.create = function create(properties) {
                            return new GenerateConnectManifestResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestResponse message. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestResponse} message GenerateConnectManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.manifest != null && message.manifest.length)
                                for (var i = 0; i < message.manifest.length; ++i)
                                    $root.google.cloud.gkehub.v1beta1.ConnectAgentResource.encode(message.manifest[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateConnectManifestResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateConnectManifestResponse} message GenerateConnectManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateConnectManifestResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    if (!(message.manifest && message.manifest.length))
                                        message.manifest = [];
                                    message.manifest.push($root.google.cloud.gkehub.v1beta1.ConnectAgentResource.decode(reader, reader.uint32()));
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateConnectManifestResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateConnectManifestResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateConnectManifestResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateConnectManifestResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.manifest != null && message.hasOwnProperty("manifest")) {
                                if (!Array.isArray(message.manifest))
                                    return "manifest: array expected";
                                for (var i = 0; i < message.manifest.length; ++i) {
                                    var error = $root.google.cloud.gkehub.v1beta1.ConnectAgentResource.verify(message.manifest[i]);
                                    if (error)
                                        return "manifest." + error;
                                }
                            }
                            return null;
                        };
    
                        /**
                         * Creates a GenerateConnectManifestResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse} GenerateConnectManifestResponse
                         */
                        GenerateConnectManifestResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse();
                            if (object.manifest) {
                                if (!Array.isArray(object.manifest))
                                    throw TypeError(".google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse.manifest: array expected");
                                message.manifest = [];
                                for (var i = 0; i < object.manifest.length; ++i) {
                                    if (typeof object.manifest[i] !== "object")
                                        throw TypeError(".google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse.manifest: object expected");
                                    message.manifest[i] = $root.google.cloud.gkehub.v1beta1.ConnectAgentResource.fromObject(object.manifest[i]);
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateConnectManifestResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse} message GenerateConnectManifestResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateConnectManifestResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.manifest = [];
                            if (message.manifest && message.manifest.length) {
                                object.manifest = [];
                                for (var j = 0; j < message.manifest.length; ++j)
                                    object.manifest[j] = $root.google.cloud.gkehub.v1beta1.ConnectAgentResource.toObject(message.manifest[j], options);
                            }
                            return object;
                        };
    
                        /**
                         * Converts this GenerateConnectManifestResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.GenerateConnectManifestResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateConnectManifestResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateConnectManifestResponse;
                    })();
    
                    v1beta1.ConnectAgentResource = (function() {
    
                        /**
                         * Properties of a ConnectAgentResource.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IConnectAgentResource
                         * @property {google.cloud.gkehub.v1beta1.ITypeMeta|null} [type] ConnectAgentResource type
                         * @property {string|null} [manifest] ConnectAgentResource manifest
                         */
    
                        /**
                         * Constructs a new ConnectAgentResource.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ConnectAgentResource.
                         * @implements IConnectAgentResource
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgentResource=} [properties] Properties to set
                         */
                        function ConnectAgentResource(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConnectAgentResource type.
                         * @member {google.cloud.gkehub.v1beta1.ITypeMeta|null|undefined} type
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @instance
                         */
                        ConnectAgentResource.prototype.type = null;
    
                        /**
                         * ConnectAgentResource manifest.
                         * @member {string} manifest
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @instance
                         */
                        ConnectAgentResource.prototype.manifest = "";
    
                        /**
                         * Creates a new ConnectAgentResource instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgentResource=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgentResource} ConnectAgentResource instance
                         */
                        ConnectAgentResource.create = function create(properties) {
                            return new ConnectAgentResource(properties);
                        };
    
                        /**
                         * Encodes the specified ConnectAgentResource message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ConnectAgentResource.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgentResource} message ConnectAgentResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgentResource.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                $root.google.cloud.gkehub.v1beta1.TypeMeta.encode(message.type, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.manifest != null && Object.hasOwnProperty.call(message, "manifest"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.manifest);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConnectAgentResource message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ConnectAgentResource.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgentResource} message ConnectAgentResource message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgentResource.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConnectAgentResource message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgentResource} ConnectAgentResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgentResource.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ConnectAgentResource();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.type = $root.google.cloud.gkehub.v1beta1.TypeMeta.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.manifest = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConnectAgentResource message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgentResource} ConnectAgentResource
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgentResource.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConnectAgentResource message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConnectAgentResource.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.type != null && message.hasOwnProperty("type")) {
                                var error = $root.google.cloud.gkehub.v1beta1.TypeMeta.verify(message.type);
                                if (error)
                                    return "type." + error;
                            }
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                if (!$util.isString(message.manifest))
                                    return "manifest: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConnectAgentResource message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgentResource} ConnectAgentResource
                         */
                        ConnectAgentResource.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ConnectAgentResource)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ConnectAgentResource();
                            if (object.type != null) {
                                if (typeof object.type !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.ConnectAgentResource.type: object expected");
                                message.type = $root.google.cloud.gkehub.v1beta1.TypeMeta.fromObject(object.type);
                            }
                            if (object.manifest != null)
                                message.manifest = String(object.manifest);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConnectAgentResource message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ConnectAgentResource} message ConnectAgentResource
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConnectAgentResource.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.type = null;
                                object.manifest = "";
                            }
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = $root.google.cloud.gkehub.v1beta1.TypeMeta.toObject(message.type, options);
                            if (message.manifest != null && message.hasOwnProperty("manifest"))
                                object.manifest = message.manifest;
                            return object;
                        };
    
                        /**
                         * Converts this ConnectAgentResource to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgentResource
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConnectAgentResource.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ConnectAgentResource;
                    })();
    
                    v1beta1.TypeMeta = (function() {
    
                        /**
                         * Properties of a TypeMeta.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface ITypeMeta
                         * @property {string|null} [kind] TypeMeta kind
                         * @property {string|null} [apiVersion] TypeMeta apiVersion
                         */
    
                        /**
                         * Constructs a new TypeMeta.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a TypeMeta.
                         * @implements ITypeMeta
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.ITypeMeta=} [properties] Properties to set
                         */
                        function TypeMeta(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * TypeMeta kind.
                         * @member {string} kind
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @instance
                         */
                        TypeMeta.prototype.kind = "";
    
                        /**
                         * TypeMeta apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @instance
                         */
                        TypeMeta.prototype.apiVersion = "";
    
                        /**
                         * Creates a new TypeMeta instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ITypeMeta=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.TypeMeta} TypeMeta instance
                         */
                        TypeMeta.create = function create(properties) {
                            return new TypeMeta(properties);
                        };
    
                        /**
                         * Encodes the specified TypeMeta message. Does not implicitly {@link google.cloud.gkehub.v1beta1.TypeMeta.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ITypeMeta} message TypeMeta message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TypeMeta.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified TypeMeta message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.TypeMeta.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ITypeMeta} message TypeMeta message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TypeMeta.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a TypeMeta message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.TypeMeta} TypeMeta
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TypeMeta.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.TypeMeta();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.kind = reader.string();
                                    break;
                                case 2:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a TypeMeta message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.TypeMeta} TypeMeta
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TypeMeta.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a TypeMeta message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TypeMeta.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                if (!$util.isString(message.kind))
                                    return "kind: string expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a TypeMeta message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.TypeMeta} TypeMeta
                         */
                        TypeMeta.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.TypeMeta)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.TypeMeta();
                            if (object.kind != null)
                                message.kind = String(object.kind);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a TypeMeta message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.TypeMeta} message TypeMeta
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TypeMeta.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.kind = "";
                                object.apiVersion = "";
                            }
                            if (message.kind != null && message.hasOwnProperty("kind"))
                                object.kind = message.kind;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this TypeMeta to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.TypeMeta
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TypeMeta.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return TypeMeta;
                    })();
    
                    v1beta1.ConnectAgent = (function() {
    
                        /**
                         * Properties of a ConnectAgent.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IConnectAgent
                         * @property {string|null} [name] ConnectAgent name
                         * @property {Uint8Array|null} [proxy] ConnectAgent proxy
                         * @property {string|null} [namespace] ConnectAgent namespace
                         */
    
                        /**
                         * Constructs a new ConnectAgent.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ConnectAgent.
                         * @implements IConnectAgent
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgent=} [properties] Properties to set
                         */
                        function ConnectAgent(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ConnectAgent name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @instance
                         */
                        ConnectAgent.prototype.name = "";
    
                        /**
                         * ConnectAgent proxy.
                         * @member {Uint8Array} proxy
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @instance
                         */
                        ConnectAgent.prototype.proxy = $util.newBuffer([]);
    
                        /**
                         * ConnectAgent namespace.
                         * @member {string} namespace
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @instance
                         */
                        ConnectAgent.prototype.namespace = "";
    
                        /**
                         * Creates a new ConnectAgent instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgent=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgent} ConnectAgent instance
                         */
                        ConnectAgent.create = function create(properties) {
                            return new ConnectAgent(properties);
                        };
    
                        /**
                         * Encodes the specified ConnectAgent message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ConnectAgent.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgent} message ConnectAgent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgent.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.proxy != null && Object.hasOwnProperty.call(message, "proxy"))
                                writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.proxy);
                            if (message.namespace != null && Object.hasOwnProperty.call(message, "namespace"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.namespace);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ConnectAgent message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ConnectAgent.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IConnectAgent} message ConnectAgent message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ConnectAgent.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ConnectAgent message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgent} ConnectAgent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgent.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ConnectAgent();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.proxy = reader.bytes();
                                    break;
                                case 3:
                                    message.namespace = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ConnectAgent message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgent} ConnectAgent
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ConnectAgent.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ConnectAgent message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ConnectAgent.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.proxy != null && message.hasOwnProperty("proxy"))
                                if (!(message.proxy && typeof message.proxy.length === "number" || $util.isString(message.proxy)))
                                    return "proxy: buffer expected";
                            if (message.namespace != null && message.hasOwnProperty("namespace"))
                                if (!$util.isString(message.namespace))
                                    return "namespace: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ConnectAgent message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ConnectAgent} ConnectAgent
                         */
                        ConnectAgent.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ConnectAgent)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ConnectAgent();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.proxy != null)
                                if (typeof object.proxy === "string")
                                    $util.base64.decode(object.proxy, message.proxy = $util.newBuffer($util.base64.length(object.proxy)), 0);
                                else if (object.proxy.length)
                                    message.proxy = object.proxy;
                            if (object.namespace != null)
                                message.namespace = String(object.namespace);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ConnectAgent message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ConnectAgent} message ConnectAgent
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ConnectAgent.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                if (options.bytes === String)
                                    object.proxy = "";
                                else {
                                    object.proxy = [];
                                    if (options.bytes !== Array)
                                        object.proxy = $util.newBuffer(object.proxy);
                                }
                                object.namespace = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.proxy != null && message.hasOwnProperty("proxy"))
                                object.proxy = options.bytes === String ? $util.base64.encode(message.proxy, 0, message.proxy.length) : options.bytes === Array ? Array.prototype.slice.call(message.proxy) : message.proxy;
                            if (message.namespace != null && message.hasOwnProperty("namespace"))
                                object.namespace = message.namespace;
                            return object;
                        };
    
                        /**
                         * Converts this ConnectAgent to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ConnectAgent
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ConnectAgent.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ConnectAgent;
                    })();
    
                    v1beta1.ValidateExclusivityRequest = (function() {
    
                        /**
                         * Properties of a ValidateExclusivityRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IValidateExclusivityRequest
                         * @property {string|null} [parent] ValidateExclusivityRequest parent
                         * @property {string|null} [crManifest] ValidateExclusivityRequest crManifest
                         * @property {string|null} [intendedMembership] ValidateExclusivityRequest intendedMembership
                         */
    
                        /**
                         * Constructs a new ValidateExclusivityRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ValidateExclusivityRequest.
                         * @implements IValidateExclusivityRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityRequest=} [properties] Properties to set
                         */
                        function ValidateExclusivityRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidateExclusivityRequest parent.
                         * @member {string} parent
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @instance
                         */
                        ValidateExclusivityRequest.prototype.parent = "";
    
                        /**
                         * ValidateExclusivityRequest crManifest.
                         * @member {string} crManifest
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @instance
                         */
                        ValidateExclusivityRequest.prototype.crManifest = "";
    
                        /**
                         * ValidateExclusivityRequest intendedMembership.
                         * @member {string} intendedMembership
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @instance
                         */
                        ValidateExclusivityRequest.prototype.intendedMembership = "";
    
                        /**
                         * Creates a new ValidateExclusivityRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityRequest} ValidateExclusivityRequest instance
                         */
                        ValidateExclusivityRequest.create = function create(properties) {
                            return new ValidateExclusivityRequest(properties);
                        };
    
                        /**
                         * Encodes the specified ValidateExclusivityRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ValidateExclusivityRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityRequest} message ValidateExclusivityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateExclusivityRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.parent != null && Object.hasOwnProperty.call(message, "parent"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.parent);
                            if (message.crManifest != null && Object.hasOwnProperty.call(message, "crManifest"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.crManifest);
                            if (message.intendedMembership != null && Object.hasOwnProperty.call(message, "intendedMembership"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.intendedMembership);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidateExclusivityRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ValidateExclusivityRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityRequest} message ValidateExclusivityRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateExclusivityRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidateExclusivityRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityRequest} ValidateExclusivityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateExclusivityRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ValidateExclusivityRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.parent = reader.string();
                                    break;
                                case 2:
                                    message.crManifest = reader.string();
                                    break;
                                case 3:
                                    message.intendedMembership = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidateExclusivityRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityRequest} ValidateExclusivityRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateExclusivityRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidateExclusivityRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidateExclusivityRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                if (!$util.isString(message.parent))
                                    return "parent: string expected";
                            if (message.crManifest != null && message.hasOwnProperty("crManifest"))
                                if (!$util.isString(message.crManifest))
                                    return "crManifest: string expected";
                            if (message.intendedMembership != null && message.hasOwnProperty("intendedMembership"))
                                if (!$util.isString(message.intendedMembership))
                                    return "intendedMembership: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a ValidateExclusivityRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityRequest} ValidateExclusivityRequest
                         */
                        ValidateExclusivityRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ValidateExclusivityRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ValidateExclusivityRequest();
                            if (object.parent != null)
                                message.parent = String(object.parent);
                            if (object.crManifest != null)
                                message.crManifest = String(object.crManifest);
                            if (object.intendedMembership != null)
                                message.intendedMembership = String(object.intendedMembership);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidateExclusivityRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ValidateExclusivityRequest} message ValidateExclusivityRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidateExclusivityRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.parent = "";
                                object.crManifest = "";
                                object.intendedMembership = "";
                            }
                            if (message.parent != null && message.hasOwnProperty("parent"))
                                object.parent = message.parent;
                            if (message.crManifest != null && message.hasOwnProperty("crManifest"))
                                object.crManifest = message.crManifest;
                            if (message.intendedMembership != null && message.hasOwnProperty("intendedMembership"))
                                object.intendedMembership = message.intendedMembership;
                            return object;
                        };
    
                        /**
                         * Converts this ValidateExclusivityRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidateExclusivityRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ValidateExclusivityRequest;
                    })();
    
                    v1beta1.ValidateExclusivityResponse = (function() {
    
                        /**
                         * Properties of a ValidateExclusivityResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IValidateExclusivityResponse
                         * @property {google.rpc.IStatus|null} [status] ValidateExclusivityResponse status
                         */
    
                        /**
                         * Constructs a new ValidateExclusivityResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a ValidateExclusivityResponse.
                         * @implements IValidateExclusivityResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityResponse=} [properties] Properties to set
                         */
                        function ValidateExclusivityResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * ValidateExclusivityResponse status.
                         * @member {google.rpc.IStatus|null|undefined} status
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @instance
                         */
                        ValidateExclusivityResponse.prototype.status = null;
    
                        /**
                         * Creates a new ValidateExclusivityResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityResponse} ValidateExclusivityResponse instance
                         */
                        ValidateExclusivityResponse.create = function create(properties) {
                            return new ValidateExclusivityResponse(properties);
                        };
    
                        /**
                         * Encodes the specified ValidateExclusivityResponse message. Does not implicitly {@link google.cloud.gkehub.v1beta1.ValidateExclusivityResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityResponse} message ValidateExclusivityResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateExclusivityResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.rpc.Status.encode(message.status, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };
    
                        /**
                         * Encodes the specified ValidateExclusivityResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.ValidateExclusivityResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IValidateExclusivityResponse} message ValidateExclusivityResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ValidateExclusivityResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a ValidateExclusivityResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityResponse} ValidateExclusivityResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateExclusivityResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.ValidateExclusivityResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.status = $root.google.rpc.Status.decode(reader, reader.uint32());
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a ValidateExclusivityResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityResponse} ValidateExclusivityResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ValidateExclusivityResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a ValidateExclusivityResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ValidateExclusivityResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.status != null && message.hasOwnProperty("status")) {
                                var error = $root.google.rpc.Status.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                            return null;
                        };
    
                        /**
                         * Creates a ValidateExclusivityResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.ValidateExclusivityResponse} ValidateExclusivityResponse
                         */
                        ValidateExclusivityResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.ValidateExclusivityResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.ValidateExclusivityResponse();
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.ValidateExclusivityResponse.status: object expected");
                                message.status = $root.google.rpc.Status.fromObject(object.status);
                            }
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a ValidateExclusivityResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.ValidateExclusivityResponse} message ValidateExclusivityResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ValidateExclusivityResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.status = null;
                            if (message.status != null && message.hasOwnProperty("status"))
                                object.status = $root.google.rpc.Status.toObject(message.status, options);
                            return object;
                        };
    
                        /**
                         * Converts this ValidateExclusivityResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.ValidateExclusivityResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ValidateExclusivityResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return ValidateExclusivityResponse;
                    })();
    
                    v1beta1.GenerateExclusivityManifestRequest = (function() {
    
                        /**
                         * Properties of a GenerateExclusivityManifestRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IGenerateExclusivityManifestRequest
                         * @property {string|null} [name] GenerateExclusivityManifestRequest name
                         * @property {string|null} [crdManifest] GenerateExclusivityManifestRequest crdManifest
                         * @property {string|null} [crManifest] GenerateExclusivityManifestRequest crManifest
                         */
    
                        /**
                         * Constructs a new GenerateExclusivityManifestRequest.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GenerateExclusivityManifestRequest.
                         * @implements IGenerateExclusivityManifestRequest
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestRequest=} [properties] Properties to set
                         */
                        function GenerateExclusivityManifestRequest(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateExclusivityManifestRequest name.
                         * @member {string} name
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @instance
                         */
                        GenerateExclusivityManifestRequest.prototype.name = "";
    
                        /**
                         * GenerateExclusivityManifestRequest crdManifest.
                         * @member {string} crdManifest
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @instance
                         */
                        GenerateExclusivityManifestRequest.prototype.crdManifest = "";
    
                        /**
                         * GenerateExclusivityManifestRequest crManifest.
                         * @member {string} crManifest
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @instance
                         */
                        GenerateExclusivityManifestRequest.prototype.crManifest = "";
    
                        /**
                         * Creates a new GenerateExclusivityManifestRequest instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestRequest=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest} GenerateExclusivityManifestRequest instance
                         */
                        GenerateExclusivityManifestRequest.create = function create(properties) {
                            return new GenerateExclusivityManifestRequest(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateExclusivityManifestRequest message. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestRequest} message GenerateExclusivityManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateExclusivityManifestRequest.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                            if (message.crdManifest != null && Object.hasOwnProperty.call(message, "crdManifest"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.crdManifest);
                            if (message.crManifest != null && Object.hasOwnProperty.call(message, "crManifest"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.crManifest);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateExclusivityManifestRequest message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestRequest} message GenerateExclusivityManifestRequest message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateExclusivityManifestRequest.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateExclusivityManifestRequest message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest} GenerateExclusivityManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateExclusivityManifestRequest.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.name = reader.string();
                                    break;
                                case 2:
                                    message.crdManifest = reader.string();
                                    break;
                                case 3:
                                    message.crManifest = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateExclusivityManifestRequest message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest} GenerateExclusivityManifestRequest
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateExclusivityManifestRequest.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateExclusivityManifestRequest message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateExclusivityManifestRequest.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.name != null && message.hasOwnProperty("name"))
                                if (!$util.isString(message.name))
                                    return "name: string expected";
                            if (message.crdManifest != null && message.hasOwnProperty("crdManifest"))
                                if (!$util.isString(message.crdManifest))
                                    return "crdManifest: string expected";
                            if (message.crManifest != null && message.hasOwnProperty("crManifest"))
                                if (!$util.isString(message.crManifest))
                                    return "crManifest: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateExclusivityManifestRequest message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest} GenerateExclusivityManifestRequest
                         */
                        GenerateExclusivityManifestRequest.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest();
                            if (object.name != null)
                                message.name = String(object.name);
                            if (object.crdManifest != null)
                                message.crdManifest = String(object.crdManifest);
                            if (object.crManifest != null)
                                message.crManifest = String(object.crManifest);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateExclusivityManifestRequest message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest} message GenerateExclusivityManifestRequest
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateExclusivityManifestRequest.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.name = "";
                                object.crdManifest = "";
                                object.crManifest = "";
                            }
                            if (message.name != null && message.hasOwnProperty("name"))
                                object.name = message.name;
                            if (message.crdManifest != null && message.hasOwnProperty("crdManifest"))
                                object.crdManifest = message.crdManifest;
                            if (message.crManifest != null && message.hasOwnProperty("crManifest"))
                                object.crManifest = message.crManifest;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateExclusivityManifestRequest to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestRequest
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateExclusivityManifestRequest.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateExclusivityManifestRequest;
                    })();
    
                    v1beta1.GenerateExclusivityManifestResponse = (function() {
    
                        /**
                         * Properties of a GenerateExclusivityManifestResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IGenerateExclusivityManifestResponse
                         * @property {string|null} [crdManifest] GenerateExclusivityManifestResponse crdManifest
                         * @property {string|null} [crManifest] GenerateExclusivityManifestResponse crManifest
                         */
    
                        /**
                         * Constructs a new GenerateExclusivityManifestResponse.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents a GenerateExclusivityManifestResponse.
                         * @implements IGenerateExclusivityManifestResponse
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestResponse=} [properties] Properties to set
                         */
                        function GenerateExclusivityManifestResponse(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * GenerateExclusivityManifestResponse crdManifest.
                         * @member {string} crdManifest
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @instance
                         */
                        GenerateExclusivityManifestResponse.prototype.crdManifest = "";
    
                        /**
                         * GenerateExclusivityManifestResponse crManifest.
                         * @member {string} crManifest
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @instance
                         */
                        GenerateExclusivityManifestResponse.prototype.crManifest = "";
    
                        /**
                         * Creates a new GenerateExclusivityManifestResponse instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestResponse=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse} GenerateExclusivityManifestResponse instance
                         */
                        GenerateExclusivityManifestResponse.create = function create(properties) {
                            return new GenerateExclusivityManifestResponse(properties);
                        };
    
                        /**
                         * Encodes the specified GenerateExclusivityManifestResponse message. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestResponse} message GenerateExclusivityManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateExclusivityManifestResponse.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.crdManifest != null && Object.hasOwnProperty.call(message, "crdManifest"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.crdManifest);
                            if (message.crManifest != null && Object.hasOwnProperty.call(message, "crManifest"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.crManifest);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified GenerateExclusivityManifestResponse message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IGenerateExclusivityManifestResponse} message GenerateExclusivityManifestResponse message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GenerateExclusivityManifestResponse.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes a GenerateExclusivityManifestResponse message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse} GenerateExclusivityManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateExclusivityManifestResponse.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.crdManifest = reader.string();
                                    break;
                                case 2:
                                    message.crManifest = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes a GenerateExclusivityManifestResponse message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse} GenerateExclusivityManifestResponse
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GenerateExclusivityManifestResponse.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies a GenerateExclusivityManifestResponse message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GenerateExclusivityManifestResponse.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.crdManifest != null && message.hasOwnProperty("crdManifest"))
                                if (!$util.isString(message.crdManifest))
                                    return "crdManifest: string expected";
                            if (message.crManifest != null && message.hasOwnProperty("crManifest"))
                                if (!$util.isString(message.crManifest))
                                    return "crManifest: string expected";
                            return null;
                        };
    
                        /**
                         * Creates a GenerateExclusivityManifestResponse message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse} GenerateExclusivityManifestResponse
                         */
                        GenerateExclusivityManifestResponse.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse();
                            if (object.crdManifest != null)
                                message.crdManifest = String(object.crdManifest);
                            if (object.crManifest != null)
                                message.crManifest = String(object.crManifest);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from a GenerateExclusivityManifestResponse message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse} message GenerateExclusivityManifestResponse
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GenerateExclusivityManifestResponse.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.crdManifest = "";
                                object.crManifest = "";
                            }
                            if (message.crdManifest != null && message.hasOwnProperty("crdManifest"))
                                object.crdManifest = message.crdManifest;
                            if (message.crManifest != null && message.hasOwnProperty("crManifest"))
                                object.crManifest = message.crManifest;
                            return object;
                        };
    
                        /**
                         * Converts this GenerateExclusivityManifestResponse to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.GenerateExclusivityManifestResponse
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GenerateExclusivityManifestResponse.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return GenerateExclusivityManifestResponse;
                    })();
    
                    v1beta1.OperationMetadata = (function() {
    
                        /**
                         * Properties of an OperationMetadata.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @interface IOperationMetadata
                         * @property {google.protobuf.ITimestamp|null} [createTime] OperationMetadata createTime
                         * @property {google.protobuf.ITimestamp|null} [endTime] OperationMetadata endTime
                         * @property {string|null} [target] OperationMetadata target
                         * @property {string|null} [verb] OperationMetadata verb
                         * @property {string|null} [statusDetail] OperationMetadata statusDetail
                         * @property {boolean|null} [cancelRequested] OperationMetadata cancelRequested
                         * @property {string|null} [apiVersion] OperationMetadata apiVersion
                         */
    
                        /**
                         * Constructs a new OperationMetadata.
                         * @memberof google.cloud.gkehub.v1beta1
                         * @classdesc Represents an OperationMetadata.
                         * @implements IOperationMetadata
                         * @constructor
                         * @param {google.cloud.gkehub.v1beta1.IOperationMetadata=} [properties] Properties to set
                         */
                        function OperationMetadata(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }
    
                        /**
                         * OperationMetadata createTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} createTime
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.createTime = null;
    
                        /**
                         * OperationMetadata endTime.
                         * @member {google.protobuf.ITimestamp|null|undefined} endTime
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.endTime = null;
    
                        /**
                         * OperationMetadata target.
                         * @member {string} target
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.target = "";
    
                        /**
                         * OperationMetadata verb.
                         * @member {string} verb
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.verb = "";
    
                        /**
                         * OperationMetadata statusDetail.
                         * @member {string} statusDetail
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.statusDetail = "";
    
                        /**
                         * OperationMetadata cancelRequested.
                         * @member {boolean} cancelRequested
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.cancelRequested = false;
    
                        /**
                         * OperationMetadata apiVersion.
                         * @member {string} apiVersion
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         */
                        OperationMetadata.prototype.apiVersion = "";
    
                        /**
                         * Creates a new OperationMetadata instance using the specified properties.
                         * @function create
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IOperationMetadata=} [properties] Properties to set
                         * @returns {google.cloud.gkehub.v1beta1.OperationMetadata} OperationMetadata instance
                         */
                        OperationMetadata.create = function create(properties) {
                            return new OperationMetadata(properties);
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message. Does not implicitly {@link google.cloud.gkehub.v1beta1.OperationMetadata.verify|verify} messages.
                         * @function encode
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.createTime != null && Object.hasOwnProperty.call(message, "createTime"))
                                $root.google.protobuf.Timestamp.encode(message.createTime, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.endTime != null && Object.hasOwnProperty.call(message, "endTime"))
                                $root.google.protobuf.Timestamp.encode(message.endTime, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.target != null && Object.hasOwnProperty.call(message, "target"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.target);
                            if (message.verb != null && Object.hasOwnProperty.call(message, "verb"))
                                writer.uint32(/* id 4, wireType 2 =*/34).string(message.verb);
                            if (message.statusDetail != null && Object.hasOwnProperty.call(message, "statusDetail"))
                                writer.uint32(/* id 5, wireType 2 =*/42).string(message.statusDetail);
                            if (message.cancelRequested != null && Object.hasOwnProperty.call(message, "cancelRequested"))
                                writer.uint32(/* id 6, wireType 0 =*/48).bool(message.cancelRequested);
                            if (message.apiVersion != null && Object.hasOwnProperty.call(message, "apiVersion"))
                                writer.uint32(/* id 7, wireType 2 =*/58).string(message.apiVersion);
                            return writer;
                        };
    
                        /**
                         * Encodes the specified OperationMetadata message, length delimited. Does not implicitly {@link google.cloud.gkehub.v1beta1.OperationMetadata.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.IOperationMetadata} message OperationMetadata message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        OperationMetadata.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer.
                         * @function decode
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {google.cloud.gkehub.v1beta1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.cloud.gkehub.v1beta1.OperationMetadata();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1:
                                    message.createTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 2:
                                    message.endTime = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                    break;
                                case 3:
                                    message.target = reader.string();
                                    break;
                                case 4:
                                    message.verb = reader.string();
                                    break;
                                case 5:
                                    message.statusDetail = reader.string();
                                    break;
                                case 6:
                                    message.cancelRequested = reader.bool();
                                    break;
                                case 7:
                                    message.apiVersion = reader.string();
                                    break;
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };
    
                        /**
                         * Decodes an OperationMetadata message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {google.cloud.gkehub.v1beta1.OperationMetadata} OperationMetadata
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        OperationMetadata.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };
    
                        /**
                         * Verifies an OperationMetadata message.
                         * @function verify
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        OperationMetadata.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.createTime != null && message.hasOwnProperty("createTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.createTime);
                                if (error)
                                    return "createTime." + error;
                            }
                            if (message.endTime != null && message.hasOwnProperty("endTime")) {
                                var error = $root.google.protobuf.Timestamp.verify(message.endTime);
                                if (error)
                                    return "endTime." + error;
                            }
                            if (message.target != null && message.hasOwnProperty("target"))
                                if (!$util.isString(message.target))
                                    return "target: string expected";
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                if (!$util.isString(message.verb))
                                    return "verb: string expected";
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                if (!$util.isString(message.statusDetail))
                                    return "statusDetail: string expected";
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                if (typeof message.cancelRequested !== "boolean")
                                    return "cancelRequested: boolean expected";
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                if (!$util.isString(message.apiVersion))
                                    return "apiVersion: string expected";
                            return null;
                        };
    
                        /**
                         * Creates an OperationMetadata message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {google.cloud.gkehub.v1beta1.OperationMetadata} OperationMetadata
                         */
                        OperationMetadata.fromObject = function fromObject(object) {
                            if (object instanceof $root.google.cloud.gkehub.v1beta1.OperationMetadata)
                                return object;
                            var message = new $root.google.cloud.gkehub.v1beta1.OperationMetadata();
                            if (object.createTime != null) {
                                if (typeof object.createTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.OperationMetadata.createTime: object expected");
                                message.createTime = $root.google.protobuf.Timestamp.fromObject(object.createTime);
                            }
                            if (object.endTime != null) {
                                if (typeof object.endTime !== "object")
                                    throw TypeError(".google.cloud.gkehub.v1beta1.OperationMetadata.endTime: object expected");
                                message.endTime = $root.google.protobuf.Timestamp.fromObject(object.endTime);
                            }
                            if (object.target != null)
                                message.target = String(object.target);
                            if (object.verb != null)
                                message.verb = String(object.verb);
                            if (object.statusDetail != null)
                                message.statusDetail = String(object.statusDetail);
                            if (object.cancelRequested != null)
                                message.cancelRequested = Boolean(object.cancelRequested);
                            if (object.apiVersion != null)
                                message.apiVersion = String(object.apiVersion);
                            return message;
                        };
    
                        /**
                         * Creates a plain object from an OperationMetadata message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @static
                         * @param {google.cloud.gkehub.v1beta1.OperationMetadata} message OperationMetadata
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        OperationMetadata.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.createTime = null;
                                object.endTime = null;
                                object.target = "";
                                object.verb = "";
                                object.statusDetail = "";
                                object.cancelRequested = false;
                                object.apiVersion = "";
                            }
                            if (message.createTime != null && message.hasOwnProperty("createTime"))
                                object.createTime = $root.google.protobuf.Timestamp.toObject(message.createTime, options);
                            if (message.endTime != null && message.hasOwnProperty("endTime"))
                                object.endTime = $root.google.protobuf.Timestamp.toObject(message.endTime, options);
                            if (message.target != null && message.hasOwnProperty("target"))
                                object.target = message.target;
                            if (message.verb != null && message.hasOwnProperty("verb"))
                                object.verb = message.verb;
                            if (message.statusDetail != null && message.hasOwnProperty("statusDetail"))
                                object.statusDetail = message.statusDetail;
                            if (message.cancelRequested != null && message.hasOwnProperty("cancelRequested"))
                                object.cancelRequested = message.cancelRequested;
                            if (message.apiVersion != null && message.hasOwnProperty("apiVersion"))
                                object.apiVersion = message.apiVersion;
                            return object;
                        };
    
                        /**
                         * Converts this OperationMetadata to JSON.
                         * @function toJSON
                         * @memberof google.cloud.gkehub.v1beta1.OperationMetadata
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        OperationMetadata.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };
    
                        return OperationMetadata;
                    })();
    
                    return v1beta1;
                })();
    
                return gkehub;
            })();
    
            return cloud;
        })();
    
        google.api = (function() {
    
            /**
             * Namespace api.
             * @memberof google
             * @namespace
             */
            var api = {};
    
            api.Http = (function() {
    
                /**
                 * Properties of a Http.
                 * @memberof google.api
                 * @interface IHttp
                 * @property {Array.<google.api.IHttpRule>|null} [rules] Http rules
                 * @property {boolean|null} [fullyDecodeReservedExpansion] Http fullyDecodeReservedExpansion
                 */
    
                /**
                 * Constructs a new Http.
                 * @memberof google.api
                 * @classdesc Represents a Http.
                 * @implements IHttp
                 * @constructor
                 * @param {google.api.IHttp=} [properties] Properties to set
                 */
                function Http(properties) {
                    this.rules = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Http rules.
                 * @member {Array.<google.api.IHttpRule>} rules
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.rules = $util.emptyArray;
    
                /**
                 * Http fullyDecodeReservedExpansion.
                 * @member {boolean} fullyDecodeReservedExpansion
                 * @memberof google.api.Http
                 * @instance
                 */
                Http.prototype.fullyDecodeReservedExpansion = false;
    
                /**
                 * Creates a new Http instance using the specified properties.
                 * @function create
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp=} [properties] Properties to set
                 * @returns {google.api.Http} Http instance
                 */
                Http.create = function create(properties) {
                    return new Http(properties);
                };
    
                /**
                 * Encodes the specified Http message. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.rules != null && message.rules.length)
                        for (var i = 0; i < message.rules.length; ++i)
                            $root.google.api.HttpRule.encode(message.rules[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.fullyDecodeReservedExpansion != null && Object.hasOwnProperty.call(message, "fullyDecodeReservedExpansion"))
                        writer.uint32(/* id 2, wireType 0 =*/16).bool(message.fullyDecodeReservedExpansion);
                    return writer;
                };
    
                /**
                 * Encodes the specified Http message, length delimited. Does not implicitly {@link google.api.Http.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.IHttp} message Http message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Http.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.Http();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.rules && message.rules.length))
                                message.rules = [];
                            message.rules.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.fullyDecodeReservedExpansion = reader.bool();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Http message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.Http
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.Http} Http
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Http.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Http message.
                 * @function verify
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Http.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.rules != null && message.hasOwnProperty("rules")) {
                        if (!Array.isArray(message.rules))
                            return "rules: array expected";
                        for (var i = 0; i < message.rules.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.rules[i]);
                            if (error)
                                return "rules." + error;
                        }
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        if (typeof message.fullyDecodeReservedExpansion !== "boolean")
                            return "fullyDecodeReservedExpansion: boolean expected";
                    return null;
                };
    
                /**
                 * Creates a Http message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.Http
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.Http} Http
                 */
                Http.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.Http)
                        return object;
                    var message = new $root.google.api.Http();
                    if (object.rules) {
                        if (!Array.isArray(object.rules))
                            throw TypeError(".google.api.Http.rules: array expected");
                        message.rules = [];
                        for (var i = 0; i < object.rules.length; ++i) {
                            if (typeof object.rules[i] !== "object")
                                throw TypeError(".google.api.Http.rules: object expected");
                            message.rules[i] = $root.google.api.HttpRule.fromObject(object.rules[i]);
                        }
                    }
                    if (object.fullyDecodeReservedExpansion != null)
                        message.fullyDecodeReservedExpansion = Boolean(object.fullyDecodeReservedExpansion);
                    return message;
                };
    
                /**
                 * Creates a plain object from a Http message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.Http
                 * @static
                 * @param {google.api.Http} message Http
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Http.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.rules = [];
                    if (options.defaults)
                        object.fullyDecodeReservedExpansion = false;
                    if (message.rules && message.rules.length) {
                        object.rules = [];
                        for (var j = 0; j < message.rules.length; ++j)
                            object.rules[j] = $root.google.api.HttpRule.toObject(message.rules[j], options);
                    }
                    if (message.fullyDecodeReservedExpansion != null && message.hasOwnProperty("fullyDecodeReservedExpansion"))
                        object.fullyDecodeReservedExpansion = message.fullyDecodeReservedExpansion;
                    return object;
                };
    
                /**
                 * Converts this Http to JSON.
                 * @function toJSON
                 * @memberof google.api.Http
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Http.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Http;
            })();
    
            api.HttpRule = (function() {
    
                /**
                 * Properties of a HttpRule.
                 * @memberof google.api
                 * @interface IHttpRule
                 * @property {string|null} [selector] HttpRule selector
                 * @property {string|null} [get] HttpRule get
                 * @property {string|null} [put] HttpRule put
                 * @property {string|null} [post] HttpRule post
                 * @property {string|null} ["delete"] HttpRule delete
                 * @property {string|null} [patch] HttpRule patch
                 * @property {google.api.ICustomHttpPattern|null} [custom] HttpRule custom
                 * @property {string|null} [body] HttpRule body
                 * @property {string|null} [responseBody] HttpRule responseBody
                 * @property {Array.<google.api.IHttpRule>|null} [additionalBindings] HttpRule additionalBindings
                 */
    
                /**
                 * Constructs a new HttpRule.
                 * @memberof google.api
                 * @classdesc Represents a HttpRule.
                 * @implements IHttpRule
                 * @constructor
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 */
                function HttpRule(properties) {
                    this.additionalBindings = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * HttpRule selector.
                 * @member {string} selector
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.selector = "";
    
                /**
                 * HttpRule get.
                 * @member {string|null|undefined} get
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.get = null;
    
                /**
                 * HttpRule put.
                 * @member {string|null|undefined} put
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.put = null;
    
                /**
                 * HttpRule post.
                 * @member {string|null|undefined} post
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.post = null;
    
                /**
                 * HttpRule delete.
                 * @member {string|null|undefined} delete
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype["delete"] = null;
    
                /**
                 * HttpRule patch.
                 * @member {string|null|undefined} patch
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.patch = null;
    
                /**
                 * HttpRule custom.
                 * @member {google.api.ICustomHttpPattern|null|undefined} custom
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.custom = null;
    
                /**
                 * HttpRule body.
                 * @member {string} body
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.body = "";
    
                /**
                 * HttpRule responseBody.
                 * @member {string} responseBody
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.responseBody = "";
    
                /**
                 * HttpRule additionalBindings.
                 * @member {Array.<google.api.IHttpRule>} additionalBindings
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                HttpRule.prototype.additionalBindings = $util.emptyArray;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * HttpRule pattern.
                 * @member {"get"|"put"|"post"|"delete"|"patch"|"custom"|undefined} pattern
                 * @memberof google.api.HttpRule
                 * @instance
                 */
                Object.defineProperty(HttpRule.prototype, "pattern", {
                    get: $util.oneOfGetter($oneOfFields = ["get", "put", "post", "delete", "patch", "custom"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new HttpRule instance using the specified properties.
                 * @function create
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule=} [properties] Properties to set
                 * @returns {google.api.HttpRule} HttpRule instance
                 */
                HttpRule.create = function create(properties) {
                    return new HttpRule(properties);
                };
    
                /**
                 * Encodes the specified HttpRule message. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.selector != null && Object.hasOwnProperty.call(message, "selector"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.selector);
                    if (message.get != null && Object.hasOwnProperty.call(message, "get"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.get);
                    if (message.put != null && Object.hasOwnProperty.call(message, "put"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.put);
                    if (message.post != null && Object.hasOwnProperty.call(message, "post"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.post);
                    if (message["delete"] != null && Object.hasOwnProperty.call(message, "delete"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message["delete"]);
                    if (message.patch != null && Object.hasOwnProperty.call(message, "patch"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.patch);
                    if (message.body != null && Object.hasOwnProperty.call(message, "body"))
                        writer.uint32(/* id 7, wireType 2 =*/58).string(message.body);
                    if (message.custom != null && Object.hasOwnProperty.call(message, "custom"))
                        $root.google.api.CustomHttpPattern.encode(message.custom, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                    if (message.additionalBindings != null && message.additionalBindings.length)
                        for (var i = 0; i < message.additionalBindings.length; ++i)
                            $root.google.api.HttpRule.encode(message.additionalBindings[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                    if (message.responseBody != null && Object.hasOwnProperty.call(message, "responseBody"))
                        writer.uint32(/* id 12, wireType 2 =*/98).string(message.responseBody);
                    return writer;
                };
    
                /**
                 * Encodes the specified HttpRule message, length delimited. Does not implicitly {@link google.api.HttpRule.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.IHttpRule} message HttpRule message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                HttpRule.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.HttpRule();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.selector = reader.string();
                            break;
                        case 2:
                            message.get = reader.string();
                            break;
                        case 3:
                            message.put = reader.string();
                            break;
                        case 4:
                            message.post = reader.string();
                            break;
                        case 5:
                            message["delete"] = reader.string();
                            break;
                        case 6:
                            message.patch = reader.string();
                            break;
                        case 8:
                            message.custom = $root.google.api.CustomHttpPattern.decode(reader, reader.uint32());
                            break;
                        case 7:
                            message.body = reader.string();
                            break;
                        case 12:
                            message.responseBody = reader.string();
                            break;
                        case 11:
                            if (!(message.additionalBindings && message.additionalBindings.length))
                                message.additionalBindings = [];
                            message.additionalBindings.push($root.google.api.HttpRule.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a HttpRule message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.HttpRule} HttpRule
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                HttpRule.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a HttpRule message.
                 * @function verify
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                HttpRule.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        if (!$util.isString(message.selector))
                            return "selector: string expected";
                    if (message.get != null && message.hasOwnProperty("get")) {
                        properties.pattern = 1;
                        if (!$util.isString(message.get))
                            return "get: string expected";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.put))
                            return "put: string expected";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.post))
                            return "post: string expected";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message["delete"]))
                            return "delete: string expected";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        if (!$util.isString(message.patch))
                            return "patch: string expected";
                    }
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        if (properties.pattern === 1)
                            return "pattern: multiple values";
                        properties.pattern = 1;
                        {
                            var error = $root.google.api.CustomHttpPattern.verify(message.custom);
                            if (error)
                                return "custom." + error;
                        }
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        if (!$util.isString(message.body))
                            return "body: string expected";
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        if (!$util.isString(message.responseBody))
                            return "responseBody: string expected";
                    if (message.additionalBindings != null && message.hasOwnProperty("additionalBindings")) {
                        if (!Array.isArray(message.additionalBindings))
                            return "additionalBindings: array expected";
                        for (var i = 0; i < message.additionalBindings.length; ++i) {
                            var error = $root.google.api.HttpRule.verify(message.additionalBindings[i]);
                            if (error)
                                return "additionalBindings." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a HttpRule message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.HttpRule} HttpRule
                 */
                HttpRule.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.HttpRule)
                        return object;
                    var message = new $root.google.api.HttpRule();
                    if (object.selector != null)
                        message.selector = String(object.selector);
                    if (object.get != null)
                        message.get = String(object.get);
                    if (object.put != null)
                        message.put = String(object.put);
                    if (object.post != null)
                        message.post = String(object.post);
                    if (object["delete"] != null)
                        message["delete"] = String(object["delete"]);
                    if (object.patch != null)
                        message.patch = String(object.patch);
                    if (object.custom != null) {
                        if (typeof object.custom !== "object")
                            throw TypeError(".google.api.HttpRule.custom: object expected");
                        message.custom = $root.google.api.CustomHttpPattern.fromObject(object.custom);
                    }
                    if (object.body != null)
                        message.body = String(object.body);
                    if (object.responseBody != null)
                        message.responseBody = String(object.responseBody);
                    if (object.additionalBindings) {
                        if (!Array.isArray(object.additionalBindings))
                            throw TypeError(".google.api.HttpRule.additionalBindings: array expected");
                        message.additionalBindings = [];
                        for (var i = 0; i < object.additionalBindings.length; ++i) {
                            if (typeof object.additionalBindings[i] !== "object")
                                throw TypeError(".google.api.HttpRule.additionalBindings: object expected");
                            message.additionalBindings[i] = $root.google.api.HttpRule.fromObject(object.additionalBindings[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a HttpRule message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.HttpRule
                 * @static
                 * @param {google.api.HttpRule} message HttpRule
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                HttpRule.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.additionalBindings = [];
                    if (options.defaults) {
                        object.selector = "";
                        object.body = "";
                        object.responseBody = "";
                    }
                    if (message.selector != null && message.hasOwnProperty("selector"))
                        object.selector = message.selector;
                    if (message.get != null && message.hasOwnProperty("get")) {
                        object.get = message.get;
                        if (options.oneofs)
                            object.pattern = "get";
                    }
                    if (message.put != null && message.hasOwnProperty("put")) {
                        object.put = message.put;
                        if (options.oneofs)
                            object.pattern = "put";
                    }
                    if (message.post != null && message.hasOwnProperty("post")) {
                        object.post = message.post;
                        if (options.oneofs)
                            object.pattern = "post";
                    }
                    if (message["delete"] != null && message.hasOwnProperty("delete")) {
                        object["delete"] = message["delete"];
                        if (options.oneofs)
                            object.pattern = "delete";
                    }
                    if (message.patch != null && message.hasOwnProperty("patch")) {
                        object.patch = message.patch;
                        if (options.oneofs)
                            object.pattern = "patch";
                    }
                    if (message.body != null && message.hasOwnProperty("body"))
                        object.body = message.body;
                    if (message.custom != null && message.hasOwnProperty("custom")) {
                        object.custom = $root.google.api.CustomHttpPattern.toObject(message.custom, options);
                        if (options.oneofs)
                            object.pattern = "custom";
                    }
                    if (message.additionalBindings && message.additionalBindings.length) {
                        object.additionalBindings = [];
                        for (var j = 0; j < message.additionalBindings.length; ++j)
                            object.additionalBindings[j] = $root.google.api.HttpRule.toObject(message.additionalBindings[j], options);
                    }
                    if (message.responseBody != null && message.hasOwnProperty("responseBody"))
                        object.responseBody = message.responseBody;
                    return object;
                };
    
                /**
                 * Converts this HttpRule to JSON.
                 * @function toJSON
                 * @memberof google.api.HttpRule
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                HttpRule.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return HttpRule;
            })();
    
            api.CustomHttpPattern = (function() {
    
                /**
                 * Properties of a CustomHttpPattern.
                 * @memberof google.api
                 * @interface ICustomHttpPattern
                 * @property {string|null} [kind] CustomHttpPattern kind
                 * @property {string|null} [path] CustomHttpPattern path
                 */
    
                /**
                 * Constructs a new CustomHttpPattern.
                 * @memberof google.api
                 * @classdesc Represents a CustomHttpPattern.
                 * @implements ICustomHttpPattern
                 * @constructor
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 */
                function CustomHttpPattern(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CustomHttpPattern kind.
                 * @member {string} kind
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.kind = "";
    
                /**
                 * CustomHttpPattern path.
                 * @member {string} path
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 */
                CustomHttpPattern.prototype.path = "";
    
                /**
                 * Creates a new CustomHttpPattern instance using the specified properties.
                 * @function create
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern=} [properties] Properties to set
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern instance
                 */
                CustomHttpPattern.create = function create(properties) {
                    return new CustomHttpPattern(properties);
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.kind != null && Object.hasOwnProperty.call(message, "kind"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.kind);
                    if (message.path != null && Object.hasOwnProperty.call(message, "path"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.path);
                    return writer;
                };
    
                /**
                 * Encodes the specified CustomHttpPattern message, length delimited. Does not implicitly {@link google.api.CustomHttpPattern.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.ICustomHttpPattern} message CustomHttpPattern message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CustomHttpPattern.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.CustomHttpPattern();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.kind = reader.string();
                            break;
                        case 2:
                            message.path = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CustomHttpPattern message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CustomHttpPattern.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CustomHttpPattern message.
                 * @function verify
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CustomHttpPattern.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        if (!$util.isString(message.kind))
                            return "kind: string expected";
                    if (message.path != null && message.hasOwnProperty("path"))
                        if (!$util.isString(message.path))
                            return "path: string expected";
                    return null;
                };
    
                /**
                 * Creates a CustomHttpPattern message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.CustomHttpPattern} CustomHttpPattern
                 */
                CustomHttpPattern.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.CustomHttpPattern)
                        return object;
                    var message = new $root.google.api.CustomHttpPattern();
                    if (object.kind != null)
                        message.kind = String(object.kind);
                    if (object.path != null)
                        message.path = String(object.path);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CustomHttpPattern message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.CustomHttpPattern
                 * @static
                 * @param {google.api.CustomHttpPattern} message CustomHttpPattern
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CustomHttpPattern.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.kind = "";
                        object.path = "";
                    }
                    if (message.kind != null && message.hasOwnProperty("kind"))
                        object.kind = message.kind;
                    if (message.path != null && message.hasOwnProperty("path"))
                        object.path = message.path;
                    return object;
                };
    
                /**
                 * Converts this CustomHttpPattern to JSON.
                 * @function toJSON
                 * @memberof google.api.CustomHttpPattern
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CustomHttpPattern.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CustomHttpPattern;
            })();
    
            /**
             * FieldBehavior enum.
             * @name google.api.FieldBehavior
             * @enum {number}
             * @property {number} FIELD_BEHAVIOR_UNSPECIFIED=0 FIELD_BEHAVIOR_UNSPECIFIED value
             * @property {number} OPTIONAL=1 OPTIONAL value
             * @property {number} REQUIRED=2 REQUIRED value
             * @property {number} OUTPUT_ONLY=3 OUTPUT_ONLY value
             * @property {number} INPUT_ONLY=4 INPUT_ONLY value
             * @property {number} IMMUTABLE=5 IMMUTABLE value
             * @property {number} UNORDERED_LIST=6 UNORDERED_LIST value
             * @property {number} NON_EMPTY_DEFAULT=7 NON_EMPTY_DEFAULT value
             */
            api.FieldBehavior = (function() {
                var valuesById = {}, values = Object.create(valuesById);
                values[valuesById[0] = "FIELD_BEHAVIOR_UNSPECIFIED"] = 0;
                values[valuesById[1] = "OPTIONAL"] = 1;
                values[valuesById[2] = "REQUIRED"] = 2;
                values[valuesById[3] = "OUTPUT_ONLY"] = 3;
                values[valuesById[4] = "INPUT_ONLY"] = 4;
                values[valuesById[5] = "IMMUTABLE"] = 5;
                values[valuesById[6] = "UNORDERED_LIST"] = 6;
                values[valuesById[7] = "NON_EMPTY_DEFAULT"] = 7;
                return values;
            })();
    
            api.ResourceDescriptor = (function() {
    
                /**
                 * Properties of a ResourceDescriptor.
                 * @memberof google.api
                 * @interface IResourceDescriptor
                 * @property {string|null} [type] ResourceDescriptor type
                 * @property {Array.<string>|null} [pattern] ResourceDescriptor pattern
                 * @property {string|null} [nameField] ResourceDescriptor nameField
                 * @property {google.api.ResourceDescriptor.History|null} [history] ResourceDescriptor history
                 * @property {string|null} [plural] ResourceDescriptor plural
                 * @property {string|null} [singular] ResourceDescriptor singular
                 * @property {Array.<google.api.ResourceDescriptor.Style>|null} [style] ResourceDescriptor style
                 */
    
                /**
                 * Constructs a new ResourceDescriptor.
                 * @memberof google.api
                 * @classdesc Represents a ResourceDescriptor.
                 * @implements IResourceDescriptor
                 * @constructor
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 */
                function ResourceDescriptor(properties) {
                    this.pattern = [];
                    this.style = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceDescriptor type.
                 * @member {string} type
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.type = "";
    
                /**
                 * ResourceDescriptor pattern.
                 * @member {Array.<string>} pattern
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.pattern = $util.emptyArray;
    
                /**
                 * ResourceDescriptor nameField.
                 * @member {string} nameField
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.nameField = "";
    
                /**
                 * ResourceDescriptor history.
                 * @member {google.api.ResourceDescriptor.History} history
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.history = 0;
    
                /**
                 * ResourceDescriptor plural.
                 * @member {string} plural
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.plural = "";
    
                /**
                 * ResourceDescriptor singular.
                 * @member {string} singular
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.singular = "";
    
                /**
                 * ResourceDescriptor style.
                 * @member {Array.<google.api.ResourceDescriptor.Style>} style
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 */
                ResourceDescriptor.prototype.style = $util.emptyArray;
    
                /**
                 * Creates a new ResourceDescriptor instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor=} [properties] Properties to set
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor instance
                 */
                ResourceDescriptor.create = function create(properties) {
                    return new ResourceDescriptor(properties);
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.pattern != null && message.pattern.length)
                        for (var i = 0; i < message.pattern.length; ++i)
                            writer.uint32(/* id 2, wireType 2 =*/18).string(message.pattern[i]);
                    if (message.nameField != null && Object.hasOwnProperty.call(message, "nameField"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.nameField);
                    if (message.history != null && Object.hasOwnProperty.call(message, "history"))
                        writer.uint32(/* id 4, wireType 0 =*/32).int32(message.history);
                    if (message.plural != null && Object.hasOwnProperty.call(message, "plural"))
                        writer.uint32(/* id 5, wireType 2 =*/42).string(message.plural);
                    if (message.singular != null && Object.hasOwnProperty.call(message, "singular"))
                        writer.uint32(/* id 6, wireType 2 =*/50).string(message.singular);
                    if (message.style != null && message.style.length) {
                        writer.uint32(/* id 10, wireType 2 =*/82).fork();
                        for (var i = 0; i < message.style.length; ++i)
                            writer.int32(message.style[i]);
                        writer.ldelim();
                    }
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceDescriptor message, length delimited. Does not implicitly {@link google.api.ResourceDescriptor.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.IResourceDescriptor} message ResourceDescriptor message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceDescriptor.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceDescriptor();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.string();
                            break;
                        case 2:
                            if (!(message.pattern && message.pattern.length))
                                message.pattern = [];
                            message.pattern.push(reader.string());
                            break;
                        case 3:
                            message.nameField = reader.string();
                            break;
                        case 4:
                            message.history = reader.int32();
                            break;
                        case 5:
                            message.plural = reader.string();
                            break;
                        case 6:
                            message.singular = reader.string();
                            break;
                        case 10:
                            if (!(message.style && message.style.length))
                                message.style = [];
                            if ((tag & 7) === 2) {
                                var end2 = reader.uint32() + reader.pos;
                                while (reader.pos < end2)
                                    message.style.push(reader.int32());
                            } else
                                message.style.push(reader.int32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceDescriptor message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceDescriptor.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceDescriptor message.
                 * @function verify
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceDescriptor.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.pattern != null && message.hasOwnProperty("pattern")) {
                        if (!Array.isArray(message.pattern))
                            return "pattern: array expected";
                        for (var i = 0; i < message.pattern.length; ++i)
                            if (!$util.isString(message.pattern[i]))
                                return "pattern: string[] expected";
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        if (!$util.isString(message.nameField))
                            return "nameField: string expected";
                    if (message.history != null && message.hasOwnProperty("history"))
                        switch (message.history) {
                        default:
                            return "history: enum value expected";
                        case 0:
                        case 1:
                        case 2:
                            break;
                        }
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        if (!$util.isString(message.plural))
                            return "plural: string expected";
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        if (!$util.isString(message.singular))
                            return "singular: string expected";
                    if (message.style != null && message.hasOwnProperty("style")) {
                        if (!Array.isArray(message.style))
                            return "style: array expected";
                        for (var i = 0; i < message.style.length; ++i)
                            switch (message.style[i]) {
                            default:
                                return "style: enum value[] expected";
                            case 0:
                            case 1:
                                break;
                            }
                    }
                    return null;
                };
    
                /**
                 * Creates a ResourceDescriptor message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceDescriptor} ResourceDescriptor
                 */
                ResourceDescriptor.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceDescriptor)
                        return object;
                    var message = new $root.google.api.ResourceDescriptor();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.pattern) {
                        if (!Array.isArray(object.pattern))
                            throw TypeError(".google.api.ResourceDescriptor.pattern: array expected");
                        message.pattern = [];
                        for (var i = 0; i < object.pattern.length; ++i)
                            message.pattern[i] = String(object.pattern[i]);
                    }
                    if (object.nameField != null)
                        message.nameField = String(object.nameField);
                    switch (object.history) {
                    case "HISTORY_UNSPECIFIED":
                    case 0:
                        message.history = 0;
                        break;
                    case "ORIGINALLY_SINGLE_PATTERN":
                    case 1:
                        message.history = 1;
                        break;
                    case "FUTURE_MULTI_PATTERN":
                    case 2:
                        message.history = 2;
                        break;
                    }
                    if (object.plural != null)
                        message.plural = String(object.plural);
                    if (object.singular != null)
                        message.singular = String(object.singular);
                    if (object.style) {
                        if (!Array.isArray(object.style))
                            throw TypeError(".google.api.ResourceDescriptor.style: array expected");
                        message.style = [];
                        for (var i = 0; i < object.style.length; ++i)
                            switch (object.style[i]) {
                            default:
                            case "STYLE_UNSPECIFIED":
                            case 0:
                                message.style[i] = 0;
                                break;
                            case "DECLARATIVE_FRIENDLY":
                            case 1:
                                message.style[i] = 1;
                                break;
                            }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceDescriptor message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceDescriptor
                 * @static
                 * @param {google.api.ResourceDescriptor} message ResourceDescriptor
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceDescriptor.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults) {
                        object.pattern = [];
                        object.style = [];
                    }
                    if (options.defaults) {
                        object.type = "";
                        object.nameField = "";
                        object.history = options.enums === String ? "HISTORY_UNSPECIFIED" : 0;
                        object.plural = "";
                        object.singular = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.pattern && message.pattern.length) {
                        object.pattern = [];
                        for (var j = 0; j < message.pattern.length; ++j)
                            object.pattern[j] = message.pattern[j];
                    }
                    if (message.nameField != null && message.hasOwnProperty("nameField"))
                        object.nameField = message.nameField;
                    if (message.history != null && message.hasOwnProperty("history"))
                        object.history = options.enums === String ? $root.google.api.ResourceDescriptor.History[message.history] : message.history;
                    if (message.plural != null && message.hasOwnProperty("plural"))
                        object.plural = message.plural;
                    if (message.singular != null && message.hasOwnProperty("singular"))
                        object.singular = message.singular;
                    if (message.style && message.style.length) {
                        object.style = [];
                        for (var j = 0; j < message.style.length; ++j)
                            object.style[j] = options.enums === String ? $root.google.api.ResourceDescriptor.Style[message.style[j]] : message.style[j];
                    }
                    return object;
                };
    
                /**
                 * Converts this ResourceDescriptor to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceDescriptor
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceDescriptor.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                /**
                 * History enum.
                 * @name google.api.ResourceDescriptor.History
                 * @enum {number}
                 * @property {number} HISTORY_UNSPECIFIED=0 HISTORY_UNSPECIFIED value
                 * @property {number} ORIGINALLY_SINGLE_PATTERN=1 ORIGINALLY_SINGLE_PATTERN value
                 * @property {number} FUTURE_MULTI_PATTERN=2 FUTURE_MULTI_PATTERN value
                 */
                ResourceDescriptor.History = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "HISTORY_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "ORIGINALLY_SINGLE_PATTERN"] = 1;
                    values[valuesById[2] = "FUTURE_MULTI_PATTERN"] = 2;
                    return values;
                })();
    
                /**
                 * Style enum.
                 * @name google.api.ResourceDescriptor.Style
                 * @enum {number}
                 * @property {number} STYLE_UNSPECIFIED=0 STYLE_UNSPECIFIED value
                 * @property {number} DECLARATIVE_FRIENDLY=1 DECLARATIVE_FRIENDLY value
                 */
                ResourceDescriptor.Style = (function() {
                    var valuesById = {}, values = Object.create(valuesById);
                    values[valuesById[0] = "STYLE_UNSPECIFIED"] = 0;
                    values[valuesById[1] = "DECLARATIVE_FRIENDLY"] = 1;
                    return values;
                })();
    
                return ResourceDescriptor;
            })();
    
            api.ResourceReference = (function() {
    
                /**
                 * Properties of a ResourceReference.
                 * @memberof google.api
                 * @interface IResourceReference
                 * @property {string|null} [type] ResourceReference type
                 * @property {string|null} [childType] ResourceReference childType
                 */
    
                /**
                 * Constructs a new ResourceReference.
                 * @memberof google.api
                 * @classdesc Represents a ResourceReference.
                 * @implements IResourceReference
                 * @constructor
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 */
                function ResourceReference(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ResourceReference type.
                 * @member {string} type
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.type = "";
    
                /**
                 * ResourceReference childType.
                 * @member {string} childType
                 * @memberof google.api.ResourceReference
                 * @instance
                 */
                ResourceReference.prototype.childType = "";
    
                /**
                 * Creates a new ResourceReference instance using the specified properties.
                 * @function create
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference=} [properties] Properties to set
                 * @returns {google.api.ResourceReference} ResourceReference instance
                 */
                ResourceReference.create = function create(properties) {
                    return new ResourceReference(properties);
                };
    
                /**
                 * Encodes the specified ResourceReference message. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.type);
                    if (message.childType != null && Object.hasOwnProperty.call(message, "childType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.childType);
                    return writer;
                };
    
                /**
                 * Encodes the specified ResourceReference message, length delimited. Does not implicitly {@link google.api.ResourceReference.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.IResourceReference} message ResourceReference message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ResourceReference.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.api.ResourceReference();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.type = reader.string();
                            break;
                        case 2:
                            message.childType = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ResourceReference message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.api.ResourceReference} ResourceReference
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ResourceReference.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ResourceReference message.
                 * @function verify
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ResourceReference.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.type != null && message.hasOwnProperty("type"))
                        if (!$util.isString(message.type))
                            return "type: string expected";
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        if (!$util.isString(message.childType))
                            return "childType: string expected";
                    return null;
                };
    
                /**
                 * Creates a ResourceReference message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.api.ResourceReference} ResourceReference
                 */
                ResourceReference.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.api.ResourceReference)
                        return object;
                    var message = new $root.google.api.ResourceReference();
                    if (object.type != null)
                        message.type = String(object.type);
                    if (object.childType != null)
                        message.childType = String(object.childType);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ResourceReference message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.api.ResourceReference
                 * @static
                 * @param {google.api.ResourceReference} message ResourceReference
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ResourceReference.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.type = "";
                        object.childType = "";
                    }
                    if (message.type != null && message.hasOwnProperty("type"))
                        object.type = message.type;
                    if (message.childType != null && message.hasOwnProperty("childType"))
                        object.childType = message.childType;
                    return object;
                };
    
                /**
                 * Converts this ResourceReference to JSON.
                 * @function toJSON
                 * @memberof google.api.ResourceReference
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ResourceReference.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ResourceReference;
            })();
    
            return api;
        })();
    
        google.longrunning = (function() {
    
            /**
             * Namespace longrunning.
             * @memberof google
             * @namespace
             */
            var longrunning = {};
    
            longrunning.Operations = (function() {
    
                /**
                 * Constructs a new Operations service.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operations
                 * @extends $protobuf.rpc.Service
                 * @constructor
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 */
                function Operations(rpcImpl, requestDelimited, responseDelimited) {
                    $protobuf.rpc.Service.call(this, rpcImpl, requestDelimited, responseDelimited);
                }
    
                (Operations.prototype = Object.create($protobuf.rpc.Service.prototype)).constructor = Operations;
    
                /**
                 * Creates new Operations service using the specified rpc implementation.
                 * @function create
                 * @memberof google.longrunning.Operations
                 * @static
                 * @param {$protobuf.RPCImpl} rpcImpl RPC implementation
                 * @param {boolean} [requestDelimited=false] Whether requests are length-delimited
                 * @param {boolean} [responseDelimited=false] Whether responses are length-delimited
                 * @returns {Operations} RPC service. Useful where requests and/or responses are streamed.
                 */
                Operations.create = function create(rpcImpl, requestDelimited, responseDelimited) {
                    return new this(rpcImpl, requestDelimited, responseDelimited);
                };
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#listOperations}.
                 * @memberof google.longrunning.Operations
                 * @typedef ListOperationsCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.ListOperationsResponse} [response] ListOperationsResponse
                 */
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @param {google.longrunning.Operations.ListOperationsCallback} callback Node-style callback called with the error, if any, and ListOperationsResponse
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.listOperations = function listOperations(request, callback) {
                    return this.rpcCall(listOperations, $root.google.longrunning.ListOperationsRequest, $root.google.longrunning.ListOperationsResponse, request, callback);
                }, "name", { value: "ListOperations" });
    
                /**
                 * Calls ListOperations.
                 * @function listOperations
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IListOperationsRequest} request ListOperationsRequest message or plain object
                 * @returns {Promise<google.longrunning.ListOperationsResponse>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#getOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef GetOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @param {google.longrunning.Operations.GetOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.getOperation = function getOperation(request, callback) {
                    return this.rpcCall(getOperation, $root.google.longrunning.GetOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "GetOperation" });
    
                /**
                 * Calls GetOperation.
                 * @function getOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IGetOperationRequest} request GetOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#deleteOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef DeleteOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @param {google.longrunning.Operations.DeleteOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.deleteOperation = function deleteOperation(request, callback) {
                    return this.rpcCall(deleteOperation, $root.google.longrunning.DeleteOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "DeleteOperation" });
    
                /**
                 * Calls DeleteOperation.
                 * @function deleteOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IDeleteOperationRequest} request DeleteOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#cancelOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef CancelOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.protobuf.Empty} [response] Empty
                 */
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @param {google.longrunning.Operations.CancelOperationCallback} callback Node-style callback called with the error, if any, and Empty
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.cancelOperation = function cancelOperation(request, callback) {
                    return this.rpcCall(cancelOperation, $root.google.longrunning.CancelOperationRequest, $root.google.protobuf.Empty, request, callback);
                }, "name", { value: "CancelOperation" });
    
                /**
                 * Calls CancelOperation.
                 * @function cancelOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.ICancelOperationRequest} request CancelOperationRequest message or plain object
                 * @returns {Promise<google.protobuf.Empty>} Promise
                 * @variation 2
                 */
    
                /**
                 * Callback as used by {@link google.longrunning.Operations#waitOperation}.
                 * @memberof google.longrunning.Operations
                 * @typedef WaitOperationCallback
                 * @type {function}
                 * @param {Error|null} error Error, if any
                 * @param {google.longrunning.Operation} [response] Operation
                 */
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @param {google.longrunning.Operations.WaitOperationCallback} callback Node-style callback called with the error, if any, and Operation
                 * @returns {undefined}
                 * @variation 1
                 */
                Object.defineProperty(Operations.prototype.waitOperation = function waitOperation(request, callback) {
                    return this.rpcCall(waitOperation, $root.google.longrunning.WaitOperationRequest, $root.google.longrunning.Operation, request, callback);
                }, "name", { value: "WaitOperation" });
    
                /**
                 * Calls WaitOperation.
                 * @function waitOperation
                 * @memberof google.longrunning.Operations
                 * @instance
                 * @param {google.longrunning.IWaitOperationRequest} request WaitOperationRequest message or plain object
                 * @returns {Promise<google.longrunning.Operation>} Promise
                 * @variation 2
                 */
    
                return Operations;
            })();
    
            longrunning.Operation = (function() {
    
                /**
                 * Properties of an Operation.
                 * @memberof google.longrunning
                 * @interface IOperation
                 * @property {string|null} [name] Operation name
                 * @property {google.protobuf.IAny|null} [metadata] Operation metadata
                 * @property {boolean|null} [done] Operation done
                 * @property {google.rpc.IStatus|null} [error] Operation error
                 * @property {google.protobuf.IAny|null} [response] Operation response
                 */
    
                /**
                 * Constructs a new Operation.
                 * @memberof google.longrunning
                 * @classdesc Represents an Operation.
                 * @implements IOperation
                 * @constructor
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 */
                function Operation(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Operation name.
                 * @member {string} name
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.name = "";
    
                /**
                 * Operation metadata.
                 * @member {google.protobuf.IAny|null|undefined} metadata
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.metadata = null;
    
                /**
                 * Operation done.
                 * @member {boolean} done
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.done = false;
    
                /**
                 * Operation error.
                 * @member {google.rpc.IStatus|null|undefined} error
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.error = null;
    
                /**
                 * Operation response.
                 * @member {google.protobuf.IAny|null|undefined} response
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Operation.prototype.response = null;
    
                // OneOf field names bound to virtual getters and setters
                var $oneOfFields;
    
                /**
                 * Operation result.
                 * @member {"error"|"response"|undefined} result
                 * @memberof google.longrunning.Operation
                 * @instance
                 */
                Object.defineProperty(Operation.prototype, "result", {
                    get: $util.oneOfGetter($oneOfFields = ["error", "response"]),
                    set: $util.oneOfSetter($oneOfFields)
                });
    
                /**
                 * Creates a new Operation instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation=} [properties] Properties to set
                 * @returns {google.longrunning.Operation} Operation instance
                 */
                Operation.create = function create(properties) {
                    return new Operation(properties);
                };
    
                /**
                 * Encodes the specified Operation message. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.metadata != null && Object.hasOwnProperty.call(message, "metadata"))
                        $root.google.protobuf.Any.encode(message.metadata, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    if (message.done != null && Object.hasOwnProperty.call(message, "done"))
                        writer.uint32(/* id 3, wireType 0 =*/24).bool(message.done);
                    if (message.error != null && Object.hasOwnProperty.call(message, "error"))
                        $root.google.rpc.Status.encode(message.error, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                    if (message.response != null && Object.hasOwnProperty.call(message, "response"))
                        $root.google.protobuf.Any.encode(message.response, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Operation message, length delimited. Does not implicitly {@link google.longrunning.Operation.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.IOperation} message Operation message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Operation.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.Operation();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.metadata = $root.google.protobuf.Any.decode(reader, reader.uint32());
                            break;
                        case 3:
                            message.done = reader.bool();
                            break;
                        case 4:
                            message.error = $root.google.rpc.Status.decode(reader, reader.uint32());
                            break;
                        case 5:
                            message.response = $root.google.protobuf.Any.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an Operation message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.Operation} Operation
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Operation.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an Operation message.
                 * @function verify
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Operation.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    var properties = {};
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.metadata != null && message.hasOwnProperty("metadata")) {
                        var error = $root.google.protobuf.Any.verify(message.metadata);
                        if (error)
                            return "metadata." + error;
                    }
                    if (message.done != null && message.hasOwnProperty("done"))
                        if (typeof message.done !== "boolean")
                            return "done: boolean expected";
                    if (message.error != null && message.hasOwnProperty("error")) {
                        properties.result = 1;
                        {
                            var error = $root.google.rpc.Status.verify(message.error);
                            if (error)
                                return "error." + error;
                        }
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        if (properties.result === 1)
                            return "result: multiple values";
                        properties.result = 1;
                        {
                            var error = $root.google.protobuf.Any.verify(message.response);
                            if (error)
                                return "response." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates an Operation message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.Operation} Operation
                 */
                Operation.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.Operation)
                        return object;
                    var message = new $root.google.longrunning.Operation();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.metadata != null) {
                        if (typeof object.metadata !== "object")
                            throw TypeError(".google.longrunning.Operation.metadata: object expected");
                        message.metadata = $root.google.protobuf.Any.fromObject(object.metadata);
                    }
                    if (object.done != null)
                        message.done = Boolean(object.done);
                    if (object.error != null) {
                        if (typeof object.error !== "object")
                            throw TypeError(".google.longrunning.Operation.error: object expected");
                        message.error = $root.google.rpc.Status.fromObject(object.error);
                    }
                    if (object.response != null) {
                        if (typeof object.response !== "object")
                            throw TypeError(".google.longrunning.Operation.response: object expected");
                        message.response = $root.google.protobuf.Any.fromObject(object.response);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from an Operation message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.Operation
                 * @static
                 * @param {google.longrunning.Operation} message Operation
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Operation.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.metadata = null;
                        object.done = false;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.metadata != null && message.hasOwnProperty("metadata"))
                        object.metadata = $root.google.protobuf.Any.toObject(message.metadata, options);
                    if (message.done != null && message.hasOwnProperty("done"))
                        object.done = message.done;
                    if (message.error != null && message.hasOwnProperty("error")) {
                        object.error = $root.google.rpc.Status.toObject(message.error, options);
                        if (options.oneofs)
                            object.result = "error";
                    }
                    if (message.response != null && message.hasOwnProperty("response")) {
                        object.response = $root.google.protobuf.Any.toObject(message.response, options);
                        if (options.oneofs)
                            object.result = "response";
                    }
                    return object;
                };
    
                /**
                 * Converts this Operation to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.Operation
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Operation.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Operation;
            })();
    
            longrunning.GetOperationRequest = (function() {
    
                /**
                 * Properties of a GetOperationRequest.
                 * @memberof google.longrunning
                 * @interface IGetOperationRequest
                 * @property {string|null} [name] GetOperationRequest name
                 */
    
                /**
                 * Constructs a new GetOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a GetOperationRequest.
                 * @implements IGetOperationRequest
                 * @constructor
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 */
                function GetOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * GetOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 */
                GetOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new GetOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest instance
                 */
                GetOperationRequest.create = function create(properties) {
                    return new GetOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified GetOperationRequest message. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified GetOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.GetOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.IGetOperationRequest} message GetOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                GetOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.GetOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a GetOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                GetOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a GetOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                GetOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a GetOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.GetOperationRequest} GetOperationRequest
                 */
                GetOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.GetOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.GetOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a GetOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.GetOperationRequest
                 * @static
                 * @param {google.longrunning.GetOperationRequest} message GetOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                GetOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this GetOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.GetOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                GetOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return GetOperationRequest;
            })();
    
            longrunning.ListOperationsRequest = (function() {
    
                /**
                 * Properties of a ListOperationsRequest.
                 * @memberof google.longrunning
                 * @interface IListOperationsRequest
                 * @property {string|null} [name] ListOperationsRequest name
                 * @property {string|null} [filter] ListOperationsRequest filter
                 * @property {number|null} [pageSize] ListOperationsRequest pageSize
                 * @property {string|null} [pageToken] ListOperationsRequest pageToken
                 */
    
                /**
                 * Constructs a new ListOperationsRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsRequest.
                 * @implements IListOperationsRequest
                 * @constructor
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 */
                function ListOperationsRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.name = "";
    
                /**
                 * ListOperationsRequest filter.
                 * @member {string} filter
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.filter = "";
    
                /**
                 * ListOperationsRequest pageSize.
                 * @member {number} pageSize
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageSize = 0;
    
                /**
                 * ListOperationsRequest pageToken.
                 * @member {string} pageToken
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 */
                ListOperationsRequest.prototype.pageToken = "";
    
                /**
                 * Creates a new ListOperationsRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest instance
                 */
                ListOperationsRequest.create = function create(properties) {
                    return new ListOperationsRequest(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.filter != null && Object.hasOwnProperty.call(message, "filter"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.filter);
                    if (message.pageSize != null && Object.hasOwnProperty.call(message, "pageSize"))
                        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.pageSize);
                    if (message.pageToken != null && Object.hasOwnProperty.call(message, "pageToken"))
                        writer.uint32(/* id 3, wireType 2 =*/26).string(message.pageToken);
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 4, wireType 2 =*/34).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsRequest message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.IListOperationsRequest} message ListOperationsRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 4:
                            message.name = reader.string();
                            break;
                        case 1:
                            message.filter = reader.string();
                            break;
                        case 2:
                            message.pageSize = reader.int32();
                            break;
                        case 3:
                            message.pageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsRequest message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        if (!$util.isString(message.filter))
                            return "filter: string expected";
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        if (!$util.isInteger(message.pageSize))
                            return "pageSize: integer expected";
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        if (!$util.isString(message.pageToken))
                            return "pageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsRequest} ListOperationsRequest
                 */
                ListOperationsRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsRequest)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.filter != null)
                        message.filter = String(object.filter);
                    if (object.pageSize != null)
                        message.pageSize = object.pageSize | 0;
                    if (object.pageToken != null)
                        message.pageToken = String(object.pageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsRequest
                 * @static
                 * @param {google.longrunning.ListOperationsRequest} message ListOperationsRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.filter = "";
                        object.pageSize = 0;
                        object.pageToken = "";
                        object.name = "";
                    }
                    if (message.filter != null && message.hasOwnProperty("filter"))
                        object.filter = message.filter;
                    if (message.pageSize != null && message.hasOwnProperty("pageSize"))
                        object.pageSize = message.pageSize;
                    if (message.pageToken != null && message.hasOwnProperty("pageToken"))
                        object.pageToken = message.pageToken;
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ListOperationsRequest;
            })();
    
            longrunning.ListOperationsResponse = (function() {
    
                /**
                 * Properties of a ListOperationsResponse.
                 * @memberof google.longrunning
                 * @interface IListOperationsResponse
                 * @property {Array.<google.longrunning.IOperation>|null} [operations] ListOperationsResponse operations
                 * @property {string|null} [nextPageToken] ListOperationsResponse nextPageToken
                 */
    
                /**
                 * Constructs a new ListOperationsResponse.
                 * @memberof google.longrunning
                 * @classdesc Represents a ListOperationsResponse.
                 * @implements IListOperationsResponse
                 * @constructor
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 */
                function ListOperationsResponse(properties) {
                    this.operations = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * ListOperationsResponse operations.
                 * @member {Array.<google.longrunning.IOperation>} operations
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.operations = $util.emptyArray;
    
                /**
                 * ListOperationsResponse nextPageToken.
                 * @member {string} nextPageToken
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 */
                ListOperationsResponse.prototype.nextPageToken = "";
    
                /**
                 * Creates a new ListOperationsResponse instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse=} [properties] Properties to set
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse instance
                 */
                ListOperationsResponse.create = function create(properties) {
                    return new ListOperationsResponse(properties);
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.operations != null && message.operations.length)
                        for (var i = 0; i < message.operations.length; ++i)
                            $root.google.longrunning.Operation.encode(message.operations[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                    if (message.nextPageToken != null && Object.hasOwnProperty.call(message, "nextPageToken"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.nextPageToken);
                    return writer;
                };
    
                /**
                 * Encodes the specified ListOperationsResponse message, length delimited. Does not implicitly {@link google.longrunning.ListOperationsResponse.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.IListOperationsResponse} message ListOperationsResponse message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                ListOperationsResponse.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.ListOperationsResponse();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            if (!(message.operations && message.operations.length))
                                message.operations = [];
                            message.operations.push($root.google.longrunning.Operation.decode(reader, reader.uint32()));
                            break;
                        case 2:
                            message.nextPageToken = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a ListOperationsResponse message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                ListOperationsResponse.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a ListOperationsResponse message.
                 * @function verify
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                ListOperationsResponse.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.operations != null && message.hasOwnProperty("operations")) {
                        if (!Array.isArray(message.operations))
                            return "operations: array expected";
                        for (var i = 0; i < message.operations.length; ++i) {
                            var error = $root.google.longrunning.Operation.verify(message.operations[i]);
                            if (error)
                                return "operations." + error;
                        }
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        if (!$util.isString(message.nextPageToken))
                            return "nextPageToken: string expected";
                    return null;
                };
    
                /**
                 * Creates a ListOperationsResponse message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.ListOperationsResponse} ListOperationsResponse
                 */
                ListOperationsResponse.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.ListOperationsResponse)
                        return object;
                    var message = new $root.google.longrunning.ListOperationsResponse();
                    if (object.operations) {
                        if (!Array.isArray(object.operations))
                            throw TypeError(".google.longrunning.ListOperationsResponse.operations: array expected");
                        message.operations = [];
                        for (var i = 0; i < object.operations.length; ++i) {
                            if (typeof object.operations[i] !== "object")
                                throw TypeError(".google.longrunning.ListOperationsResponse.operations: object expected");
                            message.operations[i] = $root.google.longrunning.Operation.fromObject(object.operations[i]);
                        }
                    }
                    if (object.nextPageToken != null)
                        message.nextPageToken = String(object.nextPageToken);
                    return message;
                };
    
                /**
                 * Creates a plain object from a ListOperationsResponse message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.ListOperationsResponse
                 * @static
                 * @param {google.longrunning.ListOperationsResponse} message ListOperationsResponse
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                ListOperationsResponse.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.operations = [];
                    if (options.defaults)
                        object.nextPageToken = "";
                    if (message.operations && message.operations.length) {
                        object.operations = [];
                        for (var j = 0; j < message.operations.length; ++j)
                            object.operations[j] = $root.google.longrunning.Operation.toObject(message.operations[j], options);
                    }
                    if (message.nextPageToken != null && message.hasOwnProperty("nextPageToken"))
                        object.nextPageToken = message.nextPageToken;
                    return object;
                };
    
                /**
                 * Converts this ListOperationsResponse to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.ListOperationsResponse
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                ListOperationsResponse.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return ListOperationsResponse;
            })();
    
            longrunning.CancelOperationRequest = (function() {
    
                /**
                 * Properties of a CancelOperationRequest.
                 * @memberof google.longrunning
                 * @interface ICancelOperationRequest
                 * @property {string|null} [name] CancelOperationRequest name
                 */
    
                /**
                 * Constructs a new CancelOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a CancelOperationRequest.
                 * @implements ICancelOperationRequest
                 * @constructor
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 */
                function CancelOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * CancelOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 */
                CancelOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new CancelOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest instance
                 */
                CancelOperationRequest.create = function create(properties) {
                    return new CancelOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified CancelOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.CancelOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.ICancelOperationRequest} message CancelOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                CancelOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.CancelOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a CancelOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                CancelOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a CancelOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                CancelOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a CancelOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.CancelOperationRequest} CancelOperationRequest
                 */
                CancelOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.CancelOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.CancelOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a CancelOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.CancelOperationRequest
                 * @static
                 * @param {google.longrunning.CancelOperationRequest} message CancelOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                CancelOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this CancelOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.CancelOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                CancelOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return CancelOperationRequest;
            })();
    
            longrunning.DeleteOperationRequest = (function() {
    
                /**
                 * Properties of a DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @interface IDeleteOperationRequest
                 * @property {string|null} [name] DeleteOperationRequest name
                 */
    
                /**
                 * Constructs a new DeleteOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a DeleteOperationRequest.
                 * @implements IDeleteOperationRequest
                 * @constructor
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 */
                function DeleteOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * DeleteOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 */
                DeleteOperationRequest.prototype.name = "";
    
                /**
                 * Creates a new DeleteOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest instance
                 */
                DeleteOperationRequest.create = function create(properties) {
                    return new DeleteOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    return writer;
                };
    
                /**
                 * Encodes the specified DeleteOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.DeleteOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.IDeleteOperationRequest} message DeleteOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                DeleteOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.DeleteOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a DeleteOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                DeleteOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a DeleteOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                DeleteOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    return null;
                };
    
                /**
                 * Creates a DeleteOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.DeleteOperationRequest} DeleteOperationRequest
                 */
                DeleteOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.DeleteOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.DeleteOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    return message;
                };
    
                /**
                 * Creates a plain object from a DeleteOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @static
                 * @param {google.longrunning.DeleteOperationRequest} message DeleteOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                DeleteOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults)
                        object.name = "";
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    return object;
                };
    
                /**
                 * Converts this DeleteOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.DeleteOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                DeleteOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return DeleteOperationRequest;
            })();
    
            longrunning.WaitOperationRequest = (function() {
    
                /**
                 * Properties of a WaitOperationRequest.
                 * @memberof google.longrunning
                 * @interface IWaitOperationRequest
                 * @property {string|null} [name] WaitOperationRequest name
                 * @property {google.protobuf.IDuration|null} [timeout] WaitOperationRequest timeout
                 */
    
                /**
                 * Constructs a new WaitOperationRequest.
                 * @memberof google.longrunning
                 * @classdesc Represents a WaitOperationRequest.
                 * @implements IWaitOperationRequest
                 * @constructor
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 */
                function WaitOperationRequest(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * WaitOperationRequest name.
                 * @member {string} name
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.name = "";
    
                /**
                 * WaitOperationRequest timeout.
                 * @member {google.protobuf.IDuration|null|undefined} timeout
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 */
                WaitOperationRequest.prototype.timeout = null;
    
                /**
                 * Creates a new WaitOperationRequest instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest=} [properties] Properties to set
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest instance
                 */
                WaitOperationRequest.create = function create(properties) {
                    return new WaitOperationRequest(properties);
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);
                    if (message.timeout != null && Object.hasOwnProperty.call(message, "timeout"))
                        $root.google.protobuf.Duration.encode(message.timeout, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified WaitOperationRequest message, length delimited. Does not implicitly {@link google.longrunning.WaitOperationRequest.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.IWaitOperationRequest} message WaitOperationRequest message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                WaitOperationRequest.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.WaitOperationRequest();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.name = reader.string();
                            break;
                        case 2:
                            message.timeout = $root.google.protobuf.Duration.decode(reader, reader.uint32());
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a WaitOperationRequest message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                WaitOperationRequest.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a WaitOperationRequest message.
                 * @function verify
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                WaitOperationRequest.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.name != null && message.hasOwnProperty("name"))
                        if (!$util.isString(message.name))
                            return "name: string expected";
                    if (message.timeout != null && message.hasOwnProperty("timeout")) {
                        var error = $root.google.protobuf.Duration.verify(message.timeout);
                        if (error)
                            return "timeout." + error;
                    }
                    return null;
                };
    
                /**
                 * Creates a WaitOperationRequest message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.WaitOperationRequest} WaitOperationRequest
                 */
                WaitOperationRequest.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.WaitOperationRequest)
                        return object;
                    var message = new $root.google.longrunning.WaitOperationRequest();
                    if (object.name != null)
                        message.name = String(object.name);
                    if (object.timeout != null) {
                        if (typeof object.timeout !== "object")
                            throw TypeError(".google.longrunning.WaitOperationRequest.timeout: object expected");
                        message.timeout = $root.google.protobuf.Duration.fromObject(object.timeout);
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a WaitOperationRequest message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.WaitOperationRequest
                 * @static
                 * @param {google.longrunning.WaitOperationRequest} message WaitOperationRequest
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                WaitOperationRequest.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.name = "";
                        object.timeout = null;
                    }
                    if (message.name != null && message.hasOwnProperty("name"))
                        object.name = message.name;
                    if (message.timeout != null && message.hasOwnProperty("timeout"))
                        object.timeout = $root.google.protobuf.Duration.toObject(message.timeout, options);
                    return object;
                };
    
                /**
                 * Converts this WaitOperationRequest to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.WaitOperationRequest
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                WaitOperationRequest.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return WaitOperationRequest;
            })();
    
            longrunning.OperationInfo = (function() {
    
                /**
                 * Properties of an OperationInfo.
                 * @memberof google.longrunning
                 * @interface IOperationInfo
                 * @property {string|null} [responseType] OperationInfo responseType
                 * @property {string|null} [metadataType] OperationInfo metadataType
                 */
    
                /**
                 * Constructs a new OperationInfo.
                 * @memberof google.longrunning
                 * @classdesc Represents an OperationInfo.
                 * @implements IOperationInfo
                 * @constructor
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 */
                function OperationInfo(properties) {
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * OperationInfo responseType.
                 * @member {string} responseType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.responseType = "";
    
                /**
                 * OperationInfo metadataType.
                 * @member {string} metadataType
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 */
                OperationInfo.prototype.metadataType = "";
    
                /**
                 * Creates a new OperationInfo instance using the specified properties.
                 * @function create
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo=} [properties] Properties to set
                 * @returns {google.longrunning.OperationInfo} OperationInfo instance
                 */
                OperationInfo.create = function create(properties) {
                    return new OperationInfo(properties);
                };
    
                /**
                 * Encodes the specified OperationInfo message. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.responseType != null && Object.hasOwnProperty.call(message, "responseType"))
                        writer.uint32(/* id 1, wireType 2 =*/10).string(message.responseType);
                    if (message.metadataType != null && Object.hasOwnProperty.call(message, "metadataType"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.metadataType);
                    return writer;
                };
    
                /**
                 * Encodes the specified OperationInfo message, length delimited. Does not implicitly {@link google.longrunning.OperationInfo.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.IOperationInfo} message OperationInfo message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                OperationInfo.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.longrunning.OperationInfo();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.responseType = reader.string();
                            break;
                        case 2:
                            message.metadataType = reader.string();
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes an OperationInfo message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                OperationInfo.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies an OperationInfo message.
                 * @function verify
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                OperationInfo.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        if (!$util.isString(message.responseType))
                            return "responseType: string expected";
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        if (!$util.isString(message.metadataType))
                            return "metadataType: string expected";
                    return null;
                };
    
                /**
                 * Creates an OperationInfo message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.longrunning.OperationInfo} OperationInfo
                 */
                OperationInfo.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.longrunning.OperationInfo)
                        return object;
                    var message = new $root.google.longrunning.OperationInfo();
                    if (object.responseType != null)
                        message.responseType = String(object.responseType);
                    if (object.metadataType != null)
                        message.metadataType = String(object.metadataType);
                    return message;
                };
    
                /**
                 * Creates a plain object from an OperationInfo message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.longrunning.OperationInfo
                 * @static
                 * @param {google.longrunning.OperationInfo} message OperationInfo
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                OperationInfo.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.defaults) {
                        object.responseType = "";
                        object.metadataType = "";
                    }
                    if (message.responseType != null && message.hasOwnProperty("responseType"))
                        object.responseType = message.responseType;
                    if (message.metadataType != null && message.hasOwnProperty("metadataType"))
                        object.metadataType = message.metadataType;
                    return object;
                };
    
                /**
                 * Converts this OperationInfo to JSON.
                 * @function toJSON
                 * @memberof google.longrunning.OperationInfo
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                OperationInfo.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return OperationInfo;
            })();
    
            return longrunning;
        })();
    
        google.rpc = (function() {
    
            /**
             * Namespace rpc.
             * @memberof google
             * @namespace
             */
            var rpc = {};
    
            rpc.Status = (function() {
    
                /**
                 * Properties of a Status.
                 * @memberof google.rpc
                 * @interface IStatus
                 * @property {number|null} [code] Status code
                 * @property {string|null} [message] Status message
                 * @property {Array.<google.protobuf.IAny>|null} [details] Status details
                 */
    
                /**
                 * Constructs a new Status.
                 * @memberof google.rpc
                 * @classdesc Represents a Status.
                 * @implements IStatus
                 * @constructor
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 */
                function Status(properties) {
                    this.details = [];
                    if (properties)
                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                            if (properties[keys[i]] != null)
                                this[keys[i]] = properties[keys[i]];
                }
    
                /**
                 * Status code.
                 * @member {number} code
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.code = 0;
    
                /**
                 * Status message.
                 * @member {string} message
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.message = "";
    
                /**
                 * Status details.
                 * @member {Array.<google.protobuf.IAny>} details
                 * @memberof google.rpc.Status
                 * @instance
                 */
                Status.prototype.details = $util.emptyArray;
    
                /**
                 * Creates a new Status instance using the specified properties.
                 * @function create
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus=} [properties] Properties to set
                 * @returns {google.rpc.Status} Status instance
                 */
                Status.create = function create(properties) {
                    return new Status(properties);
                };
    
                /**
                 * Encodes the specified Status message. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encode = function encode(message, writer) {
                    if (!writer)
                        writer = $Writer.create();
                    if (message.code != null && Object.hasOwnProperty.call(message, "code"))
                        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.code);
                    if (message.message != null && Object.hasOwnProperty.call(message, "message"))
                        writer.uint32(/* id 2, wireType 2 =*/18).string(message.message);
                    if (message.details != null && message.details.length)
                        for (var i = 0; i < message.details.length; ++i)
                            $root.google.protobuf.Any.encode(message.details[i], writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                    return writer;
                };
    
                /**
                 * Encodes the specified Status message, length delimited. Does not implicitly {@link google.rpc.Status.verify|verify} messages.
                 * @function encodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.IStatus} message Status message or plain object to encode
                 * @param {$protobuf.Writer} [writer] Writer to encode to
                 * @returns {$protobuf.Writer} Writer
                 */
                Status.encodeDelimited = function encodeDelimited(message, writer) {
                    return this.encode(message, writer).ldelim();
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer.
                 * @function decode
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @param {number} [length] Message length if known beforehand
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decode = function decode(reader, length) {
                    if (!(reader instanceof $Reader))
                        reader = $Reader.create(reader);
                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.rpc.Status();
                    while (reader.pos < end) {
                        var tag = reader.uint32();
                        switch (tag >>> 3) {
                        case 1:
                            message.code = reader.int32();
                            break;
                        case 2:
                            message.message = reader.string();
                            break;
                        case 3:
                            if (!(message.details && message.details.length))
                                message.details = [];
                            message.details.push($root.google.protobuf.Any.decode(reader, reader.uint32()));
                            break;
                        default:
                            reader.skipType(tag & 7);
                            break;
                        }
                    }
                    return message;
                };
    
                /**
                 * Decodes a Status message from the specified reader or buffer, length delimited.
                 * @function decodeDelimited
                 * @memberof google.rpc.Status
                 * @static
                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                 * @returns {google.rpc.Status} Status
                 * @throws {Error} If the payload is not a reader or valid buffer
                 * @throws {$protobuf.util.ProtocolError} If required fields are missing
                 */
                Status.decodeDelimited = function decodeDelimited(reader) {
                    if (!(reader instanceof $Reader))
                        reader = new $Reader(reader);
                    return this.decode(reader, reader.uint32());
                };
    
                /**
                 * Verifies a Status message.
                 * @function verify
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} message Plain object to verify
                 * @returns {string|null} `null` if valid, otherwise the reason why it is not
                 */
                Status.verify = function verify(message) {
                    if (typeof message !== "object" || message === null)
                        return "object expected";
                    if (message.code != null && message.hasOwnProperty("code"))
                        if (!$util.isInteger(message.code))
                            return "code: integer expected";
                    if (message.message != null && message.hasOwnProperty("message"))
                        if (!$util.isString(message.message))
                            return "message: string expected";
                    if (message.details != null && message.hasOwnProperty("details")) {
                        if (!Array.isArray(message.details))
                            return "details: array expected";
                        for (var i = 0; i < message.details.length; ++i) {
                            var error = $root.google.protobuf.Any.verify(message.details[i]);
                            if (error)
                                return "details." + error;
                        }
                    }
                    return null;
                };
    
                /**
                 * Creates a Status message from a plain object. Also converts values to their respective internal types.
                 * @function fromObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {Object.<string,*>} object Plain object
                 * @returns {google.rpc.Status} Status
                 */
                Status.fromObject = function fromObject(object) {
                    if (object instanceof $root.google.rpc.Status)
                        return object;
                    var message = new $root.google.rpc.Status();
                    if (object.code != null)
                        message.code = object.code | 0;
                    if (object.message != null)
                        message.message = String(object.message);
                    if (object.details) {
                        if (!Array.isArray(object.details))
                            throw TypeError(".google.rpc.Status.details: array expected");
                        message.details = [];
                        for (var i = 0; i < object.details.length; ++i) {
                            if (typeof object.details[i] !== "object")
                                throw TypeError(".google.rpc.Status.details: object expected");
                            message.details[i] = $root.google.protobuf.Any.fromObject(object.details[i]);
                        }
                    }
                    return message;
                };
    
                /**
                 * Creates a plain object from a Status message. Also converts values to other types if specified.
                 * @function toObject
                 * @memberof google.rpc.Status
                 * @static
                 * @param {google.rpc.Status} message Status
                 * @param {$protobuf.IConversionOptions} [options] Conversion options
                 * @returns {Object.<string,*>} Plain object
                 */
                Status.toObject = function toObject(message, options) {
                    if (!options)
                        options = {};
                    var object = {};
                    if (options.arrays || options.defaults)
                        object.details = [];
                    if (options.defaults) {
                        object.code = 0;
                        object.message = "";
                    }
                    if (message.code != null && message.hasOwnProperty("code"))
                        object.code = message.code;
                    if (message.message != null && message.hasOwnProperty("message"))
                        object.message = message.message;
                    if (message.details && message.details.length) {
                        object.details = [];
                        for (var j = 0; j < message.details.length; ++j)
                            object.details[j] = $root.google.protobuf.Any.toObject(message.details[j], options);
                    }
                    return object;
                };
    
                /**
                 * Converts this Status to JSON.
                 * @function toJSON
                 * @memberof google.rpc.Status
                 * @instance
                 * @returns {Object.<string,*>} JSON object
                 */
                Status.prototype.toJSON = function toJSON() {
                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                };
    
                return Status;
            })();
    
            return rpc;
        })();
    
        return google;
    })();

    return $root;
});
